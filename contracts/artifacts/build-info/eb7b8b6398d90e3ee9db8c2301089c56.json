{
	"id": "eb7b8b6398d90e3ee9db8c2301089c56",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NftMint.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract FractionalNFT is ERC1155, Ownable {\r\n    uint256 public currentTokenID = 0;\r\n    mapping(uint256 => uint256) public tokenSupply;\r\n\r\n    constructor(address initialOwner) ERC1155(\"https://mytoken.com/api/token/{id}.json\") Ownable(initialOwner) {}\r\n\r\n    function createToken(uint256 initialSupply) external onlyOwner returns (uint256) {\r\n        uint256 tokenId = currentTokenID;\r\n        currentTokenID++;\r\n        _mint(msg.sender, tokenId, initialSupply, \"\");\r\n        tokenSupply[tokenId] = initialSupply;\r\n        return tokenId;\r\n    }\r\n\r\n    function mint(address to, uint256 tokenId, uint256 amount) external onlyOwner {\r\n        require(tokenSupply[tokenId] > 0, \"Token ID does not exist\");\r\n        _mint(to, tokenId, amount, \"\");\r\n        tokenSupply[tokenId] += amount;\r\n    }\r\n\r\n    function burn(address from, uint256 tokenId, uint256 amount) external {\r\n        require(balanceOf(from, tokenId) >= amount, \"Insufficient balance to burn\");\r\n        _burn(from, tokenId, amount);\r\n        tokenSupply[tokenId] -= amount;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f9cfcdfd73b4ba8363273c8dd601b1a4feadc1cbfde410777c91fdfb5971b81164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f9cfcdfd73b4ba8363273c8dd601b1a4feadc1cbfde410777c91fdfb5971b81164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xCF 0xCD REVERT PUSH20 0xB4BA8363273C8DD601B1A4FEADC1CBFDE410777C SWAP2 REVERT 0xFB MSIZE PUSH18 0xB81164736F6C634300081900330000000000 ",
							"sourceMap": "276:4526:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f9cfcdfd73b4ba8363273c8dd601b1a4feadc1cbfde410777c91fdfb5971b81164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xCF 0xCD REVERT PUSH20 0xB4BA8363273C8DD601B1A4FEADC1CBFDE410777C SWAP2 REVERT 0xFB MSIZE PUSH18 0xB81164736F6C634300081900330000000000 ",
							"sourceMap": "276:4526:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9cfcdfd73b4ba8363273c8dd601b1a4feadc1cbfde410777c91fdfb5971b81164736f6c63430008190033",
									".code": [
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/NftMint.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x1F PUSH31 0x6FFA154B5AB493A9AFE982EA25312076F3D20EFA211B038F476023B0EB6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1245:2685:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x1F PUSH31 0x6FFA154B5AB493A9AFE982EA25312076F3D20EFA211B038F476023B0EB6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1245:2685:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/NftMint.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/NftMint.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NftMint.sol": {
				"FractionalNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"name": "createToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentTokenID",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NftMint.sol\":177:1228  contract FractionalNFT is ERC1155, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NftMint.sol\":259:260  0 */\n  0x00\n    /* \"contracts/NftMint.sol\":227:260  uint256 public currentTokenID = 0 */\n  0x04\n  sstore\n    /* \"contracts/NftMint.sol\":322:431  constructor(address initialOwner) ERC1155(\"https://mytoken.com/api/token/{id}.json\") Ownable(initialOwner) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/NftMint.sol\":415:427  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_fd42e37e574d3160d6bf72b4767f7c9049458802dae3537f42a2e54dd3e11af5\n  0x27\n  swap2\n  codecopy\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1301:1305  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1300  _setURI */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/NftMint.sol\":322:431  constructor(address initialOwner) ERC1155(\"https://mytoken.com/api/token/{id}.json\") Ownable(initialOwner) {} */\n  pop\n    /* \"contracts/NftMint.sol\":177:1228  contract FractionalNFT is ERC1155, Ownable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  swap1\n  dup2\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x03\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x03\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_23:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_25:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_26:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_56\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_25\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_27:\n    /* \"#utility.yul\":641:665   */\n  tag_58\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_59:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_28:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_61\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_27\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_64\n  tag_23\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":932:1051   */\ntag_63:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_65\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_28\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_29:\n    /* \"#utility.yul\":1289:1313   */\n  tag_67\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_26\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_13:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_69\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_29\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1554:1653   */\ntag_30:\n    /* \"#utility.yul\":1606:1612   */\n  0x00\n    /* \"#utility.yul\":1640:1645   */\n  dup2\n    /* \"#utility.yul\":1634:1646   */\n  mload\n    /* \"#utility.yul\":1624:1646   */\n  swap1\n  pop\n    /* \"#utility.yul\":1554:1653   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1659:1839   */\ntag_31:\n    /* \"#utility.yul\":1707:1784   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1704:1705   */\n  0x00\n    /* \"#utility.yul\":1697:1785   */\n  mstore\n    /* \"#utility.yul\":1804:1808   */\n  0x41\n    /* \"#utility.yul\":1801:1802   */\n  0x04\n    /* \"#utility.yul\":1794:1809   */\n  mstore\n    /* \"#utility.yul\":1828:1832   */\n  0x24\n    /* \"#utility.yul\":1825:1826   */\n  0x00\n    /* \"#utility.yul\":1818:1833   */\n  revert\n    /* \"#utility.yul\":1845:2025   */\ntag_32:\n    /* \"#utility.yul\":1893:1970   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1890:1891   */\n  0x00\n    /* \"#utility.yul\":1883:1971   */\n  mstore\n    /* \"#utility.yul\":1990:1994   */\n  0x22\n    /* \"#utility.yul\":1987:1988   */\n  0x04\n    /* \"#utility.yul\":1980:1995   */\n  mstore\n    /* \"#utility.yul\":2014:2018   */\n  0x24\n    /* \"#utility.yul\":2011:2012   */\n  0x00\n    /* \"#utility.yul\":2004:2019   */\n  revert\n    /* \"#utility.yul\":2031:2351   */\ntag_33:\n    /* \"#utility.yul\":2075:2081   */\n  0x00\n    /* \"#utility.yul\":2112:2113   */\n  0x02\n    /* \"#utility.yul\":2106:2110   */\n  dup3\n    /* \"#utility.yul\":2102:2114   */\n  div\n    /* \"#utility.yul\":2092:2114   */\n  swap1\n  pop\n    /* \"#utility.yul\":2159:2160   */\n  0x01\n    /* \"#utility.yul\":2153:2157   */\n  dup3\n    /* \"#utility.yul\":2149:2161   */\n  and\n    /* \"#utility.yul\":2180:2198   */\n  dup1\n    /* \"#utility.yul\":2170:2251   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2236:2240   */\n  0x7f\n    /* \"#utility.yul\":2228:2234   */\n  dup3\n    /* \"#utility.yul\":2224:2241   */\n  and\n    /* \"#utility.yul\":2214:2241   */\n  swap2\n  pop\n    /* \"#utility.yul\":2170:2251   */\ntag_74:\n    /* \"#utility.yul\":2298:2300   */\n  0x20\n    /* \"#utility.yul\":2290:2296   */\n  dup3\n    /* \"#utility.yul\":2287:2301   */\n  lt\n    /* \"#utility.yul\":2267:2285   */\n  dup2\n    /* \"#utility.yul\":2264:2302   */\n  sub\n    /* \"#utility.yul\":2261:2345   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2317:2335   */\n  tag_76\n  tag_32\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2261:2345   */\ntag_75:\n    /* \"#utility.yul\":2082:2351   */\n  pop\n    /* \"#utility.yul\":2031:2351   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2357:2498   */\ntag_34:\n    /* \"#utility.yul\":2406:2410   */\n  0x00\n    /* \"#utility.yul\":2429:2432   */\n  dup2\n    /* \"#utility.yul\":2421:2432   */\n  swap1\n  pop\n    /* \"#utility.yul\":2452:2455   */\n  dup2\n    /* \"#utility.yul\":2449:2450   */\n  0x00\n    /* \"#utility.yul\":2442:2456   */\n  mstore\n    /* \"#utility.yul\":2486:2490   */\n  0x20\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2473:2491   */\n  keccak256\n    /* \"#utility.yul\":2465:2491   */\n  swap1\n  pop\n    /* \"#utility.yul\":2357:2498   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2504:2597   */\ntag_35:\n    /* \"#utility.yul\":2541:2547   */\n  0x00\n    /* \"#utility.yul\":2588:2590   */\n  0x20\n    /* \"#utility.yul\":2583:2585   */\n  0x1f\n    /* \"#utility.yul\":2576:2581   */\n  dup4\n    /* \"#utility.yul\":2572:2586   */\n  add\n    /* \"#utility.yul\":2568:2591   */\n  div\n    /* \"#utility.yul\":2558:2591   */\n  swap1\n  pop\n    /* \"#utility.yul\":2504:2597   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2603:2710   */\ntag_36:\n    /* \"#utility.yul\":2647:2655   */\n  0x00\n    /* \"#utility.yul\":2697:2702   */\n  dup3\n    /* \"#utility.yul\":2691:2695   */\n  dup3\n    /* \"#utility.yul\":2687:2703   */\n  shl\n    /* \"#utility.yul\":2666:2703   */\n  swap1\n  pop\n    /* \"#utility.yul\":2603:2710   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2716:3109   */\ntag_37:\n    /* \"#utility.yul\":2785:2791   */\n  0x00\n    /* \"#utility.yul\":2835:2836   */\n  0x08\n    /* \"#utility.yul\":2823:2833   */\n  dup4\n    /* \"#utility.yul\":2819:2837   */\n  mul\n    /* \"#utility.yul\":2858:2955   */\n  tag_81\n    /* \"#utility.yul\":2888:2954   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2877:2886   */\n  dup3\n    /* \"#utility.yul\":2858:2955   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2976:3015   */\n  tag_82\n    /* \"#utility.yul\":3006:3014   */\n  dup7\n    /* \"#utility.yul\":2995:3004   */\n  dup4\n    /* \"#utility.yul\":2976:3015   */\n  tag_36\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2964:3015   */\n  swap6\n  pop\n    /* \"#utility.yul\":3048:3052   */\n  dup1\n    /* \"#utility.yul\":3044:3053   */\n  not\n    /* \"#utility.yul\":3037:3042   */\n  dup5\n    /* \"#utility.yul\":3033:3054   */\n  and\n    /* \"#utility.yul\":3024:3054   */\n  swap4\n  pop\n    /* \"#utility.yul\":3097:3101   */\n  dup1\n    /* \"#utility.yul\":3087:3095   */\n  dup7\n    /* \"#utility.yul\":3083:3102   */\n  and\n    /* \"#utility.yul\":3076:3081   */\n  dup5\n    /* \"#utility.yul\":3073:3103   */\n  or\n    /* \"#utility.yul\":3063:3103   */\n  swap3\n  pop\n    /* \"#utility.yul\":2792:3109   */\n  pop\n  pop\n    /* \"#utility.yul\":2716:3109   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3115:3192   */\ntag_38:\n    /* \"#utility.yul\":3152:3159   */\n  0x00\n    /* \"#utility.yul\":3181:3186   */\n  dup2\n    /* \"#utility.yul\":3170:3186   */\n  swap1\n  pop\n    /* \"#utility.yul\":3115:3192   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3198:3258   */\ntag_39:\n    /* \"#utility.yul\":3226:3229   */\n  0x00\n    /* \"#utility.yul\":3247:3252   */\n  dup2\n    /* \"#utility.yul\":3240:3252   */\n  swap1\n  pop\n    /* \"#utility.yul\":3198:3258   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3264:3406   */\ntag_40:\n    /* \"#utility.yul\":3314:3323   */\n  0x00\n    /* \"#utility.yul\":3347:3400   */\n  tag_86\n    /* \"#utility.yul\":3365:3399   */\n  tag_87\n    /* \"#utility.yul\":3374:3398   */\n  tag_88\n    /* \"#utility.yul\":3392:3397   */\n  dup5\n    /* \"#utility.yul\":3374:3398   */\n  tag_38\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3365:3399   */\n  tag_39\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3347:3400   */\n  tag_38\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3334:3400   */\n  swap1\n  pop\n    /* \"#utility.yul\":3264:3406   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3412:3487   */\ntag_41:\n    /* \"#utility.yul\":3455:3458   */\n  0x00\n    /* \"#utility.yul\":3476:3481   */\n  dup2\n    /* \"#utility.yul\":3469:3481   */\n  swap1\n  pop\n    /* \"#utility.yul\":3412:3487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3493:3762   */\ntag_42:\n    /* \"#utility.yul\":3603:3642   */\n  tag_91\n    /* \"#utility.yul\":3634:3641   */\n  dup4\n    /* \"#utility.yul\":3603:3642   */\n  tag_40\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3664:3755   */\n  tag_92\n    /* \"#utility.yul\":3713:3754   */\n  tag_93\n    /* \"#utility.yul\":3737:3753   */\n  dup3\n    /* \"#utility.yul\":3713:3754   */\n  tag_41\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3705:3711   */\n  dup5\n    /* \"#utility.yul\":3698:3702   */\n  dup5\n    /* \"#utility.yul\":3692:3703   */\n  sload\n    /* \"#utility.yul\":3664:3755   */\n  tag_37\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3658:3662   */\n  dup3\n    /* \"#utility.yul\":3651:3756   */\n  sstore\n    /* \"#utility.yul\":3569:3762   */\n  pop\n    /* \"#utility.yul\":3493:3762   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3768:3841   */\ntag_43:\n    /* \"#utility.yul\":3813:3816   */\n  0x00\n    /* \"#utility.yul\":3768:3841   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3847:4036   */\ntag_44:\n    /* \"#utility.yul\":3924:3956   */\n  tag_96\n  tag_43\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3965:4030   */\n  tag_97\n    /* \"#utility.yul\":4023:4029   */\n  dup2\n    /* \"#utility.yul\":4015:4021   */\n  dup5\n    /* \"#utility.yul\":4009:4013   */\n  dup5\n    /* \"#utility.yul\":3965:4030   */\n  tag_42\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3900:4036   */\n  pop\n    /* \"#utility.yul\":3847:4036   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4042:4228   */\ntag_45:\n    /* \"#utility.yul\":4102:4222   */\ntag_99:\n    /* \"#utility.yul\":4119:4122   */\n  dup2\n    /* \"#utility.yul\":4112:4117   */\n  dup2\n    /* \"#utility.yul\":4109:4123   */\n  lt\n    /* \"#utility.yul\":4102:4222   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4173:4212   */\n  tag_102\n    /* \"#utility.yul\":4210:4211   */\n  0x00\n    /* \"#utility.yul\":4203:4208   */\n  dup3\n    /* \"#utility.yul\":4173:4212   */\n  tag_44\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4146:4147   */\n  0x01\n    /* \"#utility.yul\":4139:4144   */\n  dup2\n    /* \"#utility.yul\":4135:4148   */\n  add\n    /* \"#utility.yul\":4126:4148   */\n  swap1\n  pop\n    /* \"#utility.yul\":4102:4222   */\n  jump(tag_99)\ntag_101:\n    /* \"#utility.yul\":4042:4228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4234:4777   */\ntag_46:\n    /* \"#utility.yul\":4335:4337   */\n  0x1f\n    /* \"#utility.yul\":4330:4333   */\n  dup3\n    /* \"#utility.yul\":4327:4338   */\n  gt\n    /* \"#utility.yul\":4324:4770   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4369:4407   */\n  tag_105\n    /* \"#utility.yul\":4401:4406   */\n  dup2\n    /* \"#utility.yul\":4369:4407   */\n  tag_34\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4453:4482   */\n  tag_106\n    /* \"#utility.yul\":4471:4481   */\n  dup5\n    /* \"#utility.yul\":4453:4482   */\n  tag_35\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4443:4451   */\n  dup2\n    /* \"#utility.yul\":4439:4483   */\n  add\n    /* \"#utility.yul\":4636:4638   */\n  0x20\n    /* \"#utility.yul\":4624:4634   */\n  dup6\n    /* \"#utility.yul\":4621:4639   */\n  lt\n    /* \"#utility.yul\":4618:4667   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":4657:4665   */\n  dup2\n    /* \"#utility.yul\":4642:4665   */\n  swap1\n  pop\n    /* \"#utility.yul\":4618:4667   */\ntag_107:\n    /* \"#utility.yul\":4680:4760   */\n  tag_108\n    /* \"#utility.yul\":4736:4758   */\n  tag_109\n    /* \"#utility.yul\":4754:4757   */\n  dup6\n    /* \"#utility.yul\":4736:4758   */\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4726:4734   */\n  dup4\n    /* \"#utility.yul\":4722:4759   */\n  add\n    /* \"#utility.yul\":4709:4720   */\n  dup3\n    /* \"#utility.yul\":4680:4760   */\n  tag_45\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4339:4770   */\n  pop\n  pop\n    /* \"#utility.yul\":4324:4770   */\ntag_104:\n    /* \"#utility.yul\":4234:4777   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4783:4900   */\ntag_47:\n    /* \"#utility.yul\":4837:4845   */\n  0x00\n    /* \"#utility.yul\":4887:4892   */\n  dup3\n    /* \"#utility.yul\":4881:4885   */\n  dup3\n    /* \"#utility.yul\":4877:4893   */\n  shr\n    /* \"#utility.yul\":4856:4893   */\n  swap1\n  pop\n    /* \"#utility.yul\":4783:4900   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4906:5075   */\ntag_48:\n    /* \"#utility.yul\":4950:4956   */\n  0x00\n    /* \"#utility.yul\":4983:5034   */\n  tag_112\n    /* \"#utility.yul\":5031:5032   */\n  0x00\n    /* \"#utility.yul\":5027:5033   */\n  not\n    /* \"#utility.yul\":5019:5024   */\n  dup5\n    /* \"#utility.yul\":5016:5017   */\n  0x08\n    /* \"#utility.yul\":5012:5025   */\n  mul\n    /* \"#utility.yul\":4983:5034   */\n  tag_47\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4979:5035   */\n  not\n    /* \"#utility.yul\":5064:5068   */\n  dup1\n    /* \"#utility.yul\":5058:5062   */\n  dup4\n    /* \"#utility.yul\":5054:5069   */\n  and\n    /* \"#utility.yul\":5044:5069   */\n  swap2\n  pop\n    /* \"#utility.yul\":4957:5075   */\n  pop\n    /* \"#utility.yul\":4906:5075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5080:5375   */\ntag_49:\n    /* \"#utility.yul\":5156:5160   */\n  0x00\n    /* \"#utility.yul\":5302:5331   */\n  tag_114\n    /* \"#utility.yul\":5327:5330   */\n  dup4\n    /* \"#utility.yul\":5321:5325   */\n  dup4\n    /* \"#utility.yul\":5302:5331   */\n  tag_48\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5294:5331   */\n  swap2\n  pop\n    /* \"#utility.yul\":5364:5367   */\n  dup3\n    /* \"#utility.yul\":5361:5362   */\n  0x02\n    /* \"#utility.yul\":5357:5368   */\n  mul\n    /* \"#utility.yul\":5351:5355   */\n  dup3\n    /* \"#utility.yul\":5348:5369   */\n  or\n    /* \"#utility.yul\":5340:5369   */\n  swap1\n  pop\n    /* \"#utility.yul\":5080:5375   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5380:6775   */\ntag_20:\n    /* \"#utility.yul\":5497:5534   */\n  tag_116\n    /* \"#utility.yul\":5530:5533   */\n  dup3\n    /* \"#utility.yul\":5497:5534   */\n  tag_30\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5599:5617   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5591:5597   */\n  dup2\n    /* \"#utility.yul\":5588:5618   */\n  gt\n    /* \"#utility.yul\":5585:5641   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":5621:5639   */\n  tag_118\n  tag_31\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5585:5641   */\ntag_117:\n    /* \"#utility.yul\":5665:5703   */\n  tag_119\n    /* \"#utility.yul\":5697:5701   */\n  dup3\n    /* \"#utility.yul\":5691:5702   */\n  sload\n    /* \"#utility.yul\":5665:5703   */\n  tag_33\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5750:5817   */\n  tag_120\n    /* \"#utility.yul\":5810:5816   */\n  dup3\n    /* \"#utility.yul\":5802:5808   */\n  dup3\n    /* \"#utility.yul\":5796:5800   */\n  dup6\n    /* \"#utility.yul\":5750:5817   */\n  tag_46\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5844:5845   */\n  0x00\n    /* \"#utility.yul\":5868:5872   */\n  0x20\n    /* \"#utility.yul\":5855:5872   */\n  swap1\n  pop\n    /* \"#utility.yul\":5900:5902   */\n  0x1f\n    /* \"#utility.yul\":5892:5898   */\n  dup4\n    /* \"#utility.yul\":5889:5903   */\n  gt\n    /* \"#utility.yul\":5917:5918   */\n  0x01\n    /* \"#utility.yul\":5912:6530   */\n  dup2\n  eq\n  tag_122\n  jumpi\n    /* \"#utility.yul\":6574:6575   */\n  0x00\n    /* \"#utility.yul\":6591:6597   */\n  dup5\n    /* \"#utility.yul\":6588:6665   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6640:6649   */\n  dup3\n    /* \"#utility.yul\":6635:6638   */\n  dup8\n    /* \"#utility.yul\":6631:6650   */\n  add\n    /* \"#utility.yul\":6625:6651   */\n  mload\n    /* \"#utility.yul\":6616:6651   */\n  swap1\n  pop\n    /* \"#utility.yul\":6588:6665   */\ntag_123:\n    /* \"#utility.yul\":6691:6758   */\n  tag_124\n    /* \"#utility.yul\":6751:6757   */\n  dup6\n    /* \"#utility.yul\":6744:6749   */\n  dup3\n    /* \"#utility.yul\":6691:6758   */\n  tag_49\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6685:6689   */\n  dup7\n    /* \"#utility.yul\":6678:6759   */\n  sstore\n    /* \"#utility.yul\":6547:6769   */\n  pop\n    /* \"#utility.yul\":5882:6769   */\n  jump(tag_121)\n    /* \"#utility.yul\":5912:6530   */\ntag_122:\n    /* \"#utility.yul\":5964:5968   */\n  0x1f\n    /* \"#utility.yul\":5960:5969   */\n  not\n    /* \"#utility.yul\":5952:5958   */\n  dup5\n    /* \"#utility.yul\":5948:5970   */\n  and\n    /* \"#utility.yul\":5998:6035   */\n  tag_125\n    /* \"#utility.yul\":6030:6034   */\n  dup7\n    /* \"#utility.yul\":5998:6035   */\n  tag_34\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6057:6058   */\n  0x00\n    /* \"#utility.yul\":6071:6279   */\ntag_126:\n    /* \"#utility.yul\":6085:6092   */\n  dup3\n    /* \"#utility.yul\":6082:6083   */\n  dup2\n    /* \"#utility.yul\":6079:6093   */\n  lt\n    /* \"#utility.yul\":6071:6279   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":6164:6173   */\n  dup5\n    /* \"#utility.yul\":6159:6162   */\n  dup10\n    /* \"#utility.yul\":6155:6174   */\n  add\n    /* \"#utility.yul\":6149:6175   */\n  mload\n    /* \"#utility.yul\":6141:6147   */\n  dup3\n    /* \"#utility.yul\":6134:6176   */\n  sstore\n    /* \"#utility.yul\":6215:6216   */\n  0x01\n    /* \"#utility.yul\":6207:6213   */\n  dup3\n    /* \"#utility.yul\":6203:6217   */\n  add\n    /* \"#utility.yul\":6193:6217   */\n  swap2\n  pop\n    /* \"#utility.yul\":6262:6264   */\n  0x20\n    /* \"#utility.yul\":6251:6260   */\n  dup6\n    /* \"#utility.yul\":6247:6265   */\n  add\n    /* \"#utility.yul\":6234:6265   */\n  swap5\n  pop\n    /* \"#utility.yul\":6108:6112   */\n  0x20\n    /* \"#utility.yul\":6105:6106   */\n  dup2\n    /* \"#utility.yul\":6101:6113   */\n  add\n    /* \"#utility.yul\":6096:6113   */\n  swap1\n  pop\n    /* \"#utility.yul\":6071:6279   */\n  jump(tag_126)\ntag_128:\n    /* \"#utility.yul\":6307:6313   */\n  dup7\n    /* \"#utility.yul\":6298:6305   */\n  dup4\n    /* \"#utility.yul\":6295:6314   */\n  lt\n    /* \"#utility.yul\":6292:6471   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":6365:6374   */\n  dup5\n    /* \"#utility.yul\":6360:6363   */\n  dup10\n    /* \"#utility.yul\":6356:6375   */\n  add\n    /* \"#utility.yul\":6350:6376   */\n  mload\n    /* \"#utility.yul\":6408:6456   */\n  tag_130\n    /* \"#utility.yul\":6450:6454   */\n  0x1f\n    /* \"#utility.yul\":6442:6448   */\n  dup10\n    /* \"#utility.yul\":6438:6455   */\n  and\n    /* \"#utility.yul\":6427:6436   */\n  dup3\n    /* \"#utility.yul\":6408:6456   */\n  tag_48\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6400:6406   */\n  dup4\n    /* \"#utility.yul\":6393:6457   */\n  sstore\n    /* \"#utility.yul\":6315:6471   */\n  pop\n    /* \"#utility.yul\":6292:6471   */\ntag_129:\n    /* \"#utility.yul\":6517:6518   */\n  0x01\n    /* \"#utility.yul\":6513:6514   */\n  0x02\n    /* \"#utility.yul\":6505:6511   */\n  dup9\n    /* \"#utility.yul\":6501:6515   */\n  mul\n    /* \"#utility.yul\":6497:6519   */\n  add\n    /* \"#utility.yul\":6491:6495   */\n  dup9\n    /* \"#utility.yul\":6484:6520   */\n  sstore\n    /* \"#utility.yul\":5919:6530   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5882:6769   */\ntag_121:\n  pop\n    /* \"#utility.yul\":5472:6775   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5380:6775   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/NftMint.sol\":177:1228  contract FractionalNFT is ERC1155, Ownable {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_fd42e37e574d3160d6bf72b4767f7c9049458802dae3537f42a2e54dd3e11af5 68747470733a2f2f6d79746f6b656e2e636f6d2f6170692f746f6b656e2f7b69647d2e6a736f6e\n\nsub_0: assembly {\n        /* \"contracts/NftMint.sol\":177:1228  contract FractionalNFT is ERC1155, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xe985e9c5\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf5298aca\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbb62115e\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x2693ebf2\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x2693ebf2\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2d571cc4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x156e29f6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NftMint.sol\":734:973  function mint(address to, uint256 tokenId, uint256 amount) external onlyOwner {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/NftMint.sol\":267:313  mapping(uint256 => uint256) public tokenSupply */\n    tag_7:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NftMint.sol\":439:726  function createToken(uint256 initialSupply) external onlyOwner returns (uint256) {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_10:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_13:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/NftMint.sol\":227:260  uint256 public currentTokenID = 0 */\n    tag_14:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_16:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/NftMint.sol\":981:1225  function burn(address from, uint256 tokenId, uint256 amount) external {... */\n    tag_18:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2324:2331  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2359  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2360:2362  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2364:2371  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2343:2372  return _balances[id][account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1482:1486  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1532:1558  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1528  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_93\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1589:1626  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1585  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_94\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1666:1677  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1665  super.supportsInterface */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1678  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2144:2157  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2176:2180  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2169:2180  return _uri */\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_100\n      swap1\n      tag_99\n      jump\t// in\n    tag_100:\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_102\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_101)\n    tag_102:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_103:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_103\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NftMint.sol\":734:973  function mint(address to, uint256 tokenId, uint256 amount) external onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_105:\n        /* \"contracts/NftMint.sol\":854:855  0 */\n      0x00\n        /* \"contracts/NftMint.sol\":831:842  tokenSupply */\n      0x05\n        /* \"contracts/NftMint.sol\":831:851  tokenSupply[tokenId] */\n      0x00\n        /* \"contracts/NftMint.sol\":843:850  tokenId */\n      dup5\n        /* \"contracts/NftMint.sol\":831:851  tokenSupply[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NftMint.sol\":831:855  tokenSupply[tokenId] > 0 */\n      gt\n        /* \"contracts/NftMint.sol\":823:883  require(tokenSupply[tokenId] > 0, \"Token ID does not exist\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/NftMint.sol\":894:924  _mint(to, tokenId, amount, \"\") */\n      tag_111\n        /* \"contracts/NftMint.sol\":900:902  to */\n      dup4\n        /* \"contracts/NftMint.sol\":904:911  tokenId */\n      dup4\n        /* \"contracts/NftMint.sol\":913:919  amount */\n      dup4\n        /* \"contracts/NftMint.sol\":894:924  _mint(to, tokenId, amount, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/NftMint.sol\":894:899  _mint */\n      tag_112\n        /* \"contracts/NftMint.sol\":894:924  _mint(to, tokenId, amount, \"\") */\n      jump\t// in\n    tag_111:\n        /* \"contracts/NftMint.sol\":959:965  amount */\n      dup1\n        /* \"contracts/NftMint.sol\":935:946  tokenSupply */\n      0x05\n        /* \"contracts/NftMint.sol\":935:955  tokenSupply[tokenId] */\n      0x00\n        /* \"contracts/NftMint.sol\":947:954  tokenId */\n      dup5\n        /* \"contracts/NftMint.sol\":935:955  tokenSupply[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NftMint.sol\":935:965  tokenSupply[tokenId] += amount */\n      dup3\n      dup3\n      sload\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NftMint.sol\":734:973  function mint(address to, uint256 tokenId, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NftMint.sol\":267:313  mapping(uint256 => uint256) public tokenSupply */\n    tag_46:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/NftMint.sol\":439:726  function createToken(uint256 initialSupply) external onlyOwner returns (uint256) {... */\n    tag_50:\n        /* \"contracts/NftMint.sol\":511:518  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"contracts/NftMint.sol\":531:546  uint256 tokenId */\n      0x00\n        /* \"contracts/NftMint.sol\":549:563  currentTokenID */\n      sload(0x04)\n        /* \"contracts/NftMint.sol\":531:563  uint256 tokenId = currentTokenID */\n      swap1\n      pop\n        /* \"contracts/NftMint.sol\":574:588  currentTokenID */\n      0x04\n      0x00\n        /* \"contracts/NftMint.sol\":574:590  currentTokenID++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/NftMint.sol\":601:646  _mint(msg.sender, tokenId, initialSupply, \"\") */\n      tag_120\n        /* \"contracts/NftMint.sol\":607:617  msg.sender */\n      caller\n        /* \"contracts/NftMint.sol\":619:626  tokenId */\n      dup3\n        /* \"contracts/NftMint.sol\":628:641  initialSupply */\n      dup6\n        /* \"contracts/NftMint.sol\":601:646  _mint(msg.sender, tokenId, initialSupply, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/NftMint.sol\":601:606  _mint */\n      tag_112\n        /* \"contracts/NftMint.sol\":601:646  _mint(msg.sender, tokenId, initialSupply, \"\") */\n      jump\t// in\n    tag_120:\n        /* \"contracts/NftMint.sol\":680:693  initialSupply */\n      dup3\n        /* \"contracts/NftMint.sol\":657:668  tokenSupply */\n      0x05\n        /* \"contracts/NftMint.sol\":657:677  tokenSupply[tokenId] */\n      0x00\n        /* \"contracts/NftMint.sol\":669:676  tokenId */\n      dup4\n        /* \"contracts/NftMint.sol\":657:677  tokenSupply[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NftMint.sol\":657:693  tokenSupply[tokenId] = initialSupply */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NftMint.sol\":711:718  tokenId */\n      dup1\n        /* \"contracts/NftMint.sol\":704:718  return tokenId */\n      swap2\n      pop\n      pop\n        /* \"contracts/NftMint.sol\":439:726  function createToken(uint256 initialSupply) external onlyOwner returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4222  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4235  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4237  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4259:4265  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4255  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_124\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4287:4291  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4293:4299  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4286  isApprovedForAll */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4300  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4352:4358  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4360:4364  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4408:4412  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4414:4416  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4418:4421  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4423:4429  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4435  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4407  _safeBatchTransferFrom */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4198:4443  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2660:2676  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2714  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2721  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2700  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2707  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2721  accounts.length != ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2773  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2780  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2790  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2797  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2849  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2874  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2881  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2852:2882  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_135\n      jumpi\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n    tag_135:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_138:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2882  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2898:2907  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2925  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2932  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2914  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2932  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3011  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:2990  accounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3009  accounts.unsafeMemoryAccess */\n      tag_144\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3037:3038  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3017  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3036  ids.unsafeMemoryAccess */\n      tag_146\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:2981  balanceOf */\n      tag_25\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2966  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2967:2968  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2969  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_147\n      jumpi\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n    tag_147:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:3040  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2934:2937  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_139)\n    tag_140:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3068:3081  batchBalances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3061:3081  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3270  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3274:3282  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3284:3292  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3259  _setApprovalForAll */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NftMint.sol\":227:260  uint256 public currentTokenID = 0 */\n    tag_73:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3457:3461  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3498  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3499:3506  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3508:3516  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3517  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3728  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3741  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3743  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3765:3771  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3761  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_163\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3793:3797  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3805  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3792  isApprovedForAll */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3775:3806  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3858:3864  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3866:3870  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3909:3913  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3915:3917  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3919:3921  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3923:3928  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3930:3934  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3908  _safeTransferFrom */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3704:3942  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NftMint.sol\":981:1225  function burn(address from, uint256 tokenId, uint256 amount) external {... */\n    tag_90:\n        /* \"contracts/NftMint.sol\":1098:1104  amount */\n      dup1\n        /* \"contracts/NftMint.sol\":1070:1094  balanceOf(from, tokenId) */\n      tag_176\n        /* \"contracts/NftMint.sol\":1080:1084  from */\n      dup5\n        /* \"contracts/NftMint.sol\":1086:1093  tokenId */\n      dup5\n        /* \"contracts/NftMint.sol\":1070:1079  balanceOf */\n      tag_25\n        /* \"contracts/NftMint.sol\":1070:1094  balanceOf(from, tokenId) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/NftMint.sol\":1070:1104  balanceOf(from, tokenId) >= amount */\n      lt\n      iszero\n        /* \"contracts/NftMint.sol\":1062:1137  require(balanceOf(from, tokenId) >= amount, \"Insufficient balance to burn\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/NftMint.sol\":1148:1176  _burn(from, tokenId, amount) */\n      tag_180\n        /* \"contracts/NftMint.sol\":1154:1158  from */\n      dup4\n        /* \"contracts/NftMint.sol\":1160:1167  tokenId */\n      dup4\n        /* \"contracts/NftMint.sol\":1169:1175  amount */\n      dup4\n        /* \"contracts/NftMint.sol\":1148:1153  _burn */\n      tag_181\n        /* \"contracts/NftMint.sol\":1148:1176  _burn(from, tokenId, amount) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/NftMint.sol\":1211:1217  amount */\n      dup1\n        /* \"contracts/NftMint.sol\":1187:1198  tokenSupply */\n      0x05\n        /* \"contracts/NftMint.sol\":1187:1207  tokenSupply[tokenId] */\n      0x00\n        /* \"contracts/NftMint.sol\":1199:1206  tokenId */\n      dup5\n        /* \"contracts/NftMint.sol\":1187:1207  tokenSupply[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NftMint.sol\":1187:1217  tokenSupply[tokenId] -= amount */\n      dup3\n      dup3\n      sload\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NftMint.sol\":981:1225  function burn(address from, uint256 tokenId, uint256 amount) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10856:10857  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10844  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10912:10913  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10936:10956  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10958:10981  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11004:11006  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11008:11013  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11003  _asSingletonArrays */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10935:11014  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11059:11060  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11063:11065  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11067:11070  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11072:11078  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11080:11084  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11050  _updateWithAcceptanceCheck */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10828:11092  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9222:9223  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9210  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9278:9279  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9321:9322  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9309  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9375:9376  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9425:9429  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9431:9433  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9435:9438  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9440:9446  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9448:9452  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9424  _updateWithAcceptanceCheck */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4689:4700  address res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4772:4775  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4761:4765  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4756:4759  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4752:4766  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4735:4784  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4290:4301  uint256 res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4378:4382  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4373:4376  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4369:4383  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4362:4366  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4357:4360  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4353:4367  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4349:4384  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4343:4385  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4336:4385  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x03\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13395:13396  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13383  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13451:13452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      0xced3e10000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13512:13520  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13492  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13493:13498  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13500:13508  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13520  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13557:13565  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13550:13555  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13567:13575  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_211\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8287:8288  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8343:8344  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8386:8387  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8374  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n      tag_215\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8440:8441  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8464:8484  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8486:8509  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8532:8534  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8536:8541  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8531  _asSingletonArrays */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8463:8542  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8579:8583  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8585:8587  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8589:8592  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8594:8600  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8602:8606  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8578  _updateWithAcceptanceCheck */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8259:8614  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12099:12428  function _burn(address from, uint256 id, uint256 value) internal {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12194:12195  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12196  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12182  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12196  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12174:12262  if (from == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12248:12249  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12219:12251  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12174:12262  if (from == address(0)) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12272:12292  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12294:12317  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12350  _asSingletonArrays(id, value) */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12340:12342  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12344:12349  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12339  _asSingletonArrays */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12350  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12271:12350  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12387:12391  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12401:12402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12405:12408  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12410:12416  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12386  _updateWithAcceptanceCheck */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12164:12428  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12099:12428  function _burn(address from, uint256 id, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16213:16236  uint256[] memory array2 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16358:16379  array1 := mload(0x40) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16436:16442  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16582:16590  element1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16567:16573  array1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16704:16708  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16696:16702  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16682:16709  array2 := add(array1, 0x40) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16737:16738  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16729:16735  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16778:16786  element2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16771:16775  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16763:16769  array2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16907:16911  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16899:16905  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16889:16893  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7213:7217  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7219:7221  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7228:7234  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7263:7264  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7251  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7297  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7310  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7312  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7333  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7401:7402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7381  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7400  ids.unsafeMemoryAccess */\n      tag_146\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7403  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7463:7464  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7443  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7462  values.unsafeMemoryAccess */\n      tag_146\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7465  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7524:7528  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7530:7532  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7534:7536  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7538:7543  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7545:7549  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      jump(tag_235)\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7635:7639  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7641:7643  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7650:7656  values */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7658:7662  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7267:7688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5285  values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5344  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5359  values */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5417  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5419  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5435:5444  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5451  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5495  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5521:5522  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5501  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5520  ids.unsafeMemoryAccess */\n      tag_146\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5523  uint256 id = ids.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5550  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5579:5580  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5559  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5578  values.unsafeMemoryAccess */\n      tag_146\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5581  uint256 value = values.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5616:5617  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5604  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5670:5672  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5674:5678  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5679  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5715:5720  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5712  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5778:5782  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5784:5795  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5797:5802  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5804:5806  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      0x03dee4c500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5978:5983  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5952:5954  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5956:5960  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5620:6016  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6048:6049  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6036  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6080:6082  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6084:6086  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      dup3\n      dup3\n      sload\n      tag_252\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_252:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5471:6121  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_242)\n    tag_243:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6202:6203  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6182  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6201  ids.unsafeMemoryAccess */\n      tag_146\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6260:6261  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6240  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6259  values.unsafeMemoryAccess */\n      tag_146\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6262  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6312:6314  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6306:6310  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6316:6318  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6320:6325  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_256\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      jump(tag_257)\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6392:6394  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6386:6390  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6401:6407  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_258\n      swap3\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13984:13985  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13969  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14022:14024  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14054:14058  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14060:14062  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14069  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14071:14075  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_264\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_265\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      0x01\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_267\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_272\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_271)\n    tag_272:\n      0x60\n      swap2\n      pop\n    tag_271:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14487:14489  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14657:14663  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14651:14664  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14642:14648  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14638:14640  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14634:14649  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14627:14665  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14137:14180  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14133  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14273:14275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14077:14309  returns (bytes4 response) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15171:15172  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15156  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15168  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15172  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15209:15211  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15235  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15244  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15246:15250  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15252:15255  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15257:15263  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15265:15269  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_283\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_284\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_284:\n      0x01\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_285\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_290\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_289)\n    tag_290:\n      0x60\n      swap2\n      pop\n    tag_289:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15606:15607  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15595  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15602  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15607  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15716:15718  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15693:15719  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15886:15892  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15880:15893  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15871:15877  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15867:15869  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15863:15878  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15856:15894  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15361:15409  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15357  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15502:15504  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15271:15538  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_297:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_298:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_299:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_300:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_301:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_359\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_300\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_302:\n        /* \"#utility.yul\":641:665   */\n      tag_361\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_301\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_362:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_303:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_364\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_302\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_304:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_305:\n        /* \"#utility.yul\":997:1021   */\n      tag_367\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_304\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_368:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_306:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_370\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_305\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_24:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_373\n      tag_298\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":1290:1409   */\n    tag_372:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_374\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_303\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_375\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_306\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_307:\n        /* \"#utility.yul\":1764:1788   */\n      tag_377\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_304\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_27:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_379\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_307\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_308:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_309:\n        /* \"#utility.yul\":2256:2279   */\n      tag_382\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_308\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_383:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_310:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_385\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_309\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_30:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_388\n      tag_298\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2528:2647   */\n    tag_387:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_389\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_310\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_311:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_312:\n        /* \"#utility.yul\":2963:2984   */\n      tag_392\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_311\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_33:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_394\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_312\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_36:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_397\n      tag_298\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":3289:3408   */\n    tag_396:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_398\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_306\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3647   */\n    tag_313:\n        /* \"#utility.yul\":3600:3606   */\n      0x00\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3640   */\n      mload\n        /* \"#utility.yul\":3618:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3822   */\n    tag_314:\n        /* \"#utility.yul\":3737:3748   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup3\n        /* \"#utility.yul\":3766:3769   */\n      dup3\n        /* \"#utility.yul\":3759:3778   */\n      mstore\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3806:3809   */\n      dup3\n        /* \"#utility.yul\":3802:3816   */\n      add\n        /* \"#utility.yul\":3787:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:3967   */\n    tag_315:\n        /* \"#utility.yul\":3917:3923   */\n      dup3\n        /* \"#utility.yul\":3912:3915   */\n      dup2\n        /* \"#utility.yul\":3907:3910   */\n      dup4\n        /* \"#utility.yul\":3901:3924   */\n      mcopy\n        /* \"#utility.yul\":3958:3959   */\n      0x00\n        /* \"#utility.yul\":3949:3955   */\n      dup4\n        /* \"#utility.yul\":3944:3947   */\n      dup4\n        /* \"#utility.yul\":3940:3956   */\n      add\n        /* \"#utility.yul\":3933:3960   */\n      mstore\n        /* \"#utility.yul\":3828:3967   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3973:4075   */\n    tag_316:\n        /* \"#utility.yul\":4014:4020   */\n      0x00\n        /* \"#utility.yul\":4065:4067   */\n      0x1f\n        /* \"#utility.yul\":4061:4068   */\n      not\n        /* \"#utility.yul\":4056:4058   */\n      0x1f\n        /* \"#utility.yul\":4049:4054   */\n      dup4\n        /* \"#utility.yul\":4045:4059   */\n      add\n        /* \"#utility.yul\":4041:4069   */\n      and\n        /* \"#utility.yul\":4031:4069   */\n      swap1\n      pop\n        /* \"#utility.yul\":3973:4075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4081:4458   */\n    tag_317:\n        /* \"#utility.yul\":4169:4172   */\n      0x00\n        /* \"#utility.yul\":4197:4236   */\n      tag_404\n        /* \"#utility.yul\":4230:4235   */\n      dup3\n        /* \"#utility.yul\":4197:4236   */\n      tag_313\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4252:4323   */\n      tag_405\n        /* \"#utility.yul\":4316:4322   */\n      dup2\n        /* \"#utility.yul\":4311:4314   */\n      dup6\n        /* \"#utility.yul\":4252:4323   */\n      tag_314\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4245:4323   */\n      swap4\n      pop\n        /* \"#utility.yul\":4332:4397   */\n      tag_406\n        /* \"#utility.yul\":4390:4396   */\n      dup2\n        /* \"#utility.yul\":4385:4388   */\n      dup6\n        /* \"#utility.yul\":4378:4382   */\n      0x20\n        /* \"#utility.yul\":4371:4376   */\n      dup7\n        /* \"#utility.yul\":4367:4383   */\n      add\n        /* \"#utility.yul\":4332:4397   */\n      tag_315\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":4422:4451   */\n      tag_407\n        /* \"#utility.yul\":4444:4450   */\n      dup2\n        /* \"#utility.yul\":4422:4451   */\n      tag_316\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":4417:4420   */\n      dup5\n        /* \"#utility.yul\":4413:4452   */\n      add\n        /* \"#utility.yul\":4406:4452   */\n      swap2\n      pop\n        /* \"#utility.yul\":4173:4458   */\n      pop\n        /* \"#utility.yul\":4081:4458   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4464:4777   */\n    tag_39:\n        /* \"#utility.yul\":4577:4581   */\n      0x00\n        /* \"#utility.yul\":4615:4617   */\n      0x20\n        /* \"#utility.yul\":4604:4613   */\n      dup3\n        /* \"#utility.yul\":4600:4618   */\n      add\n        /* \"#utility.yul\":4592:4618   */\n      swap1\n      pop\n        /* \"#utility.yul\":4664:4673   */\n      dup2\n        /* \"#utility.yul\":4658:4662   */\n      dup2\n        /* \"#utility.yul\":4654:4674   */\n      sub\n        /* \"#utility.yul\":4650:4651   */\n      0x00\n        /* \"#utility.yul\":4639:4648   */\n      dup4\n        /* \"#utility.yul\":4635:4652   */\n      add\n        /* \"#utility.yul\":4628:4675   */\n      mstore\n        /* \"#utility.yul\":4692:4770   */\n      tag_409\n        /* \"#utility.yul\":4765:4769   */\n      dup2\n        /* \"#utility.yul\":4756:4762   */\n      dup5\n        /* \"#utility.yul\":4692:4770   */\n      tag_317\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":4684:4770   */\n      swap1\n      pop\n        /* \"#utility.yul\":4464:4777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_42:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_412\n      tag_298\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":4893:5012   */\n    tag_411:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_413\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_303\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_414\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_306\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_415\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_306\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5525   */\n    tag_318:\n        /* \"#utility.yul\":5517:5518   */\n      0x00\n        /* \"#utility.yul\":5514:5515   */\n      dup1\n        /* \"#utility.yul\":5507:5519   */\n      revert\n        /* \"#utility.yul\":5531:5711   */\n    tag_137:\n        /* \"#utility.yul\":5579:5656   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5576:5577   */\n      0x00\n        /* \"#utility.yul\":5569:5657   */\n      mstore\n        /* \"#utility.yul\":5676:5680   */\n      0x41\n        /* \"#utility.yul\":5673:5674   */\n      0x04\n        /* \"#utility.yul\":5666:5681   */\n      mstore\n        /* \"#utility.yul\":5700:5704   */\n      0x24\n        /* \"#utility.yul\":5697:5698   */\n      0x00\n        /* \"#utility.yul\":5690:5705   */\n      revert\n        /* \"#utility.yul\":5717:5998   */\n    tag_319:\n        /* \"#utility.yul\":5800:5827   */\n      tag_419\n        /* \"#utility.yul\":5822:5826   */\n      dup3\n        /* \"#utility.yul\":5800:5827   */\n      tag_316\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5792:5798   */\n      dup2\n        /* \"#utility.yul\":5788:5828   */\n      add\n        /* \"#utility.yul\":5930:5936   */\n      dup2\n        /* \"#utility.yul\":5918:5928   */\n      dup2\n        /* \"#utility.yul\":5915:5937   */\n      lt\n        /* \"#utility.yul\":5894:5912   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5882:5892   */\n      dup3\n        /* \"#utility.yul\":5879:5913   */\n      gt\n        /* \"#utility.yul\":5876:5938   */\n      or\n        /* \"#utility.yul\":5873:5961   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":5941:5959   */\n      tag_421\n      tag_137\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5873:5961   */\n    tag_420:\n        /* \"#utility.yul\":5981:5991   */\n      dup1\n        /* \"#utility.yul\":5977:5979   */\n      0x40\n        /* \"#utility.yul\":5970:5992   */\n      mstore\n        /* \"#utility.yul\":5760:5998   */\n      pop\n        /* \"#utility.yul\":5717:5998   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6004:6133   */\n    tag_320:\n        /* \"#utility.yul\":6038:6044   */\n      0x00\n        /* \"#utility.yul\":6065:6085   */\n      tag_423\n      tag_297\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":6055:6085   */\n      swap1\n      pop\n        /* \"#utility.yul\":6094:6127   */\n      tag_424\n        /* \"#utility.yul\":6122:6126   */\n      dup3\n        /* \"#utility.yul\":6114:6120   */\n      dup3\n        /* \"#utility.yul\":6094:6127   */\n      tag_319\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":6004:6133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6139:6450   */\n    tag_321:\n        /* \"#utility.yul\":6216:6220   */\n      0x00\n        /* \"#utility.yul\":6306:6324   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6298:6304   */\n      dup3\n        /* \"#utility.yul\":6295:6325   */\n      gt\n        /* \"#utility.yul\":6292:6348   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":6328:6346   */\n      tag_427\n      tag_137\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":6292:6348   */\n    tag_426:\n        /* \"#utility.yul\":6378:6382   */\n      0x20\n        /* \"#utility.yul\":6370:6376   */\n      dup3\n        /* \"#utility.yul\":6366:6383   */\n      mul\n        /* \"#utility.yul\":6358:6383   */\n      swap1\n      pop\n        /* \"#utility.yul\":6438:6442   */\n      0x20\n        /* \"#utility.yul\":6432:6436   */\n      dup2\n        /* \"#utility.yul\":6428:6443   */\n      add\n        /* \"#utility.yul\":6420:6443   */\n      swap1\n      pop\n        /* \"#utility.yul\":6139:6450   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6456:6573   */\n    tag_322:\n        /* \"#utility.yul\":6565:6566   */\n      0x00\n        /* \"#utility.yul\":6562:6563   */\n      dup1\n        /* \"#utility.yul\":6555:6567   */\n      revert\n        /* \"#utility.yul\":6596:7306   */\n    tag_323:\n        /* \"#utility.yul\":6692:6697   */\n      0x00\n        /* \"#utility.yul\":6717:6798   */\n      tag_430\n        /* \"#utility.yul\":6733:6797   */\n      tag_431\n        /* \"#utility.yul\":6790:6796   */\n      dup5\n        /* \"#utility.yul\":6733:6797   */\n      tag_321\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6717:6798   */\n      tag_320\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":6708:6798   */\n      swap1\n      pop\n        /* \"#utility.yul\":6818:6823   */\n      dup1\n        /* \"#utility.yul\":6847:6853   */\n      dup4\n        /* \"#utility.yul\":6840:6845   */\n      dup3\n        /* \"#utility.yul\":6833:6854   */\n      mstore\n        /* \"#utility.yul\":6881:6885   */\n      0x20\n        /* \"#utility.yul\":6874:6879   */\n      dup3\n        /* \"#utility.yul\":6870:6886   */\n      add\n        /* \"#utility.yul\":6863:6886   */\n      swap1\n      pop\n        /* \"#utility.yul\":6934:6938   */\n      0x20\n        /* \"#utility.yul\":6926:6932   */\n      dup5\n        /* \"#utility.yul\":6922:6939   */\n      mul\n        /* \"#utility.yul\":6914:6920   */\n      dup4\n        /* \"#utility.yul\":6910:6940   */\n      add\n        /* \"#utility.yul\":6963:6966   */\n      dup6\n        /* \"#utility.yul\":6955:6961   */\n      dup2\n        /* \"#utility.yul\":6952:6967   */\n      gt\n        /* \"#utility.yul\":6949:7071   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":6982:7061   */\n      tag_433\n      tag_322\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":6949:7071   */\n    tag_432:\n        /* \"#utility.yul\":7097:7103   */\n      dup4\n        /* \"#utility.yul\":7080:7300   */\n    tag_434:\n        /* \"#utility.yul\":7114:7120   */\n      dup2\n        /* \"#utility.yul\":7109:7112   */\n      dup2\n        /* \"#utility.yul\":7106:7121   */\n      lt\n        /* \"#utility.yul\":7080:7300   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":7189:7192   */\n      dup1\n        /* \"#utility.yul\":7218:7255   */\n      tag_437\n        /* \"#utility.yul\":7251:7254   */\n      dup9\n        /* \"#utility.yul\":7239:7249   */\n      dup3\n        /* \"#utility.yul\":7218:7255   */\n      tag_306\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":7213:7216   */\n      dup5\n        /* \"#utility.yul\":7206:7256   */\n      mstore\n        /* \"#utility.yul\":7285:7289   */\n      0x20\n        /* \"#utility.yul\":7280:7283   */\n      dup5\n        /* \"#utility.yul\":7276:7290   */\n      add\n        /* \"#utility.yul\":7269:7290   */\n      swap4\n      pop\n        /* \"#utility.yul\":7156:7300   */\n      pop\n        /* \"#utility.yul\":7140:7144   */\n      0x20\n        /* \"#utility.yul\":7135:7138   */\n      dup2\n        /* \"#utility.yul\":7131:7145   */\n      add\n        /* \"#utility.yul\":7124:7145   */\n      swap1\n      pop\n        /* \"#utility.yul\":7080:7300   */\n      jump(tag_434)\n    tag_436:\n        /* \"#utility.yul\":7084:7105   */\n      pop\n        /* \"#utility.yul\":6698:7306   */\n      pop\n      pop\n        /* \"#utility.yul\":6596:7306   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7329:7699   */\n    tag_324:\n        /* \"#utility.yul\":7400:7405   */\n      0x00\n        /* \"#utility.yul\":7449:7452   */\n      dup3\n        /* \"#utility.yul\":7442:7446   */\n      0x1f\n        /* \"#utility.yul\":7434:7440   */\n      dup4\n        /* \"#utility.yul\":7430:7447   */\n      add\n        /* \"#utility.yul\":7426:7453   */\n      slt\n        /* \"#utility.yul\":7416:7538   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":7457:7536   */\n      tag_440\n      tag_318\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":7416:7538   */\n    tag_439:\n        /* \"#utility.yul\":7574:7580   */\n      dup2\n        /* \"#utility.yul\":7561:7581   */\n      calldataload\n        /* \"#utility.yul\":7599:7693   */\n      tag_441\n        /* \"#utility.yul\":7689:7692   */\n      dup5\n        /* \"#utility.yul\":7681:7687   */\n      dup3\n        /* \"#utility.yul\":7674:7678   */\n      0x20\n        /* \"#utility.yul\":7666:7672   */\n      dup7\n        /* \"#utility.yul\":7662:7679   */\n      add\n        /* \"#utility.yul\":7599:7693   */\n      tag_323\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":7590:7693   */\n      swap2\n      pop\n        /* \"#utility.yul\":7406:7699   */\n      pop\n        /* \"#utility.yul\":7329:7699   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7705:7822   */\n    tag_325:\n        /* \"#utility.yul\":7814:7815   */\n      0x00\n        /* \"#utility.yul\":7811:7812   */\n      dup1\n        /* \"#utility.yul\":7804:7816   */\n      revert\n        /* \"#utility.yul\":7828:8135   */\n    tag_326:\n        /* \"#utility.yul\":7889:7893   */\n      0x00\n        /* \"#utility.yul\":7979:7997   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7971:7977   */\n      dup3\n        /* \"#utility.yul\":7968:7998   */\n      gt\n        /* \"#utility.yul\":7965:8021   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":8001:8019   */\n      tag_445\n      tag_137\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":7965:8021   */\n    tag_444:\n        /* \"#utility.yul\":8039:8068   */\n      tag_446\n        /* \"#utility.yul\":8061:8067   */\n      dup3\n        /* \"#utility.yul\":8039:8068   */\n      tag_316\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":8031:8068   */\n      swap1\n      pop\n        /* \"#utility.yul\":8123:8127   */\n      0x20\n        /* \"#utility.yul\":8117:8121   */\n      dup2\n        /* \"#utility.yul\":8113:8128   */\n      add\n        /* \"#utility.yul\":8105:8128   */\n      swap1\n      pop\n        /* \"#utility.yul\":7828:8135   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8141:8289   */\n    tag_327:\n        /* \"#utility.yul\":8239:8245   */\n      dup3\n        /* \"#utility.yul\":8234:8237   */\n      dup2\n        /* \"#utility.yul\":8229:8232   */\n      dup4\n        /* \"#utility.yul\":8216:8246   */\n      calldatacopy\n        /* \"#utility.yul\":8280:8281   */\n      0x00\n        /* \"#utility.yul\":8271:8277   */\n      dup4\n        /* \"#utility.yul\":8266:8269   */\n      dup4\n        /* \"#utility.yul\":8262:8278   */\n      add\n        /* \"#utility.yul\":8255:8282   */\n      mstore\n        /* \"#utility.yul\":8141:8289   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8295:8718   */\n    tag_328:\n        /* \"#utility.yul\":8372:8377   */\n      0x00\n        /* \"#utility.yul\":8397:8462   */\n      tag_449\n        /* \"#utility.yul\":8413:8461   */\n      tag_450\n        /* \"#utility.yul\":8454:8460   */\n      dup5\n        /* \"#utility.yul\":8413:8461   */\n      tag_326\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":8397:8462   */\n      tag_320\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":8388:8462   */\n      swap1\n      pop\n        /* \"#utility.yul\":8485:8491   */\n      dup3\n        /* \"#utility.yul\":8478:8483   */\n      dup2\n        /* \"#utility.yul\":8471:8492   */\n      mstore\n        /* \"#utility.yul\":8523:8527   */\n      0x20\n        /* \"#utility.yul\":8516:8521   */\n      dup2\n        /* \"#utility.yul\":8512:8528   */\n      add\n        /* \"#utility.yul\":8561:8564   */\n      dup5\n        /* \"#utility.yul\":8552:8558   */\n      dup5\n        /* \"#utility.yul\":8547:8550   */\n      dup5\n        /* \"#utility.yul\":8543:8559   */\n      add\n        /* \"#utility.yul\":8540:8565   */\n      gt\n        /* \"#utility.yul\":8537:8649   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":8568:8647   */\n      tag_452\n      tag_325\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":8537:8649   */\n    tag_451:\n        /* \"#utility.yul\":8658:8712   */\n      tag_453\n        /* \"#utility.yul\":8705:8711   */\n      dup5\n        /* \"#utility.yul\":8700:8703   */\n      dup3\n        /* \"#utility.yul\":8695:8698   */\n      dup6\n        /* \"#utility.yul\":8658:8712   */\n      tag_327\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8378:8718   */\n      pop\n        /* \"#utility.yul\":8295:8718   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8737:9075   */\n    tag_329:\n        /* \"#utility.yul\":8792:8797   */\n      0x00\n        /* \"#utility.yul\":8841:8844   */\n      dup3\n        /* \"#utility.yul\":8834:8838   */\n      0x1f\n        /* \"#utility.yul\":8826:8832   */\n      dup4\n        /* \"#utility.yul\":8822:8839   */\n      add\n        /* \"#utility.yul\":8818:8845   */\n      slt\n        /* \"#utility.yul\":8808:8930   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":8849:8928   */\n      tag_456\n      tag_318\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":8808:8930   */\n    tag_455:\n        /* \"#utility.yul\":8966:8972   */\n      dup2\n        /* \"#utility.yul\":8953:8973   */\n      calldataload\n        /* \"#utility.yul\":8991:9069   */\n      tag_457\n        /* \"#utility.yul\":9065:9068   */\n      dup5\n        /* \"#utility.yul\":9057:9063   */\n      dup3\n        /* \"#utility.yul\":9050:9054   */\n      0x20\n        /* \"#utility.yul\":9042:9048   */\n      dup7\n        /* \"#utility.yul\":9038:9055   */\n      add\n        /* \"#utility.yul\":8991:9069   */\n      tag_328\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":8982:9069   */\n      swap2\n      pop\n        /* \"#utility.yul\":8798:9075   */\n      pop\n        /* \"#utility.yul\":8737:9075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9081:10590   */\n    tag_54:\n        /* \"#utility.yul\":9235:9241   */\n      0x00\n        /* \"#utility.yul\":9243:9249   */\n      dup1\n        /* \"#utility.yul\":9251:9257   */\n      0x00\n        /* \"#utility.yul\":9259:9265   */\n      dup1\n        /* \"#utility.yul\":9267:9273   */\n      0x00\n        /* \"#utility.yul\":9316:9319   */\n      0xa0\n        /* \"#utility.yul\":9304:9313   */\n      dup7\n        /* \"#utility.yul\":9295:9302   */\n      dup9\n        /* \"#utility.yul\":9291:9314   */\n      sub\n        /* \"#utility.yul\":9287:9320   */\n      slt\n        /* \"#utility.yul\":9284:9404   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":9323:9402   */\n      tag_460\n      tag_298\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":9284:9404   */\n    tag_459:\n        /* \"#utility.yul\":9443:9444   */\n      0x00\n        /* \"#utility.yul\":9468:9521   */\n      tag_461\n        /* \"#utility.yul\":9513:9520   */\n      dup9\n        /* \"#utility.yul\":9504:9510   */\n      dup3\n        /* \"#utility.yul\":9493:9502   */\n      dup10\n        /* \"#utility.yul\":9489:9511   */\n      add\n        /* \"#utility.yul\":9468:9521   */\n      tag_303\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":9458:9521   */\n      swap6\n      pop\n        /* \"#utility.yul\":9414:9531   */\n      pop\n        /* \"#utility.yul\":9570:9572   */\n      0x20\n        /* \"#utility.yul\":9596:9649   */\n      tag_462\n        /* \"#utility.yul\":9641:9648   */\n      dup9\n        /* \"#utility.yul\":9632:9638   */\n      dup3\n        /* \"#utility.yul\":9621:9630   */\n      dup10\n        /* \"#utility.yul\":9617:9639   */\n      add\n        /* \"#utility.yul\":9596:9649   */\n      tag_303\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":9586:9649   */\n      swap5\n      pop\n        /* \"#utility.yul\":9541:9659   */\n      pop\n        /* \"#utility.yul\":9726:9728   */\n      0x40\n        /* \"#utility.yul\":9715:9724   */\n      dup7\n        /* \"#utility.yul\":9711:9729   */\n      add\n        /* \"#utility.yul\":9698:9730   */\n      calldataload\n        /* \"#utility.yul\":9757:9775   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9749:9755   */\n      dup2\n        /* \"#utility.yul\":9746:9776   */\n      gt\n        /* \"#utility.yul\":9743:9860   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":9779:9858   */\n      tag_464\n      tag_299\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":9743:9860   */\n    tag_463:\n        /* \"#utility.yul\":9884:9962   */\n      tag_465\n        /* \"#utility.yul\":9954:9961   */\n      dup9\n        /* \"#utility.yul\":9945:9951   */\n      dup3\n        /* \"#utility.yul\":9934:9943   */\n      dup10\n        /* \"#utility.yul\":9930:9952   */\n      add\n        /* \"#utility.yul\":9884:9962   */\n      tag_324\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":9874:9962   */\n      swap4\n      pop\n        /* \"#utility.yul\":9669:9972   */\n      pop\n        /* \"#utility.yul\":10039:10041   */\n      0x60\n        /* \"#utility.yul\":10028:10037   */\n      dup7\n        /* \"#utility.yul\":10024:10042   */\n      add\n        /* \"#utility.yul\":10011:10043   */\n      calldataload\n        /* \"#utility.yul\":10070:10088   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10062:10068   */\n      dup2\n        /* \"#utility.yul\":10059:10089   */\n      gt\n        /* \"#utility.yul\":10056:10173   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":10092:10171   */\n      tag_467\n      tag_299\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":10056:10173   */\n    tag_466:\n        /* \"#utility.yul\":10197:10275   */\n      tag_468\n        /* \"#utility.yul\":10267:10274   */\n      dup9\n        /* \"#utility.yul\":10258:10264   */\n      dup3\n        /* \"#utility.yul\":10247:10256   */\n      dup10\n        /* \"#utility.yul\":10243:10265   */\n      add\n        /* \"#utility.yul\":10197:10275   */\n      tag_324\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10187:10275   */\n      swap3\n      pop\n        /* \"#utility.yul\":9982:10285   */\n      pop\n        /* \"#utility.yul\":10352:10355   */\n      0x80\n        /* \"#utility.yul\":10341:10350   */\n      dup7\n        /* \"#utility.yul\":10337:10356   */\n      add\n        /* \"#utility.yul\":10324:10357   */\n      calldataload\n        /* \"#utility.yul\":10384:10402   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10376:10382   */\n      dup2\n        /* \"#utility.yul\":10373:10403   */\n      gt\n        /* \"#utility.yul\":10370:10487   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":10406:10485   */\n      tag_470\n      tag_299\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":10370:10487   */\n    tag_469:\n        /* \"#utility.yul\":10511:10573   */\n      tag_471\n        /* \"#utility.yul\":10565:10572   */\n      dup9\n        /* \"#utility.yul\":10556:10562   */\n      dup3\n        /* \"#utility.yul\":10545:10554   */\n      dup10\n        /* \"#utility.yul\":10541:10563   */\n      add\n        /* \"#utility.yul\":10511:10573   */\n      tag_329\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":10501:10573   */\n      swap2\n      pop\n        /* \"#utility.yul\":10295:10583   */\n      pop\n        /* \"#utility.yul\":9081:10590   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10596:10907   */\n    tag_330:\n        /* \"#utility.yul\":10673:10677   */\n      0x00\n        /* \"#utility.yul\":10763:10781   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10755:10761   */\n      dup3\n        /* \"#utility.yul\":10752:10782   */\n      gt\n        /* \"#utility.yul\":10749:10805   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":10785:10803   */\n      tag_474\n      tag_137\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":10749:10805   */\n    tag_473:\n        /* \"#utility.yul\":10835:10839   */\n      0x20\n        /* \"#utility.yul\":10827:10833   */\n      dup3\n        /* \"#utility.yul\":10823:10840   */\n      mul\n        /* \"#utility.yul\":10815:10840   */\n      swap1\n      pop\n        /* \"#utility.yul\":10895:10899   */\n      0x20\n        /* \"#utility.yul\":10889:10893   */\n      dup2\n        /* \"#utility.yul\":10885:10900   */\n      add\n        /* \"#utility.yul\":10877:10900   */\n      swap1\n      pop\n        /* \"#utility.yul\":10596:10907   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10930:11640   */\n    tag_331:\n        /* \"#utility.yul\":11026:11031   */\n      0x00\n        /* \"#utility.yul\":11051:11132   */\n      tag_476\n        /* \"#utility.yul\":11067:11131   */\n      tag_477\n        /* \"#utility.yul\":11124:11130   */\n      dup5\n        /* \"#utility.yul\":11067:11131   */\n      tag_330\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":11051:11132   */\n      tag_320\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":11042:11132   */\n      swap1\n      pop\n        /* \"#utility.yul\":11152:11157   */\n      dup1\n        /* \"#utility.yul\":11181:11187   */\n      dup4\n        /* \"#utility.yul\":11174:11179   */\n      dup3\n        /* \"#utility.yul\":11167:11188   */\n      mstore\n        /* \"#utility.yul\":11215:11219   */\n      0x20\n        /* \"#utility.yul\":11208:11213   */\n      dup3\n        /* \"#utility.yul\":11204:11220   */\n      add\n        /* \"#utility.yul\":11197:11220   */\n      swap1\n      pop\n        /* \"#utility.yul\":11268:11272   */\n      0x20\n        /* \"#utility.yul\":11260:11266   */\n      dup5\n        /* \"#utility.yul\":11256:11273   */\n      mul\n        /* \"#utility.yul\":11248:11254   */\n      dup4\n        /* \"#utility.yul\":11244:11274   */\n      add\n        /* \"#utility.yul\":11297:11300   */\n      dup6\n        /* \"#utility.yul\":11289:11295   */\n      dup2\n        /* \"#utility.yul\":11286:11301   */\n      gt\n        /* \"#utility.yul\":11283:11405   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":11316:11395   */\n      tag_479\n      tag_322\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":11283:11405   */\n    tag_478:\n        /* \"#utility.yul\":11431:11437   */\n      dup4\n        /* \"#utility.yul\":11414:11634   */\n    tag_480:\n        /* \"#utility.yul\":11448:11454   */\n      dup2\n        /* \"#utility.yul\":11443:11446   */\n      dup2\n        /* \"#utility.yul\":11440:11455   */\n      lt\n        /* \"#utility.yul\":11414:11634   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":11523:11526   */\n      dup1\n        /* \"#utility.yul\":11552:11589   */\n      tag_483\n        /* \"#utility.yul\":11585:11588   */\n      dup9\n        /* \"#utility.yul\":11573:11583   */\n      dup3\n        /* \"#utility.yul\":11552:11589   */\n      tag_303\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":11547:11550   */\n      dup5\n        /* \"#utility.yul\":11540:11590   */\n      mstore\n        /* \"#utility.yul\":11619:11623   */\n      0x20\n        /* \"#utility.yul\":11614:11617   */\n      dup5\n        /* \"#utility.yul\":11610:11624   */\n      add\n        /* \"#utility.yul\":11603:11624   */\n      swap4\n      pop\n        /* \"#utility.yul\":11490:11634   */\n      pop\n        /* \"#utility.yul\":11474:11478   */\n      0x20\n        /* \"#utility.yul\":11469:11472   */\n      dup2\n        /* \"#utility.yul\":11465:11479   */\n      add\n        /* \"#utility.yul\":11458:11479   */\n      swap1\n      pop\n        /* \"#utility.yul\":11414:11634   */\n      jump(tag_480)\n    tag_482:\n        /* \"#utility.yul\":11418:11439   */\n      pop\n        /* \"#utility.yul\":11032:11640   */\n      pop\n      pop\n        /* \"#utility.yul\":10930:11640   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11663:12033   */\n    tag_332:\n        /* \"#utility.yul\":11734:11739   */\n      0x00\n        /* \"#utility.yul\":11783:11786   */\n      dup3\n        /* \"#utility.yul\":11776:11780   */\n      0x1f\n        /* \"#utility.yul\":11768:11774   */\n      dup4\n        /* \"#utility.yul\":11764:11781   */\n      add\n        /* \"#utility.yul\":11760:11787   */\n      slt\n        /* \"#utility.yul\":11750:11872   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":11791:11870   */\n      tag_486\n      tag_318\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":11750:11872   */\n    tag_485:\n        /* \"#utility.yul\":11908:11914   */\n      dup2\n        /* \"#utility.yul\":11895:11915   */\n      calldataload\n        /* \"#utility.yul\":11933:12027   */\n      tag_487\n        /* \"#utility.yul\":12023:12026   */\n      dup5\n        /* \"#utility.yul\":12015:12021   */\n      dup3\n        /* \"#utility.yul\":12008:12012   */\n      0x20\n        /* \"#utility.yul\":12000:12006   */\n      dup7\n        /* \"#utility.yul\":11996:12013   */\n      add\n        /* \"#utility.yul\":11933:12027   */\n      tag_331\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":11924:12027   */\n      swap2\n      pop\n        /* \"#utility.yul\":11740:12033   */\n      pop\n        /* \"#utility.yul\":11663:12033   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12039:12933   */\n    tag_58:\n        /* \"#utility.yul\":12157:12163   */\n      0x00\n        /* \"#utility.yul\":12165:12171   */\n      dup1\n        /* \"#utility.yul\":12214:12216   */\n      0x40\n        /* \"#utility.yul\":12202:12211   */\n      dup4\n        /* \"#utility.yul\":12193:12200   */\n      dup6\n        /* \"#utility.yul\":12189:12212   */\n      sub\n        /* \"#utility.yul\":12185:12217   */\n      slt\n        /* \"#utility.yul\":12182:12301   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":12220:12299   */\n      tag_490\n      tag_298\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":12182:12301   */\n    tag_489:\n        /* \"#utility.yul\":12368:12369   */\n      0x00\n        /* \"#utility.yul\":12357:12366   */\n      dup4\n        /* \"#utility.yul\":12353:12370   */\n      add\n        /* \"#utility.yul\":12340:12371   */\n      calldataload\n        /* \"#utility.yul\":12398:12416   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12390:12396   */\n      dup2\n        /* \"#utility.yul\":12387:12417   */\n      gt\n        /* \"#utility.yul\":12384:12501   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":12420:12499   */\n      tag_492\n      tag_299\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":12384:12501   */\n    tag_491:\n        /* \"#utility.yul\":12525:12603   */\n      tag_493\n        /* \"#utility.yul\":12595:12602   */\n      dup6\n        /* \"#utility.yul\":12586:12592   */\n      dup3\n        /* \"#utility.yul\":12575:12584   */\n      dup7\n        /* \"#utility.yul\":12571:12593   */\n      add\n        /* \"#utility.yul\":12525:12603   */\n      tag_332\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":12515:12603   */\n      swap3\n      pop\n        /* \"#utility.yul\":12311:12613   */\n      pop\n        /* \"#utility.yul\":12680:12682   */\n      0x20\n        /* \"#utility.yul\":12669:12678   */\n      dup4\n        /* \"#utility.yul\":12665:12683   */\n      add\n        /* \"#utility.yul\":12652:12684   */\n      calldataload\n        /* \"#utility.yul\":12711:12729   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12703:12709   */\n      dup2\n        /* \"#utility.yul\":12700:12730   */\n      gt\n        /* \"#utility.yul\":12697:12814   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":12733:12812   */\n      tag_495\n      tag_299\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":12697:12814   */\n    tag_494:\n        /* \"#utility.yul\":12838:12916   */\n      tag_496\n        /* \"#utility.yul\":12908:12915   */\n      dup6\n        /* \"#utility.yul\":12899:12905   */\n      dup3\n        /* \"#utility.yul\":12888:12897   */\n      dup7\n        /* \"#utility.yul\":12884:12906   */\n      add\n        /* \"#utility.yul\":12838:12916   */\n      tag_324\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":12828:12916   */\n      swap2\n      pop\n        /* \"#utility.yul\":12623:12926   */\n      pop\n        /* \"#utility.yul\":12039:12933   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12939:13053   */\n    tag_333:\n        /* \"#utility.yul\":13006:13012   */\n      0x00\n        /* \"#utility.yul\":13040:13045   */\n      dup2\n        /* \"#utility.yul\":13034:13046   */\n      mload\n        /* \"#utility.yul\":13024:13046   */\n      swap1\n      pop\n        /* \"#utility.yul\":12939:13053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13059:13243   */\n    tag_334:\n        /* \"#utility.yul\":13158:13169   */\n      0x00\n        /* \"#utility.yul\":13192:13198   */\n      dup3\n        /* \"#utility.yul\":13187:13190   */\n      dup3\n        /* \"#utility.yul\":13180:13199   */\n      mstore\n        /* \"#utility.yul\":13232:13236   */\n      0x20\n        /* \"#utility.yul\":13227:13230   */\n      dup3\n        /* \"#utility.yul\":13223:13237   */\n      add\n        /* \"#utility.yul\":13208:13237   */\n      swap1\n      pop\n        /* \"#utility.yul\":13059:13243   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13249:13381   */\n    tag_335:\n        /* \"#utility.yul\":13316:13320   */\n      0x00\n        /* \"#utility.yul\":13339:13342   */\n      dup2\n        /* \"#utility.yul\":13331:13342   */\n      swap1\n      pop\n        /* \"#utility.yul\":13369:13373   */\n      0x20\n        /* \"#utility.yul\":13364:13367   */\n      dup3\n        /* \"#utility.yul\":13360:13374   */\n      add\n        /* \"#utility.yul\":13352:13374   */\n      swap1\n      pop\n        /* \"#utility.yul\":13249:13381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13387:13495   */\n    tag_336:\n        /* \"#utility.yul\":13464:13488   */\n      tag_501\n        /* \"#utility.yul\":13482:13487   */\n      dup2\n        /* \"#utility.yul\":13464:13488   */\n      tag_304\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":13459:13462   */\n      dup3\n        /* \"#utility.yul\":13452:13489   */\n      mstore\n        /* \"#utility.yul\":13387:13495   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13501:13680   */\n    tag_337:\n        /* \"#utility.yul\":13570:13580   */\n      0x00\n        /* \"#utility.yul\":13591:13637   */\n      tag_503\n        /* \"#utility.yul\":13633:13636   */\n      dup4\n        /* \"#utility.yul\":13625:13631   */\n      dup4\n        /* \"#utility.yul\":13591:13637   */\n      tag_336\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":13669:13673   */\n      0x20\n        /* \"#utility.yul\":13664:13667   */\n      dup4\n        /* \"#utility.yul\":13660:13674   */\n      add\n        /* \"#utility.yul\":13646:13674   */\n      swap1\n      pop\n        /* \"#utility.yul\":13501:13680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13686:13799   */\n    tag_338:\n        /* \"#utility.yul\":13756:13760   */\n      0x00\n        /* \"#utility.yul\":13788:13792   */\n      0x20\n        /* \"#utility.yul\":13783:13786   */\n      dup3\n        /* \"#utility.yul\":13779:13793   */\n      add\n        /* \"#utility.yul\":13771:13793   */\n      swap1\n      pop\n        /* \"#utility.yul\":13686:13799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13835:14567   */\n    tag_339:\n        /* \"#utility.yul\":13954:13957   */\n      0x00\n        /* \"#utility.yul\":13983:14037   */\n      tag_506\n        /* \"#utility.yul\":14031:14036   */\n      dup3\n        /* \"#utility.yul\":13983:14037   */\n      tag_333\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":14053:14139   */\n      tag_507\n        /* \"#utility.yul\":14132:14138   */\n      dup2\n        /* \"#utility.yul\":14127:14130   */\n      dup6\n        /* \"#utility.yul\":14053:14139   */\n      tag_334\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":14046:14139   */\n      swap4\n      pop\n        /* \"#utility.yul\":14163:14219   */\n      tag_508\n        /* \"#utility.yul\":14213:14218   */\n      dup4\n        /* \"#utility.yul\":14163:14219   */\n      tag_335\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":14242:14249   */\n      dup1\n        /* \"#utility.yul\":14273:14274   */\n      0x00\n        /* \"#utility.yul\":14258:14542   */\n    tag_509:\n        /* \"#utility.yul\":14283:14289   */\n      dup4\n        /* \"#utility.yul\":14280:14281   */\n      dup2\n        /* \"#utility.yul\":14277:14290   */\n      lt\n        /* \"#utility.yul\":14258:14542   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":14359:14365   */\n      dup2\n        /* \"#utility.yul\":14353:14366   */\n      mload\n        /* \"#utility.yul\":14386:14449   */\n      tag_512\n        /* \"#utility.yul\":14445:14448   */\n      dup9\n        /* \"#utility.yul\":14430:14443   */\n      dup3\n        /* \"#utility.yul\":14386:14449   */\n      tag_337\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":14379:14449   */\n      swap8\n      pop\n        /* \"#utility.yul\":14472:14532   */\n      tag_513\n        /* \"#utility.yul\":14525:14531   */\n      dup4\n        /* \"#utility.yul\":14472:14532   */\n      tag_338\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":14462:14532   */\n      swap3\n      pop\n        /* \"#utility.yul\":14318:14542   */\n      pop\n        /* \"#utility.yul\":14305:14306   */\n      0x01\n        /* \"#utility.yul\":14302:14303   */\n      dup2\n        /* \"#utility.yul\":14298:14307   */\n      add\n        /* \"#utility.yul\":14293:14307   */\n      swap1\n      pop\n        /* \"#utility.yul\":14258:14542   */\n      jump(tag_509)\n    tag_511:\n        /* \"#utility.yul\":14262:14276   */\n      pop\n        /* \"#utility.yul\":14558:14561   */\n      dup6\n        /* \"#utility.yul\":14551:14561   */\n      swap4\n      pop\n        /* \"#utility.yul\":13959:14567   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13835:14567   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14573:14946   */\n    tag_61:\n        /* \"#utility.yul\":14716:14720   */\n      0x00\n        /* \"#utility.yul\":14754:14756   */\n      0x20\n        /* \"#utility.yul\":14743:14752   */\n      dup3\n        /* \"#utility.yul\":14739:14757   */\n      add\n        /* \"#utility.yul\":14731:14757   */\n      swap1\n      pop\n        /* \"#utility.yul\":14803:14812   */\n      dup2\n        /* \"#utility.yul\":14797:14801   */\n      dup2\n        /* \"#utility.yul\":14793:14813   */\n      sub\n        /* \"#utility.yul\":14789:14790   */\n      0x00\n        /* \"#utility.yul\":14778:14787   */\n      dup4\n        /* \"#utility.yul\":14774:14791   */\n      add\n        /* \"#utility.yul\":14767:14814   */\n      mstore\n        /* \"#utility.yul\":14831:14939   */\n      tag_515\n        /* \"#utility.yul\":14934:14938   */\n      dup2\n        /* \"#utility.yul\":14925:14931   */\n      dup5\n        /* \"#utility.yul\":14831:14939   */\n      tag_339\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":14823:14939   */\n      swap1\n      pop\n        /* \"#utility.yul\":14573:14946   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14952:15070   */\n    tag_340:\n        /* \"#utility.yul\":15039:15063   */\n      tag_517\n        /* \"#utility.yul\":15057:15062   */\n      dup2\n        /* \"#utility.yul\":15039:15063   */\n      tag_301\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":15034:15037   */\n      dup3\n        /* \"#utility.yul\":15027:15064   */\n      mstore\n        /* \"#utility.yul\":14952:15070   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15076:15298   */\n    tag_67:\n        /* \"#utility.yul\":15169:15173   */\n      0x00\n        /* \"#utility.yul\":15207:15209   */\n      0x20\n        /* \"#utility.yul\":15196:15205   */\n      dup3\n        /* \"#utility.yul\":15192:15210   */\n      add\n        /* \"#utility.yul\":15184:15210   */\n      swap1\n      pop\n        /* \"#utility.yul\":15220:15291   */\n      tag_519\n        /* \"#utility.yul\":15288:15289   */\n      0x00\n        /* \"#utility.yul\":15277:15286   */\n      dup4\n        /* \"#utility.yul\":15273:15290   */\n      add\n        /* \"#utility.yul\":15264:15270   */\n      dup5\n        /* \"#utility.yul\":15220:15291   */\n      tag_340\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":15076:15298   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15304:15420   */\n    tag_341:\n        /* \"#utility.yul\":15374:15395   */\n      tag_521\n        /* \"#utility.yul\":15389:15394   */\n      dup2\n        /* \"#utility.yul\":15374:15395   */\n      tag_311\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":15367:15372   */\n      dup2\n        /* \"#utility.yul\":15364:15396   */\n      eq\n        /* \"#utility.yul\":15354:15414   */\n      tag_522\n      jumpi\n        /* \"#utility.yul\":15410:15411   */\n      0x00\n        /* \"#utility.yul\":15407:15408   */\n      dup1\n        /* \"#utility.yul\":15400:15412   */\n      revert\n        /* \"#utility.yul\":15354:15414   */\n    tag_522:\n        /* \"#utility.yul\":15304:15420   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15426:15559   */\n    tag_342:\n        /* \"#utility.yul\":15469:15474   */\n      0x00\n        /* \"#utility.yul\":15507:15513   */\n      dup2\n        /* \"#utility.yul\":15494:15514   */\n      calldataload\n        /* \"#utility.yul\":15485:15514   */\n      swap1\n      pop\n        /* \"#utility.yul\":15523:15553   */\n      tag_524\n        /* \"#utility.yul\":15547:15552   */\n      dup2\n        /* \"#utility.yul\":15523:15553   */\n      tag_341\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":15426:15559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15565:16033   */\n    tag_70:\n        /* \"#utility.yul\":15630:15636   */\n      0x00\n        /* \"#utility.yul\":15638:15644   */\n      dup1\n        /* \"#utility.yul\":15687:15689   */\n      0x40\n        /* \"#utility.yul\":15675:15684   */\n      dup4\n        /* \"#utility.yul\":15666:15673   */\n      dup6\n        /* \"#utility.yul\":15662:15685   */\n      sub\n        /* \"#utility.yul\":15658:15690   */\n      slt\n        /* \"#utility.yul\":15655:15774   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":15693:15772   */\n      tag_527\n      tag_298\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":15655:15774   */\n    tag_526:\n        /* \"#utility.yul\":15813:15814   */\n      0x00\n        /* \"#utility.yul\":15838:15891   */\n      tag_528\n        /* \"#utility.yul\":15883:15890   */\n      dup6\n        /* \"#utility.yul\":15874:15880   */\n      dup3\n        /* \"#utility.yul\":15863:15872   */\n      dup7\n        /* \"#utility.yul\":15859:15881   */\n      add\n        /* \"#utility.yul\":15838:15891   */\n      tag_303\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":15828:15891   */\n      swap3\n      pop\n        /* \"#utility.yul\":15784:15901   */\n      pop\n        /* \"#utility.yul\":15940:15942   */\n      0x20\n        /* \"#utility.yul\":15966:16016   */\n      tag_529\n        /* \"#utility.yul\":16008:16015   */\n      dup6\n        /* \"#utility.yul\":15999:16005   */\n      dup3\n        /* \"#utility.yul\":15988:15997   */\n      dup7\n        /* \"#utility.yul\":15984:16006   */\n      add\n        /* \"#utility.yul\":15966:16016   */\n      tag_342\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":15956:16016   */\n      swap2\n      pop\n        /* \"#utility.yul\":15911:16026   */\n      pop\n        /* \"#utility.yul\":15565:16033   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16039:16513   */\n    tag_77:\n        /* \"#utility.yul\":16107:16113   */\n      0x00\n        /* \"#utility.yul\":16115:16121   */\n      dup1\n        /* \"#utility.yul\":16164:16166   */\n      0x40\n        /* \"#utility.yul\":16152:16161   */\n      dup4\n        /* \"#utility.yul\":16143:16150   */\n      dup6\n        /* \"#utility.yul\":16139:16162   */\n      sub\n        /* \"#utility.yul\":16135:16167   */\n      slt\n        /* \"#utility.yul\":16132:16251   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":16170:16249   */\n      tag_532\n      tag_298\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":16132:16251   */\n    tag_531:\n        /* \"#utility.yul\":16290:16291   */\n      0x00\n        /* \"#utility.yul\":16315:16368   */\n      tag_533\n        /* \"#utility.yul\":16360:16367   */\n      dup6\n        /* \"#utility.yul\":16351:16357   */\n      dup3\n        /* \"#utility.yul\":16340:16349   */\n      dup7\n        /* \"#utility.yul\":16336:16358   */\n      add\n        /* \"#utility.yul\":16315:16368   */\n      tag_303\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":16305:16368   */\n      swap3\n      pop\n        /* \"#utility.yul\":16261:16378   */\n      pop\n        /* \"#utility.yul\":16417:16419   */\n      0x20\n        /* \"#utility.yul\":16443:16496   */\n      tag_534\n        /* \"#utility.yul\":16488:16495   */\n      dup6\n        /* \"#utility.yul\":16479:16485   */\n      dup3\n        /* \"#utility.yul\":16468:16477   */\n      dup7\n        /* \"#utility.yul\":16464:16486   */\n      add\n        /* \"#utility.yul\":16443:16496   */\n      tag_303\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":16433:16496   */\n      swap2\n      pop\n        /* \"#utility.yul\":16388:16506   */\n      pop\n        /* \"#utility.yul\":16039:16513   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16519:17608   */\n    tag_82:\n        /* \"#utility.yul\":16623:16629   */\n      0x00\n        /* \"#utility.yul\":16631:16637   */\n      dup1\n        /* \"#utility.yul\":16639:16645   */\n      0x00\n        /* \"#utility.yul\":16647:16653   */\n      dup1\n        /* \"#utility.yul\":16655:16661   */\n      0x00\n        /* \"#utility.yul\":16704:16707   */\n      0xa0\n        /* \"#utility.yul\":16692:16701   */\n      dup7\n        /* \"#utility.yul\":16683:16690   */\n      dup9\n        /* \"#utility.yul\":16679:16702   */\n      sub\n        /* \"#utility.yul\":16675:16708   */\n      slt\n        /* \"#utility.yul\":16672:16792   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":16711:16790   */\n      tag_537\n      tag_298\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":16672:16792   */\n    tag_536:\n        /* \"#utility.yul\":16831:16832   */\n      0x00\n        /* \"#utility.yul\":16856:16909   */\n      tag_538\n        /* \"#utility.yul\":16901:16908   */\n      dup9\n        /* \"#utility.yul\":16892:16898   */\n      dup3\n        /* \"#utility.yul\":16881:16890   */\n      dup10\n        /* \"#utility.yul\":16877:16899   */\n      add\n        /* \"#utility.yul\":16856:16909   */\n      tag_303\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":16846:16909   */\n      swap6\n      pop\n        /* \"#utility.yul\":16802:16919   */\n      pop\n        /* \"#utility.yul\":16958:16960   */\n      0x20\n        /* \"#utility.yul\":16984:17037   */\n      tag_539\n        /* \"#utility.yul\":17029:17036   */\n      dup9\n        /* \"#utility.yul\":17020:17026   */\n      dup3\n        /* \"#utility.yul\":17009:17018   */\n      dup10\n        /* \"#utility.yul\":17005:17027   */\n      add\n        /* \"#utility.yul\":16984:17037   */\n      tag_303\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":16974:17037   */\n      swap5\n      pop\n        /* \"#utility.yul\":16929:17047   */\n      pop\n        /* \"#utility.yul\":17086:17088   */\n      0x40\n        /* \"#utility.yul\":17112:17165   */\n      tag_540\n        /* \"#utility.yul\":17157:17164   */\n      dup9\n        /* \"#utility.yul\":17148:17154   */\n      dup3\n        /* \"#utility.yul\":17137:17146   */\n      dup10\n        /* \"#utility.yul\":17133:17155   */\n      add\n        /* \"#utility.yul\":17112:17165   */\n      tag_306\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":17102:17165   */\n      swap4\n      pop\n        /* \"#utility.yul\":17057:17175   */\n      pop\n        /* \"#utility.yul\":17214:17216   */\n      0x60\n        /* \"#utility.yul\":17240:17293   */\n      tag_541\n        /* \"#utility.yul\":17285:17292   */\n      dup9\n        /* \"#utility.yul\":17276:17282   */\n      dup3\n        /* \"#utility.yul\":17265:17274   */\n      dup10\n        /* \"#utility.yul\":17261:17283   */\n      add\n        /* \"#utility.yul\":17240:17293   */\n      tag_306\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":17230:17293   */\n      swap3\n      pop\n        /* \"#utility.yul\":17185:17303   */\n      pop\n        /* \"#utility.yul\":17370:17373   */\n      0x80\n        /* \"#utility.yul\":17359:17368   */\n      dup7\n        /* \"#utility.yul\":17355:17374   */\n      add\n        /* \"#utility.yul\":17342:17375   */\n      calldataload\n        /* \"#utility.yul\":17402:17420   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17394:17400   */\n      dup2\n        /* \"#utility.yul\":17391:17421   */\n      gt\n        /* \"#utility.yul\":17388:17505   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":17424:17503   */\n      tag_543\n      tag_299\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":17388:17505   */\n    tag_542:\n        /* \"#utility.yul\":17529:17591   */\n      tag_544\n        /* \"#utility.yul\":17583:17590   */\n      dup9\n        /* \"#utility.yul\":17574:17580   */\n      dup3\n        /* \"#utility.yul\":17563:17572   */\n      dup10\n        /* \"#utility.yul\":17559:17581   */\n      add\n        /* \"#utility.yul\":17529:17591   */\n      tag_329\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":17519:17591   */\n      swap2\n      pop\n        /* \"#utility.yul\":17313:17601   */\n      pop\n        /* \"#utility.yul\":16519:17608   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17614:17943   */\n    tag_86:\n        /* \"#utility.yul\":17673:17679   */\n      0x00\n        /* \"#utility.yul\":17722:17724   */\n      0x20\n        /* \"#utility.yul\":17710:17719   */\n      dup3\n        /* \"#utility.yul\":17701:17708   */\n      dup5\n        /* \"#utility.yul\":17697:17720   */\n      sub\n        /* \"#utility.yul\":17693:17725   */\n      slt\n        /* \"#utility.yul\":17690:17809   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":17728:17807   */\n      tag_547\n      tag_298\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":17690:17809   */\n    tag_546:\n        /* \"#utility.yul\":17848:17849   */\n      0x00\n        /* \"#utility.yul\":17873:17926   */\n      tag_548\n        /* \"#utility.yul\":17918:17925   */\n      dup5\n        /* \"#utility.yul\":17909:17915   */\n      dup3\n        /* \"#utility.yul\":17898:17907   */\n      dup6\n        /* \"#utility.yul\":17894:17916   */\n      add\n        /* \"#utility.yul\":17873:17926   */\n      tag_303\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":17863:17926   */\n      swap2\n      pop\n        /* \"#utility.yul\":17819:17936   */\n      pop\n        /* \"#utility.yul\":17614:17943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17949:18129   */\n    tag_343:\n        /* \"#utility.yul\":17997:18074   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17994:17995   */\n      0x00\n        /* \"#utility.yul\":17987:18075   */\n      mstore\n        /* \"#utility.yul\":18094:18098   */\n      0x22\n        /* \"#utility.yul\":18091:18092   */\n      0x04\n        /* \"#utility.yul\":18084:18099   */\n      mstore\n        /* \"#utility.yul\":18118:18122   */\n      0x24\n        /* \"#utility.yul\":18115:18116   */\n      0x00\n        /* \"#utility.yul\":18108:18123   */\n      revert\n        /* \"#utility.yul\":18135:18455   */\n    tag_99:\n        /* \"#utility.yul\":18179:18185   */\n      0x00\n        /* \"#utility.yul\":18216:18217   */\n      0x02\n        /* \"#utility.yul\":18210:18214   */\n      dup3\n        /* \"#utility.yul\":18206:18218   */\n      div\n        /* \"#utility.yul\":18196:18218   */\n      swap1\n      pop\n        /* \"#utility.yul\":18263:18264   */\n      0x01\n        /* \"#utility.yul\":18257:18261   */\n      dup3\n        /* \"#utility.yul\":18253:18265   */\n      and\n        /* \"#utility.yul\":18284:18302   */\n      dup1\n        /* \"#utility.yul\":18274:18355   */\n      tag_551\n      jumpi\n        /* \"#utility.yul\":18340:18344   */\n      0x7f\n        /* \"#utility.yul\":18332:18338   */\n      dup3\n        /* \"#utility.yul\":18328:18345   */\n      and\n        /* \"#utility.yul\":18318:18345   */\n      swap2\n      pop\n        /* \"#utility.yul\":18274:18355   */\n    tag_551:\n        /* \"#utility.yul\":18402:18404   */\n      0x20\n        /* \"#utility.yul\":18394:18400   */\n      dup3\n        /* \"#utility.yul\":18391:18405   */\n      lt\n        /* \"#utility.yul\":18371:18389   */\n      dup2\n        /* \"#utility.yul\":18368:18406   */\n      sub\n        /* \"#utility.yul\":18365:18449   */\n      tag_552\n      jumpi\n        /* \"#utility.yul\":18421:18439   */\n      tag_553\n      tag_343\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":18365:18449   */\n    tag_552:\n        /* \"#utility.yul\":18186:18455   */\n      pop\n        /* \"#utility.yul\":18135:18455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18461:18634   */\n    tag_344:\n        /* \"#utility.yul\":18601:18626   */\n      0x546f6b656e20494420646f6573206e6f74206578697374000000000000000000\n        /* \"#utility.yul\":18597:18598   */\n      0x00\n        /* \"#utility.yul\":18589:18595   */\n      dup3\n        /* \"#utility.yul\":18585:18599   */\n      add\n        /* \"#utility.yul\":18578:18627   */\n      mstore\n        /* \"#utility.yul\":18461:18634   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18640:19006   */\n    tag_345:\n        /* \"#utility.yul\":18782:18785   */\n      0x00\n        /* \"#utility.yul\":18803:18870   */\n      tag_556\n        /* \"#utility.yul\":18867:18869   */\n      0x17\n        /* \"#utility.yul\":18862:18865   */\n      dup4\n        /* \"#utility.yul\":18803:18870   */\n      tag_314\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":18796:18870   */\n      swap2\n      pop\n        /* \"#utility.yul\":18879:18972   */\n      tag_557\n        /* \"#utility.yul\":18968:18971   */\n      dup3\n        /* \"#utility.yul\":18879:18972   */\n      tag_344\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":18997:18999   */\n      0x20\n        /* \"#utility.yul\":18992:18995   */\n      dup3\n        /* \"#utility.yul\":18988:19000   */\n      add\n        /* \"#utility.yul\":18981:19000   */\n      swap1\n      pop\n        /* \"#utility.yul\":18640:19006   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19012:19431   */\n    tag_110:\n        /* \"#utility.yul\":19178:19182   */\n      0x00\n        /* \"#utility.yul\":19216:19218   */\n      0x20\n        /* \"#utility.yul\":19205:19214   */\n      dup3\n        /* \"#utility.yul\":19201:19219   */\n      add\n        /* \"#utility.yul\":19193:19219   */\n      swap1\n      pop\n        /* \"#utility.yul\":19265:19274   */\n      dup2\n        /* \"#utility.yul\":19259:19263   */\n      dup2\n        /* \"#utility.yul\":19255:19275   */\n      sub\n        /* \"#utility.yul\":19251:19252   */\n      0x00\n        /* \"#utility.yul\":19240:19249   */\n      dup4\n        /* \"#utility.yul\":19236:19253   */\n      add\n        /* \"#utility.yul\":19229:19276   */\n      mstore\n        /* \"#utility.yul\":19293:19424   */\n      tag_559\n        /* \"#utility.yul\":19419:19423   */\n      dup2\n        /* \"#utility.yul\":19293:19424   */\n      tag_345\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":19285:19424   */\n      swap1\n      pop\n        /* \"#utility.yul\":19012:19431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19437:19617   */\n    tag_346:\n        /* \"#utility.yul\":19485:19562   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19482:19483   */\n      0x00\n        /* \"#utility.yul\":19475:19563   */\n      mstore\n        /* \"#utility.yul\":19582:19586   */\n      0x11\n        /* \"#utility.yul\":19579:19580   */\n      0x04\n        /* \"#utility.yul\":19572:19587   */\n      mstore\n        /* \"#utility.yul\":19606:19610   */\n      0x24\n        /* \"#utility.yul\":19603:19604   */\n      0x00\n        /* \"#utility.yul\":19596:19611   */\n      revert\n        /* \"#utility.yul\":19623:19814   */\n    tag_114:\n        /* \"#utility.yul\":19663:19666   */\n      0x00\n        /* \"#utility.yul\":19682:19702   */\n      tag_562\n        /* \"#utility.yul\":19700:19701   */\n      dup3\n        /* \"#utility.yul\":19682:19702   */\n      tag_304\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":19677:19702   */\n      swap2\n      pop\n        /* \"#utility.yul\":19716:19736   */\n      tag_563\n        /* \"#utility.yul\":19734:19735   */\n      dup4\n        /* \"#utility.yul\":19716:19736   */\n      tag_304\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":19711:19736   */\n      swap3\n      pop\n        /* \"#utility.yul\":19759:19760   */\n      dup3\n        /* \"#utility.yul\":19756:19757   */\n      dup3\n        /* \"#utility.yul\":19752:19761   */\n      add\n        /* \"#utility.yul\":19745:19761   */\n      swap1\n      pop\n        /* \"#utility.yul\":19780:19783   */\n      dup1\n        /* \"#utility.yul\":19777:19778   */\n      dup3\n        /* \"#utility.yul\":19774:19784   */\n      gt\n        /* \"#utility.yul\":19771:19807   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":19787:19805   */\n      tag_565\n      tag_346\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":19771:19807   */\n    tag_564:\n        /* \"#utility.yul\":19623:19814   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19820:20053   */\n    tag_119:\n        /* \"#utility.yul\":19859:19862   */\n      0x00\n        /* \"#utility.yul\":19882:19906   */\n      tag_567\n        /* \"#utility.yul\":19900:19905   */\n      dup3\n        /* \"#utility.yul\":19882:19906   */\n      tag_304\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":19873:19906   */\n      swap2\n      pop\n        /* \"#utility.yul\":19928:19994   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19921:19926   */\n      dup3\n        /* \"#utility.yul\":19918:19995   */\n      sub\n        /* \"#utility.yul\":19915:20018   */\n      tag_568\n      jumpi\n        /* \"#utility.yul\":19998:20016   */\n      tag_569\n      tag_346\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":19915:20018   */\n    tag_568:\n        /* \"#utility.yul\":20045:20046   */\n      0x01\n        /* \"#utility.yul\":20038:20043   */\n      dup3\n        /* \"#utility.yul\":20034:20047   */\n      add\n        /* \"#utility.yul\":20027:20047   */\n      swap1\n      pop\n        /* \"#utility.yul\":19820:20053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20059:20391   */\n    tag_128:\n        /* \"#utility.yul\":20180:20184   */\n      0x00\n        /* \"#utility.yul\":20218:20220   */\n      0x40\n        /* \"#utility.yul\":20207:20216   */\n      dup3\n        /* \"#utility.yul\":20203:20221   */\n      add\n        /* \"#utility.yul\":20195:20221   */\n      swap1\n      pop\n        /* \"#utility.yul\":20231:20302   */\n      tag_571\n        /* \"#utility.yul\":20299:20300   */\n      0x00\n        /* \"#utility.yul\":20288:20297   */\n      dup4\n        /* \"#utility.yul\":20284:20301   */\n      add\n        /* \"#utility.yul\":20275:20281   */\n      dup6\n        /* \"#utility.yul\":20231:20302   */\n      tag_340\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":20312:20384   */\n      tag_572\n        /* \"#utility.yul\":20380:20382   */\n      0x20\n        /* \"#utility.yul\":20369:20378   */\n      dup4\n        /* \"#utility.yul\":20365:20383   */\n      add\n        /* \"#utility.yul\":20356:20362   */\n      dup5\n        /* \"#utility.yul\":20312:20384   */\n      tag_340\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":20059:20391   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20397:20729   */\n    tag_134:\n        /* \"#utility.yul\":20518:20522   */\n      0x00\n        /* \"#utility.yul\":20556:20558   */\n      0x40\n        /* \"#utility.yul\":20545:20554   */\n      dup3\n        /* \"#utility.yul\":20541:20559   */\n      add\n        /* \"#utility.yul\":20533:20559   */\n      swap1\n      pop\n        /* \"#utility.yul\":20569:20640   */\n      tag_574\n        /* \"#utility.yul\":20637:20638   */\n      0x00\n        /* \"#utility.yul\":20626:20635   */\n      dup4\n        /* \"#utility.yul\":20622:20639   */\n      add\n        /* \"#utility.yul\":20613:20619   */\n      dup6\n        /* \"#utility.yul\":20569:20640   */\n      tag_307\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":20650:20722   */\n      tag_575\n        /* \"#utility.yul\":20718:20720   */\n      0x20\n        /* \"#utility.yul\":20707:20716   */\n      dup4\n        /* \"#utility.yul\":20703:20721   */\n      add\n        /* \"#utility.yul\":20694:20700   */\n      dup5\n        /* \"#utility.yul\":20650:20722   */\n      tag_307\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":20397:20729   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20735:20915   */\n    tag_149:\n        /* \"#utility.yul\":20783:20860   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20780:20781   */\n      0x00\n        /* \"#utility.yul\":20773:20861   */\n      mstore\n        /* \"#utility.yul\":20880:20884   */\n      0x32\n        /* \"#utility.yul\":20877:20878   */\n      0x04\n        /* \"#utility.yul\":20870:20885   */\n      mstore\n        /* \"#utility.yul\":20904:20908   */\n      0x24\n        /* \"#utility.yul\":20901:20902   */\n      0x00\n        /* \"#utility.yul\":20894:20909   */\n      revert\n        /* \"#utility.yul\":20921:21099   */\n    tag_347:\n        /* \"#utility.yul\":21061:21091   */\n      0x496e73756666696369656e742062616c616e636520746f206275726e00000000\n        /* \"#utility.yul\":21057:21058   */\n      0x00\n        /* \"#utility.yul\":21049:21055   */\n      dup3\n        /* \"#utility.yul\":21045:21059   */\n      add\n        /* \"#utility.yul\":21038:21092   */\n      mstore\n        /* \"#utility.yul\":20921:21099   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21105:21471   */\n    tag_348:\n        /* \"#utility.yul\":21247:21250   */\n      0x00\n        /* \"#utility.yul\":21268:21335   */\n      tag_579\n        /* \"#utility.yul\":21332:21334   */\n      0x1c\n        /* \"#utility.yul\":21327:21330   */\n      dup4\n        /* \"#utility.yul\":21268:21335   */\n      tag_314\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":21261:21335   */\n      swap2\n      pop\n        /* \"#utility.yul\":21344:21437   */\n      tag_580\n        /* \"#utility.yul\":21433:21436   */\n      dup3\n        /* \"#utility.yul\":21344:21437   */\n      tag_347\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":21462:21464   */\n      0x20\n        /* \"#utility.yul\":21457:21460   */\n      dup3\n        /* \"#utility.yul\":21453:21465   */\n      add\n        /* \"#utility.yul\":21446:21465   */\n      swap1\n      pop\n        /* \"#utility.yul\":21105:21471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21477:21896   */\n    tag_179:\n        /* \"#utility.yul\":21643:21647   */\n      0x00\n        /* \"#utility.yul\":21681:21683   */\n      0x20\n        /* \"#utility.yul\":21670:21679   */\n      dup3\n        /* \"#utility.yul\":21666:21684   */\n      add\n        /* \"#utility.yul\":21658:21684   */\n      swap1\n      pop\n        /* \"#utility.yul\":21730:21739   */\n      dup2\n        /* \"#utility.yul\":21724:21728   */\n      dup2\n        /* \"#utility.yul\":21720:21740   */\n      sub\n        /* \"#utility.yul\":21716:21717   */\n      0x00\n        /* \"#utility.yul\":21705:21714   */\n      dup4\n        /* \"#utility.yul\":21701:21718   */\n      add\n        /* \"#utility.yul\":21694:21741   */\n      mstore\n        /* \"#utility.yul\":21758:21889   */\n      tag_582\n        /* \"#utility.yul\":21884:21888   */\n      dup2\n        /* \"#utility.yul\":21758:21889   */\n      tag_348\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":21750:21889   */\n      swap1\n      pop\n        /* \"#utility.yul\":21477:21896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21902:22096   */\n    tag_183:\n        /* \"#utility.yul\":21942:21946   */\n      0x00\n        /* \"#utility.yul\":21962:21982   */\n      tag_584\n        /* \"#utility.yul\":21980:21981   */\n      dup3\n        /* \"#utility.yul\":21962:21982   */\n      tag_304\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":21957:21982   */\n      swap2\n      pop\n        /* \"#utility.yul\":21996:22016   */\n      tag_585\n        /* \"#utility.yul\":22014:22015   */\n      dup4\n        /* \"#utility.yul\":21996:22016   */\n      tag_304\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":21991:22016   */\n      swap3\n      pop\n        /* \"#utility.yul\":22040:22041   */\n      dup3\n        /* \"#utility.yul\":22037:22038   */\n      dup3\n        /* \"#utility.yul\":22033:22042   */\n      sub\n        /* \"#utility.yul\":22025:22042   */\n      swap1\n      pop\n        /* \"#utility.yul\":22064:22065   */\n      dup2\n        /* \"#utility.yul\":22058:22062   */\n      dup2\n        /* \"#utility.yul\":22055:22066   */\n      gt\n        /* \"#utility.yul\":22052:22089   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":22069:22087   */\n      tag_587\n      tag_346\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":22052:22089   */\n    tag_586:\n        /* \"#utility.yul\":21902:22096   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22102:22655   */\n    tag_250:\n        /* \"#utility.yul\":22279:22283   */\n      0x00\n        /* \"#utility.yul\":22317:22320   */\n      0x80\n        /* \"#utility.yul\":22306:22315   */\n      dup3\n        /* \"#utility.yul\":22302:22321   */\n      add\n        /* \"#utility.yul\":22294:22321   */\n      swap1\n      pop\n        /* \"#utility.yul\":22331:22402   */\n      tag_589\n        /* \"#utility.yul\":22399:22400   */\n      0x00\n        /* \"#utility.yul\":22388:22397   */\n      dup4\n        /* \"#utility.yul\":22384:22401   */\n      add\n        /* \"#utility.yul\":22375:22381   */\n      dup8\n        /* \"#utility.yul\":22331:22402   */\n      tag_340\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":22412:22484   */\n      tag_590\n        /* \"#utility.yul\":22480:22482   */\n      0x20\n        /* \"#utility.yul\":22469:22478   */\n      dup4\n        /* \"#utility.yul\":22465:22483   */\n      add\n        /* \"#utility.yul\":22456:22462   */\n      dup7\n        /* \"#utility.yul\":22412:22484   */\n      tag_307\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":22494:22566   */\n      tag_591\n        /* \"#utility.yul\":22562:22564   */\n      0x40\n        /* \"#utility.yul\":22551:22560   */\n      dup4\n        /* \"#utility.yul\":22547:22565   */\n      add\n        /* \"#utility.yul\":22538:22544   */\n      dup6\n        /* \"#utility.yul\":22494:22566   */\n      tag_307\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":22576:22648   */\n      tag_592\n        /* \"#utility.yul\":22644:22646   */\n      0x60\n        /* \"#utility.yul\":22633:22642   */\n      dup4\n        /* \"#utility.yul\":22629:22647   */\n      add\n        /* \"#utility.yul\":22620:22626   */\n      dup5\n        /* \"#utility.yul\":22576:22648   */\n      tag_307\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":22102:22655   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22661:23295   */\n    tag_259:\n        /* \"#utility.yul\":22882:22886   */\n      0x00\n        /* \"#utility.yul\":22920:22922   */\n      0x40\n        /* \"#utility.yul\":22909:22918   */\n      dup3\n        /* \"#utility.yul\":22905:22923   */\n      add\n        /* \"#utility.yul\":22897:22923   */\n      swap1\n      pop\n        /* \"#utility.yul\":22969:22978   */\n      dup2\n        /* \"#utility.yul\":22963:22967   */\n      dup2\n        /* \"#utility.yul\":22959:22979   */\n      sub\n        /* \"#utility.yul\":22955:22956   */\n      0x00\n        /* \"#utility.yul\":22944:22953   */\n      dup4\n        /* \"#utility.yul\":22940:22957   */\n      add\n        /* \"#utility.yul\":22933:22980   */\n      mstore\n        /* \"#utility.yul\":22997:23105   */\n      tag_594\n        /* \"#utility.yul\":23100:23104   */\n      dup2\n        /* \"#utility.yul\":23091:23097   */\n      dup6\n        /* \"#utility.yul\":22997:23105   */\n      tag_339\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":22989:23105   */\n      swap1\n      pop\n        /* \"#utility.yul\":23152:23161   */\n      dup2\n        /* \"#utility.yul\":23146:23150   */\n      dup2\n        /* \"#utility.yul\":23142:23162   */\n      sub\n        /* \"#utility.yul\":23137:23139   */\n      0x20\n        /* \"#utility.yul\":23126:23135   */\n      dup4\n        /* \"#utility.yul\":23122:23140   */\n      add\n        /* \"#utility.yul\":23115:23163   */\n      mstore\n        /* \"#utility.yul\":23180:23288   */\n      tag_595\n        /* \"#utility.yul\":23283:23287   */\n      dup2\n        /* \"#utility.yul\":23274:23280   */\n      dup5\n        /* \"#utility.yul\":23180:23288   */\n      tag_339\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":23172:23288   */\n      swap1\n      pop\n        /* \"#utility.yul\":22661:23295   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23301:23399   */\n    tag_349:\n        /* \"#utility.yul\":23352:23358   */\n      0x00\n        /* \"#utility.yul\":23386:23391   */\n      dup2\n        /* \"#utility.yul\":23380:23392   */\n      mload\n        /* \"#utility.yul\":23370:23392   */\n      swap1\n      pop\n        /* \"#utility.yul\":23301:23399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23405:23573   */\n    tag_350:\n        /* \"#utility.yul\":23488:23499   */\n      0x00\n        /* \"#utility.yul\":23522:23528   */\n      dup3\n        /* \"#utility.yul\":23517:23520   */\n      dup3\n        /* \"#utility.yul\":23510:23529   */\n      mstore\n        /* \"#utility.yul\":23562:23566   */\n      0x20\n        /* \"#utility.yul\":23557:23560   */\n      dup3\n        /* \"#utility.yul\":23553:23567   */\n      add\n        /* \"#utility.yul\":23538:23567   */\n      swap1\n      pop\n        /* \"#utility.yul\":23405:23573   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23579:23952   */\n    tag_351:\n        /* \"#utility.yul\":23665:23668   */\n      0x00\n        /* \"#utility.yul\":23693:23731   */\n      tag_599\n        /* \"#utility.yul\":23725:23730   */\n      dup3\n        /* \"#utility.yul\":23693:23731   */\n      tag_349\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":23747:23817   */\n      tag_600\n        /* \"#utility.yul\":23810:23816   */\n      dup2\n        /* \"#utility.yul\":23805:23808   */\n      dup6\n        /* \"#utility.yul\":23747:23817   */\n      tag_350\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":23740:23817   */\n      swap4\n      pop\n        /* \"#utility.yul\":23826:23891   */\n      tag_601\n        /* \"#utility.yul\":23884:23890   */\n      dup2\n        /* \"#utility.yul\":23879:23882   */\n      dup6\n        /* \"#utility.yul\":23872:23876   */\n      0x20\n        /* \"#utility.yul\":23865:23870   */\n      dup7\n        /* \"#utility.yul\":23861:23877   */\n      add\n        /* \"#utility.yul\":23826:23891   */\n      tag_315\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":23916:23945   */\n      tag_602\n        /* \"#utility.yul\":23938:23944   */\n      dup2\n        /* \"#utility.yul\":23916:23945   */\n      tag_316\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":23911:23914   */\n      dup5\n        /* \"#utility.yul\":23907:23946   */\n      add\n        /* \"#utility.yul\":23900:23946   */\n      swap2\n      pop\n        /* \"#utility.yul\":23669:23952   */\n      pop\n        /* \"#utility.yul\":23579:23952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23958:24709   */\n    tag_263:\n        /* \"#utility.yul\":24181:24185   */\n      0x00\n        /* \"#utility.yul\":24219:24222   */\n      0xa0\n        /* \"#utility.yul\":24208:24217   */\n      dup3\n        /* \"#utility.yul\":24204:24223   */\n      add\n        /* \"#utility.yul\":24196:24223   */\n      swap1\n      pop\n        /* \"#utility.yul\":24233:24304   */\n      tag_604\n        /* \"#utility.yul\":24301:24302   */\n      0x00\n        /* \"#utility.yul\":24290:24299   */\n      dup4\n        /* \"#utility.yul\":24286:24303   */\n      add\n        /* \"#utility.yul\":24277:24283   */\n      dup9\n        /* \"#utility.yul\":24233:24304   */\n      tag_340\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":24314:24386   */\n      tag_605\n        /* \"#utility.yul\":24382:24384   */\n      0x20\n        /* \"#utility.yul\":24371:24380   */\n      dup4\n        /* \"#utility.yul\":24367:24385   */\n      add\n        /* \"#utility.yul\":24358:24364   */\n      dup8\n        /* \"#utility.yul\":24314:24386   */\n      tag_340\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":24396:24468   */\n      tag_606\n        /* \"#utility.yul\":24464:24466   */\n      0x40\n        /* \"#utility.yul\":24453:24462   */\n      dup4\n        /* \"#utility.yul\":24449:24467   */\n      add\n        /* \"#utility.yul\":24440:24446   */\n      dup7\n        /* \"#utility.yul\":24396:24468   */\n      tag_307\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":24478:24550   */\n      tag_607\n        /* \"#utility.yul\":24546:24548   */\n      0x60\n        /* \"#utility.yul\":24535:24544   */\n      dup4\n        /* \"#utility.yul\":24531:24549   */\n      add\n        /* \"#utility.yul\":24522:24528   */\n      dup6\n        /* \"#utility.yul\":24478:24550   */\n      tag_307\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":24598:24607   */\n      dup2\n        /* \"#utility.yul\":24592:24596   */\n      dup2\n        /* \"#utility.yul\":24588:24608   */\n      sub\n        /* \"#utility.yul\":24582:24585   */\n      0x80\n        /* \"#utility.yul\":24571:24580   */\n      dup4\n        /* \"#utility.yul\":24567:24586   */\n      add\n        /* \"#utility.yul\":24560:24609   */\n      mstore\n        /* \"#utility.yul\":24626:24702   */\n      tag_608\n        /* \"#utility.yul\":24697:24701   */\n      dup2\n        /* \"#utility.yul\":24688:24694   */\n      dup5\n        /* \"#utility.yul\":24626:24702   */\n      tag_351\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":24618:24702   */\n      swap1\n      pop\n        /* \"#utility.yul\":23958:24709   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24715:24856   */\n    tag_352:\n        /* \"#utility.yul\":24771:24776   */\n      0x00\n        /* \"#utility.yul\":24802:24808   */\n      dup2\n        /* \"#utility.yul\":24796:24809   */\n      mload\n        /* \"#utility.yul\":24787:24809   */\n      swap1\n      pop\n        /* \"#utility.yul\":24818:24850   */\n      tag_610\n        /* \"#utility.yul\":24844:24849   */\n      dup2\n        /* \"#utility.yul\":24818:24850   */\n      tag_309\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":24715:24856   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24862:25211   */\n    tag_266:\n        /* \"#utility.yul\":24931:24937   */\n      0x00\n        /* \"#utility.yul\":24980:24982   */\n      0x20\n        /* \"#utility.yul\":24968:24977   */\n      dup3\n        /* \"#utility.yul\":24959:24966   */\n      dup5\n        /* \"#utility.yul\":24955:24978   */\n      sub\n        /* \"#utility.yul\":24951:24983   */\n      slt\n        /* \"#utility.yul\":24948:25067   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":24986:25065   */\n      tag_613\n      tag_298\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":24948:25067   */\n    tag_612:\n        /* \"#utility.yul\":25106:25107   */\n      0x00\n        /* \"#utility.yul\":25131:25194   */\n      tag_614\n        /* \"#utility.yul\":25186:25193   */\n      dup5\n        /* \"#utility.yul\":25177:25183   */\n      dup3\n        /* \"#utility.yul\":25166:25175   */\n      dup6\n        /* \"#utility.yul\":25162:25184   */\n      add\n        /* \"#utility.yul\":25131:25194   */\n      tag_352\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":25121:25194   */\n      swap2\n      pop\n        /* \"#utility.yul\":25077:25204   */\n      pop\n        /* \"#utility.yul\":24862:25211   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25217:26270   */\n    tag_282:\n        /* \"#utility.yul\":25540:25544   */\n      0x00\n        /* \"#utility.yul\":25578:25581   */\n      0xa0\n        /* \"#utility.yul\":25567:25576   */\n      dup3\n        /* \"#utility.yul\":25563:25582   */\n      add\n        /* \"#utility.yul\":25555:25582   */\n      swap1\n      pop\n        /* \"#utility.yul\":25592:25663   */\n      tag_616\n        /* \"#utility.yul\":25660:25661   */\n      0x00\n        /* \"#utility.yul\":25649:25658   */\n      dup4\n        /* \"#utility.yul\":25645:25662   */\n      add\n        /* \"#utility.yul\":25636:25642   */\n      dup9\n        /* \"#utility.yul\":25592:25663   */\n      tag_340\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":25673:25745   */\n      tag_617\n        /* \"#utility.yul\":25741:25743   */\n      0x20\n        /* \"#utility.yul\":25730:25739   */\n      dup4\n        /* \"#utility.yul\":25726:25744   */\n      add\n        /* \"#utility.yul\":25717:25723   */\n      dup8\n        /* \"#utility.yul\":25673:25745   */\n      tag_340\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":25792:25801   */\n      dup2\n        /* \"#utility.yul\":25786:25790   */\n      dup2\n        /* \"#utility.yul\":25782:25802   */\n      sub\n        /* \"#utility.yul\":25777:25779   */\n      0x40\n        /* \"#utility.yul\":25766:25775   */\n      dup4\n        /* \"#utility.yul\":25762:25780   */\n      add\n        /* \"#utility.yul\":25755:25803   */\n      mstore\n        /* \"#utility.yul\":25820:25928   */\n      tag_618\n        /* \"#utility.yul\":25923:25927   */\n      dup2\n        /* \"#utility.yul\":25914:25920   */\n      dup7\n        /* \"#utility.yul\":25820:25928   */\n      tag_339\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":25812:25928   */\n      swap1\n      pop\n        /* \"#utility.yul\":25975:25984   */\n      dup2\n        /* \"#utility.yul\":25969:25973   */\n      dup2\n        /* \"#utility.yul\":25965:25985   */\n      sub\n        /* \"#utility.yul\":25960:25962   */\n      0x60\n        /* \"#utility.yul\":25949:25958   */\n      dup4\n        /* \"#utility.yul\":25945:25963   */\n      add\n        /* \"#utility.yul\":25938:25986   */\n      mstore\n        /* \"#utility.yul\":26003:26111   */\n      tag_619\n        /* \"#utility.yul\":26106:26110   */\n      dup2\n        /* \"#utility.yul\":26097:26103   */\n      dup6\n        /* \"#utility.yul\":26003:26111   */\n      tag_339\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":25995:26111   */\n      swap1\n      pop\n        /* \"#utility.yul\":26159:26168   */\n      dup2\n        /* \"#utility.yul\":26153:26157   */\n      dup2\n        /* \"#utility.yul\":26149:26169   */\n      sub\n        /* \"#utility.yul\":26143:26146   */\n      0x80\n        /* \"#utility.yul\":26132:26141   */\n      dup4\n        /* \"#utility.yul\":26128:26147   */\n      add\n        /* \"#utility.yul\":26121:26170   */\n      mstore\n        /* \"#utility.yul\":26187:26263   */\n      tag_620\n        /* \"#utility.yul\":26258:26262   */\n      dup2\n        /* \"#utility.yul\":26249:26255   */\n      dup5\n        /* \"#utility.yul\":26187:26263   */\n      tag_351\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":26179:26263   */\n      swap1\n      pop\n        /* \"#utility.yul\":25217:26270   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202fde6745a2b87497aff98210e40bbd18a820eda07f0606fb93a7317fb830dbd564736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2956": {
									"entryPoint": null,
									"id": 2956,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_345": {
									"entryPoint": null,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_958": {
									"entryPoint": 229,
									"id": 958,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 248,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 813,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6778:13",
										"nodeType": "YulBlock",
										"src": "0:6778:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "922:274:13",
													"nodeType": "YulBlock",
													"src": "922:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:13",
																"nodeType": "YulBlock",
																"src": "968:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:13"
																			},
																			"nativeSrc": "970:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:13"
																		},
																		"nativeSrc": "970:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:13"
																		},
																		"nativeSrc": "939:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:13",
																		"nodeType": "YulLiteral",
																		"src": "964:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:13"
																},
																"nativeSrc": "935:32:13",
																"nodeType": "YulFunctionCall",
																"src": "935:32:13"
															},
															"nativeSrc": "932:119:13",
															"nodeType": "YulIf",
															"src": "932:119:13"
														},
														{
															"nativeSrc": "1061:128:13",
															"nodeType": "YulBlock",
															"src": "1061:128:13",
															"statements": [
																{
																	"nativeSrc": "1076:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:13"
																				},
																				"nativeSrc": "1147:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:13"
																		},
																		"nativeSrc": "1115:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:13",
														"nodeType": "YulTypedName",
														"src": "892:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:13",
														"nodeType": "YulTypedName",
														"src": "903:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:13",
														"nodeType": "YulTypedName",
														"src": "915:6:13",
														"type": ""
													}
												],
												"src": "845:351:13"
											},
											{
												"body": {
													"nativeSrc": "1267:53:13",
													"nodeType": "YulBlock",
													"src": "1267:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:13"
																		},
																		"nativeSrc": "1289:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:13"
																},
																"nativeSrc": "1277:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:13"
															},
															"nativeSrc": "1277:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:13",
														"nodeType": "YulTypedName",
														"src": "1255:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:13",
														"nodeType": "YulTypedName",
														"src": "1262:3:13",
														"type": ""
													}
												],
												"src": "1202:118:13"
											},
											{
												"body": {
													"nativeSrc": "1424:124:13",
													"nodeType": "YulBlock",
													"src": "1424:124:13",
													"statements": [
														{
															"nativeSrc": "1434:26:13",
															"nodeType": "YulAssignment",
															"src": "1434:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:13"
																},
																"nativeSrc": "1442:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:13"
																		},
																		"nativeSrc": "1523:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:13"
																},
																"nativeSrc": "1470:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:13"
															},
															"nativeSrc": "1470:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:13",
														"nodeType": "YulTypedName",
														"src": "1396:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:13",
														"nodeType": "YulTypedName",
														"src": "1408:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:13",
														"nodeType": "YulTypedName",
														"src": "1419:4:13",
														"type": ""
													}
												],
												"src": "1326:222:13"
											},
											{
												"body": {
													"nativeSrc": "1613:40:13",
													"nodeType": "YulBlock",
													"src": "1613:40:13",
													"statements": [
														{
															"nativeSrc": "1624:22:13",
															"nodeType": "YulAssignment",
															"src": "1624:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1640:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1640:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1634:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1634:5:13"
																},
																"nativeSrc": "1634:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1634:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1624:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1554:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:13",
														"nodeType": "YulTypedName",
														"src": "1596:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1606:6:13",
														"nodeType": "YulTypedName",
														"src": "1606:6:13",
														"type": ""
													}
												],
												"src": "1554:99:13"
											},
											{
												"body": {
													"nativeSrc": "1687:152:13",
													"nodeType": "YulBlock",
													"src": "1687:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1704:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1704:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1707:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1707:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1697:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1697:6:13"
																},
																"nativeSrc": "1697:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1697:88:13"
															},
															"nativeSrc": "1697:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1697:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1801:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1801:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1804:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1804:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1794:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:13"
																},
																"nativeSrc": "1794:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1794:15:13"
															},
															"nativeSrc": "1794:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1794:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1825:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1825:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1828:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1828:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1818:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1818:6:13"
																},
																"nativeSrc": "1818:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1818:15:13"
															},
															"nativeSrc": "1818:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1818:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1659:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1659:180:13"
											},
											{
												"body": {
													"nativeSrc": "1873:152:13",
													"nodeType": "YulBlock",
													"src": "1873:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1890:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1890:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1893:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1893:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1883:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1883:6:13"
																},
																"nativeSrc": "1883:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1883:88:13"
															},
															"nativeSrc": "1883:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1883:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1987:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1990:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1990:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1980:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:13"
																},
																"nativeSrc": "1980:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1980:15:13"
															},
															"nativeSrc": "1980:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1980:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2011:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2011:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2014:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2014:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2004:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:13"
																},
																"nativeSrc": "2004:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2004:15:13"
															},
															"nativeSrc": "2004:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2004:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1845:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1845:180:13"
											},
											{
												"body": {
													"nativeSrc": "2082:269:13",
													"nodeType": "YulBlock",
													"src": "2082:269:13",
													"statements": [
														{
															"nativeSrc": "2092:22:13",
															"nodeType": "YulAssignment",
															"src": "2092:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2106:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2106:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2112:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2112:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2102:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2102:3:13"
																},
																"nativeSrc": "2102:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2102:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2092:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:13"
																}
															]
														},
														{
															"nativeSrc": "2123:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2123:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2153:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2153:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2159:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2159:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2149:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2149:3:13"
																},
																"nativeSrc": "2149:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2149:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2127:18:13",
																	"nodeType": "YulTypedName",
																	"src": "2127:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2200:51:13",
																"nodeType": "YulBlock",
																"src": "2200:51:13",
																"statements": [
																	{
																		"nativeSrc": "2214:27:13",
																		"nodeType": "YulAssignment",
																		"src": "2214:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2228:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "2228:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2236:4:13",
																					"nodeType": "YulLiteral",
																					"src": "2236:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2224:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2224:3:13"
																			},
																			"nativeSrc": "2224:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2224:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2214:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2214:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2180:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "2180:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2173:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:13"
																},
																"nativeSrc": "2173:26:13",
																"nodeType": "YulFunctionCall",
																"src": "2173:26:13"
															},
															"nativeSrc": "2170:81:13",
															"nodeType": "YulIf",
															"src": "2170:81:13"
														},
														{
															"body": {
																"nativeSrc": "2303:42:13",
																"nodeType": "YulBlock",
																"src": "2303:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2317:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "2317:16:13"
																			},
																			"nativeSrc": "2317:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2317:18:13"
																		},
																		"nativeSrc": "2317:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2317:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2267:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "2267:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2290:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2290:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2298:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2298:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2287:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2287:2:13"
																		},
																		"nativeSrc": "2287:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2287:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2264:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2264:2:13"
																},
																"nativeSrc": "2264:38:13",
																"nodeType": "YulFunctionCall",
																"src": "2264:38:13"
															},
															"nativeSrc": "2261:84:13",
															"nodeType": "YulIf",
															"src": "2261:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2031:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2066:4:13",
														"nodeType": "YulTypedName",
														"src": "2066:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2075:6:13",
														"nodeType": "YulTypedName",
														"src": "2075:6:13",
														"type": ""
													}
												],
												"src": "2031:320:13"
											},
											{
												"body": {
													"nativeSrc": "2411:87:13",
													"nodeType": "YulBlock",
													"src": "2411:87:13",
													"statements": [
														{
															"nativeSrc": "2421:11:13",
															"nodeType": "YulAssignment",
															"src": "2421:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "2429:3:13",
																"nodeType": "YulIdentifier",
																"src": "2429:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2421:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2421:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2449:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2449:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2452:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2452:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2442:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:13"
																},
																"nativeSrc": "2442:14:13",
																"nodeType": "YulFunctionCall",
																"src": "2442:14:13"
															},
															"nativeSrc": "2442:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "2442:14:13"
														},
														{
															"nativeSrc": "2465:26:13",
															"nodeType": "YulAssignment",
															"src": "2465:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2486:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2486:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2473:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2473:9:13"
																},
																"nativeSrc": "2473:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2473:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2465:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2465:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2357:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2398:3:13",
														"nodeType": "YulTypedName",
														"src": "2398:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2406:4:13",
														"nodeType": "YulTypedName",
														"src": "2406:4:13",
														"type": ""
													}
												],
												"src": "2357:141:13"
											},
											{
												"body": {
													"nativeSrc": "2548:49:13",
													"nodeType": "YulBlock",
													"src": "2548:49:13",
													"statements": [
														{
															"nativeSrc": "2558:33:13",
															"nodeType": "YulAssignment",
															"src": "2558:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2576:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2576:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2583:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2583:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2572:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2572:3:13"
																		},
																		"nativeSrc": "2572:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2572:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2588:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2588:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2568:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2568:3:13"
																},
																"nativeSrc": "2568:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2568:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2558:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2504:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2531:5:13",
														"nodeType": "YulTypedName",
														"src": "2531:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2541:6:13",
														"nodeType": "YulTypedName",
														"src": "2541:6:13",
														"type": ""
													}
												],
												"src": "2504:93:13"
											},
											{
												"body": {
													"nativeSrc": "2656:54:13",
													"nodeType": "YulBlock",
													"src": "2656:54:13",
													"statements": [
														{
															"nativeSrc": "2666:37:13",
															"nodeType": "YulAssignment",
															"src": "2666:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2691:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2691:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2697:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2697:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2687:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2687:3:13"
																},
																"nativeSrc": "2687:16:13",
																"nodeType": "YulFunctionCall",
																"src": "2687:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2666:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "2666:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2603:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2631:4:13",
														"nodeType": "YulTypedName",
														"src": "2631:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2637:5:13",
														"nodeType": "YulTypedName",
														"src": "2637:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2647:8:13",
														"nodeType": "YulTypedName",
														"src": "2647:8:13",
														"type": ""
													}
												],
												"src": "2603:107:13"
											},
											{
												"body": {
													"nativeSrc": "2792:317:13",
													"nodeType": "YulBlock",
													"src": "2792:317:13",
													"statements": [
														{
															"nativeSrc": "2802:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2802:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2823:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "2823:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2835:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2835:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2819:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:13"
																},
																"nativeSrc": "2819:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2819:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2806:9:13",
																	"nodeType": "YulTypedName",
																	"src": "2806:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2846:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2846:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2877:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2877:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2888:66:13",
																		"nodeType": "YulLiteral",
																		"src": "2888:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2858:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2858:18:13"
																},
																"nativeSrc": "2858:97:13",
																"nodeType": "YulFunctionCall",
																"src": "2858:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2850:4:13",
																	"nodeType": "YulTypedName",
																	"src": "2850:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2964:51:13",
															"nodeType": "YulAssignment",
															"src": "2964:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2995:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2995:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3006:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "3006:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2976:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2976:18:13"
																},
																"nativeSrc": "2976:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2976:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2964:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "2964:8:13"
																}
															]
														},
														{
															"nativeSrc": "3024:30:13",
															"nodeType": "YulAssignment",
															"src": "3024:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3037:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3037:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3048:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "3048:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3044:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3044:3:13"
																		},
																		"nativeSrc": "3044:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3044:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3033:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3033:3:13"
																},
																"nativeSrc": "3033:21:13",
																"nodeType": "YulFunctionCall",
																"src": "3033:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3024:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3024:5:13"
																}
															]
														},
														{
															"nativeSrc": "3063:40:13",
															"nodeType": "YulAssignment",
															"src": "3063:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3076:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3087:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "3087:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3097:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "3097:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3083:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3083:3:13"
																		},
																		"nativeSrc": "3083:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3083:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3073:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3073:2:13"
																},
																"nativeSrc": "3073:30:13",
																"nodeType": "YulFunctionCall",
																"src": "3073:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3063:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3063:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2716:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2753:5:13",
														"nodeType": "YulTypedName",
														"src": "2753:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2760:10:13",
														"nodeType": "YulTypedName",
														"src": "2760:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2772:8:13",
														"nodeType": "YulTypedName",
														"src": "2772:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2785:6:13",
														"nodeType": "YulTypedName",
														"src": "2785:6:13",
														"type": ""
													}
												],
												"src": "2716:393:13"
											},
											{
												"body": {
													"nativeSrc": "3160:32:13",
													"nodeType": "YulBlock",
													"src": "3160:32:13",
													"statements": [
														{
															"nativeSrc": "3170:16:13",
															"nodeType": "YulAssignment",
															"src": "3170:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "3181:5:13",
																"nodeType": "YulIdentifier",
																"src": "3181:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3170:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3170:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3115:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3142:5:13",
														"nodeType": "YulTypedName",
														"src": "3142:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3152:7:13",
														"nodeType": "YulTypedName",
														"src": "3152:7:13",
														"type": ""
													}
												],
												"src": "3115:77:13"
											},
											{
												"body": {
													"nativeSrc": "3230:28:13",
													"nodeType": "YulBlock",
													"src": "3230:28:13",
													"statements": [
														{
															"nativeSrc": "3240:12:13",
															"nodeType": "YulAssignment",
															"src": "3240:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "3247:5:13",
																"nodeType": "YulIdentifier",
																"src": "3247:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3240:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3240:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3198:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3216:5:13",
														"nodeType": "YulTypedName",
														"src": "3216:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3226:3:13",
														"nodeType": "YulTypedName",
														"src": "3226:3:13",
														"type": ""
													}
												],
												"src": "3198:60:13"
											},
											{
												"body": {
													"nativeSrc": "3324:82:13",
													"nodeType": "YulBlock",
													"src": "3324:82:13",
													"statements": [
														{
															"nativeSrc": "3334:66:13",
															"nodeType": "YulAssignment",
															"src": "3334:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3392:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3392:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3374:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3374:17:13"
																				},
																				"nativeSrc": "3374:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3365:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "3365:8:13"
																		},
																		"nativeSrc": "3365:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3365:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3347:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3347:17:13"
																},
																"nativeSrc": "3347:53:13",
																"nodeType": "YulFunctionCall",
																"src": "3347:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3334:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3334:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3264:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3304:5:13",
														"nodeType": "YulTypedName",
														"src": "3304:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3314:9:13",
														"nodeType": "YulTypedName",
														"src": "3314:9:13",
														"type": ""
													}
												],
												"src": "3264:142:13"
											},
											{
												"body": {
													"nativeSrc": "3459:28:13",
													"nodeType": "YulBlock",
													"src": "3459:28:13",
													"statements": [
														{
															"nativeSrc": "3469:12:13",
															"nodeType": "YulAssignment",
															"src": "3469:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "3476:5:13",
																"nodeType": "YulIdentifier",
																"src": "3476:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3469:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3469:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3412:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3445:5:13",
														"nodeType": "YulTypedName",
														"src": "3445:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3455:3:13",
														"nodeType": "YulTypedName",
														"src": "3455:3:13",
														"type": ""
													}
												],
												"src": "3412:75:13"
											},
											{
												"body": {
													"nativeSrc": "3569:193:13",
													"nodeType": "YulBlock",
													"src": "3569:193:13",
													"statements": [
														{
															"nativeSrc": "3579:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3579:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3634:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "3634:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3603:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "3603:30:13"
																},
																"nativeSrc": "3603:39:13",
																"nodeType": "YulFunctionCall",
																"src": "3603:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3583:16:13",
																	"nodeType": "YulTypedName",
																	"src": "3583:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3658:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3658:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3698:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "3698:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3692:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3692:5:13"
																				},
																				"nativeSrc": "3692:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3692:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3705:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3705:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3737:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "3737:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3713:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "3713:23:13"
																				},
																				"nativeSrc": "3713:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3713:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3664:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "3664:27:13"
																		},
																		"nativeSrc": "3664:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3664:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3651:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3651:6:13"
																},
																"nativeSrc": "3651:105:13",
																"nodeType": "YulFunctionCall",
																"src": "3651:105:13"
															},
															"nativeSrc": "3651:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "3651:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3493:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3546:4:13",
														"nodeType": "YulTypedName",
														"src": "3546:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3552:6:13",
														"nodeType": "YulTypedName",
														"src": "3552:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3560:7:13",
														"nodeType": "YulTypedName",
														"src": "3560:7:13",
														"type": ""
													}
												],
												"src": "3493:269:13"
											},
											{
												"body": {
													"nativeSrc": "3817:24:13",
													"nodeType": "YulBlock",
													"src": "3817:24:13",
													"statements": [
														{
															"nativeSrc": "3827:8:13",
															"nodeType": "YulAssignment",
															"src": "3827:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3834:1:13",
																"nodeType": "YulLiteral",
																"src": "3834:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3827:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3827:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3768:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3813:3:13",
														"nodeType": "YulTypedName",
														"src": "3813:3:13",
														"type": ""
													}
												],
												"src": "3768:73:13"
											},
											{
												"body": {
													"nativeSrc": "3900:136:13",
													"nodeType": "YulBlock",
													"src": "3900:136:13",
													"statements": [
														{
															"nativeSrc": "3910:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3910:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3924:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "3924:30:13"
																},
																"nativeSrc": "3924:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3924:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3914:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3914:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4009:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4009:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4015:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4015:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4023:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4023:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3965:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3965:43:13"
																},
																"nativeSrc": "3965:65:13",
																"nodeType": "YulFunctionCall",
																"src": "3965:65:13"
															},
															"nativeSrc": "3965:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "3965:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3847:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3886:4:13",
														"nodeType": "YulTypedName",
														"src": "3886:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3892:6:13",
														"nodeType": "YulTypedName",
														"src": "3892:6:13",
														"type": ""
													}
												],
												"src": "3847:189:13"
											},
											{
												"body": {
													"nativeSrc": "4092:136:13",
													"nodeType": "YulBlock",
													"src": "4092:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4159:63:13",
																"nodeType": "YulBlock",
																"src": "4159:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4203:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "4203:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4210:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4210:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4173:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "4173:29:13"
																			},
																			"nativeSrc": "4173:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4173:39:13"
																		},
																		"nativeSrc": "4173:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4173:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4112:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4112:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4119:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4119:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4109:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4109:2:13"
																},
																"nativeSrc": "4109:14:13",
																"nodeType": "YulFunctionCall",
																"src": "4109:14:13"
															},
															"nativeSrc": "4102:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4124:26:13",
																"nodeType": "YulBlock",
																"src": "4124:26:13",
																"statements": [
																	{
																		"nativeSrc": "4126:22:13",
																		"nodeType": "YulAssignment",
																		"src": "4126:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4139:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "4139:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4146:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4146:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4135:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4135:3:13"
																			},
																			"nativeSrc": "4135:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4135:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4126:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4126:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4106:2:13",
																"nodeType": "YulBlock",
																"src": "4106:2:13",
																"statements": []
															},
															"src": "4102:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4042:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4080:5:13",
														"nodeType": "YulTypedName",
														"src": "4080:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4087:3:13",
														"nodeType": "YulTypedName",
														"src": "4087:3:13",
														"type": ""
													}
												],
												"src": "4042:186:13"
											},
											{
												"body": {
													"nativeSrc": "4313:464:13",
													"nodeType": "YulBlock",
													"src": "4313:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4339:431:13",
																"nodeType": "YulBlock",
																"src": "4339:431:13",
																"statements": [
																	{
																		"nativeSrc": "4353:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4353:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4401:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "4401:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4369:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "4369:31:13"
																			},
																			"nativeSrc": "4369:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4369:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4357:8:13",
																				"nodeType": "YulTypedName",
																				"src": "4357:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4420:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4420:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4443:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "4443:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4471:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "4471:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4453:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "4453:17:13"
																					},
																					"nativeSrc": "4453:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4453:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4439:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4439:3:13"
																			},
																			"nativeSrc": "4439:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4439:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4424:11:13",
																				"nodeType": "YulTypedName",
																				"src": "4424:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4640:27:13",
																			"nodeType": "YulBlock",
																			"src": "4640:27:13",
																			"statements": [
																				{
																					"nativeSrc": "4642:23:13",
																					"nodeType": "YulAssignment",
																					"src": "4642:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4657:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "4657:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4642:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "4642:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4624:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "4624:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4636:2:13",
																					"nodeType": "YulLiteral",
																					"src": "4636:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4621:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "4621:2:13"
																			},
																			"nativeSrc": "4621:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4621:18:13"
																		},
																		"nativeSrc": "4618:49:13",
																		"nodeType": "YulIf",
																		"src": "4618:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4709:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "4709:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4726:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "4726:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4754:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4754:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4736:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "4736:17:13"
																							},
																							"nativeSrc": "4736:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4736:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4722:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "4722:3:13"
																					},
																					"nativeSrc": "4722:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4722:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4680:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "4680:28:13"
																			},
																			"nativeSrc": "4680:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4680:80:13"
																		},
																		"nativeSrc": "4680:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4680:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4330:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4330:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4335:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4335:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4327:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4327:2:13"
																},
																"nativeSrc": "4327:11:13",
																"nodeType": "YulFunctionCall",
																"src": "4327:11:13"
															},
															"nativeSrc": "4324:446:13",
															"nodeType": "YulIf",
															"src": "4324:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4234:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4289:5:13",
														"nodeType": "YulTypedName",
														"src": "4289:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4296:3:13",
														"nodeType": "YulTypedName",
														"src": "4296:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4301:10:13",
														"nodeType": "YulTypedName",
														"src": "4301:10:13",
														"type": ""
													}
												],
												"src": "4234:543:13"
											},
											{
												"body": {
													"nativeSrc": "4846:54:13",
													"nodeType": "YulBlock",
													"src": "4846:54:13",
													"statements": [
														{
															"nativeSrc": "4856:37:13",
															"nodeType": "YulAssignment",
															"src": "4856:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4881:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4881:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4887:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4887:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4877:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4877:3:13"
																},
																"nativeSrc": "4877:16:13",
																"nodeType": "YulFunctionCall",
																"src": "4877:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4856:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "4856:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4783:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4821:4:13",
														"nodeType": "YulTypedName",
														"src": "4821:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4827:5:13",
														"nodeType": "YulTypedName",
														"src": "4827:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4837:8:13",
														"nodeType": "YulTypedName",
														"src": "4837:8:13",
														"type": ""
													}
												],
												"src": "4783:117:13"
											},
											{
												"body": {
													"nativeSrc": "4957:118:13",
													"nodeType": "YulBlock",
													"src": "4957:118:13",
													"statements": [
														{
															"nativeSrc": "4967:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4967:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5016:1:13",
																						"nodeType": "YulLiteral",
																						"src": "5016:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5019:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5019:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5012:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5012:3:13"
																				},
																				"nativeSrc": "5012:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5012:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5031:1:13",
																						"nodeType": "YulLiteral",
																						"src": "5031:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5027:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5027:3:13"
																				},
																				"nativeSrc": "5027:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5027:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4983:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "4983:28:13"
																		},
																		"nativeSrc": "4983:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4983:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4979:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4979:3:13"
																},
																"nativeSrc": "4979:56:13",
																"nodeType": "YulFunctionCall",
																"src": "4979:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4971:4:13",
																	"nodeType": "YulTypedName",
																	"src": "4971:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5044:25:13",
															"nodeType": "YulAssignment",
															"src": "5044:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5058:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5058:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5064:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5064:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5054:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5054:3:13"
																},
																"nativeSrc": "5054:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5054:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5044:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5044:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4906:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4934:4:13",
														"nodeType": "YulTypedName",
														"src": "4934:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4940:5:13",
														"nodeType": "YulTypedName",
														"src": "4940:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4950:6:13",
														"nodeType": "YulTypedName",
														"src": "4950:6:13",
														"type": ""
													}
												],
												"src": "4906:169:13"
											},
											{
												"body": {
													"nativeSrc": "5161:214:13",
													"nodeType": "YulBlock",
													"src": "5161:214:13",
													"statements": [
														{
															"nativeSrc": "5294:37:13",
															"nodeType": "YulAssignment",
															"src": "5294:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5321:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5321:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5327:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5327:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5302:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "5302:18:13"
																},
																"nativeSrc": "5302:29:13",
																"nodeType": "YulFunctionCall",
																"src": "5302:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5294:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5294:4:13"
																}
															]
														},
														{
															"nativeSrc": "5340:29:13",
															"nodeType": "YulAssignment",
															"src": "5340:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5351:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5351:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5361:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5361:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5364:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5364:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5357:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5357:3:13"
																		},
																		"nativeSrc": "5357:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5348:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5348:2:13"
																},
																"nativeSrc": "5348:21:13",
																"nodeType": "YulFunctionCall",
																"src": "5348:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5340:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5340:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5080:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5142:4:13",
														"nodeType": "YulTypedName",
														"src": "5142:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5148:3:13",
														"nodeType": "YulTypedName",
														"src": "5148:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5156:4:13",
														"nodeType": "YulTypedName",
														"src": "5156:4:13",
														"type": ""
													}
												],
												"src": "5080:295:13"
											},
											{
												"body": {
													"nativeSrc": "5472:1303:13",
													"nodeType": "YulBlock",
													"src": "5472:1303:13",
													"statements": [
														{
															"nativeSrc": "5483:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5483:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5530:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5530:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5497:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "5497:32:13"
																},
																"nativeSrc": "5497:37:13",
																"nodeType": "YulFunctionCall",
																"src": "5497:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5487:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5487:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5619:22:13",
																"nodeType": "YulBlock",
																"src": "5619:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5621:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5621:16:13"
																			},
																			"nativeSrc": "5621:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5621:18:13"
																		},
																		"nativeSrc": "5621:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5621:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5591:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5591:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5599:18:13",
																		"nodeType": "YulLiteral",
																		"src": "5599:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5588:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5588:2:13"
																},
																"nativeSrc": "5588:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5588:30:13"
															},
															"nativeSrc": "5585:56:13",
															"nodeType": "YulIf",
															"src": "5585:56:13"
														},
														{
															"nativeSrc": "5651:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5651:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5697:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5697:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5691:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:13"
																		},
																		"nativeSrc": "5691:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5691:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5665:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "5665:25:13"
																},
																"nativeSrc": "5665:38:13",
																"nodeType": "YulFunctionCall",
																"src": "5665:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5655:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5655:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5796:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5796:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5802:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5802:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5810:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5810:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5750:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "5750:45:13"
																},
																"nativeSrc": "5750:67:13",
																"nodeType": "YulFunctionCall",
																"src": "5750:67:13"
															},
															"nativeSrc": "5750:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "5750:67:13"
														},
														{
															"nativeSrc": "5827:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5827:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5844:1:13",
																"nodeType": "YulLiteral",
																"src": "5844:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5831:9:13",
																	"nodeType": "YulTypedName",
																	"src": "5831:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5855:17:13",
															"nodeType": "YulAssignment",
															"src": "5855:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5868:4:13",
																"nodeType": "YulLiteral",
																"src": "5868:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5855:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "5855:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5919:611:13",
																		"nodeType": "YulBlock",
																		"src": "5919:611:13",
																		"statements": [
																			{
																				"nativeSrc": "5933:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5933:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5952:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "5952:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5964:4:13",
																									"nodeType": "YulLiteral",
																									"src": "5964:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5960:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "5960:3:13"
																							},
																							"nativeSrc": "5960:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "5960:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5948:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "5948:3:13"
																					},
																					"nativeSrc": "5948:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5948:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5937:7:13",
																						"nodeType": "YulTypedName",
																						"src": "5937:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5984:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5984:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6030:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "6030:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5998:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "5998:31:13"
																					},
																					"nativeSrc": "5998:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5998:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5988:6:13",
																						"nodeType": "YulTypedName",
																						"src": "5988:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6048:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6048:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6057:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6057:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6052:1:13",
																						"nodeType": "YulTypedName",
																						"src": "6052:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6116:163:13",
																					"nodeType": "YulBlock",
																					"src": "6116:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6141:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "6141:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6159:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "6159:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6164:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "6164:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6155:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "6155:3:13"
																												},
																												"nativeSrc": "6155:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "6155:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6149:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "6149:5:13"
																										},
																										"nativeSrc": "6149:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6149:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6134:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "6134:6:13"
																								},
																								"nativeSrc": "6134:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6134:42:13"
																							},
																							"nativeSrc": "6134:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "6134:42:13"
																						},
																						{
																							"nativeSrc": "6193:24:13",
																							"nodeType": "YulAssignment",
																							"src": "6193:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6207:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "6207:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6215:1:13",
																										"nodeType": "YulLiteral",
																										"src": "6215:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6203:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "6203:3:13"
																								},
																								"nativeSrc": "6203:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6203:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6193:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "6193:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6234:31:13",
																							"nodeType": "YulAssignment",
																							"src": "6234:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6251:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "6251:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6262:2:13",
																										"nodeType": "YulLiteral",
																										"src": "6262:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6247:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "6247:3:13"
																								},
																								"nativeSrc": "6247:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6247:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6234:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "6234:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6082:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "6082:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6085:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "6085:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6079:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "6079:2:13"
																					},
																					"nativeSrc": "6079:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6079:14:13"
																				},
																				"nativeSrc": "6071:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6094:21:13",
																					"nodeType": "YulBlock",
																					"src": "6094:21:13",
																					"statements": [
																						{
																							"nativeSrc": "6096:17:13",
																							"nodeType": "YulAssignment",
																							"src": "6096:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6105:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "6105:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6108:4:13",
																										"nodeType": "YulLiteral",
																										"src": "6108:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6101:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "6101:3:13"
																								},
																								"nativeSrc": "6101:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6101:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6096:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "6096:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6075:3:13",
																					"nodeType": "YulBlock",
																					"src": "6075:3:13",
																					"statements": []
																				},
																				"src": "6071:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "6315:156:13",
																					"nodeType": "YulBlock",
																					"src": "6315:156:13",
																					"statements": [
																						{
																							"nativeSrc": "6333:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6333:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6360:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "6360:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6365:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6365:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6356:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "6356:3:13"
																										},
																										"nativeSrc": "6356:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6356:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6350:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6350:5:13"
																								},
																								"nativeSrc": "6350:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6350:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6337:9:13",
																									"nodeType": "YulTypedName",
																									"src": "6337:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6400:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "6400:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6427:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6427:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6442:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "6442:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6450:4:13",
																														"nodeType": "YulLiteral",
																														"src": "6450:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6438:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "6438:3:13"
																												},
																												"nativeSrc": "6438:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "6438:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6408:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "6408:18:13"
																										},
																										"nativeSrc": "6408:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6408:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6393:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "6393:6:13"
																								},
																								"nativeSrc": "6393:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6393:64:13"
																							},
																							"nativeSrc": "6393:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "6393:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6298:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "6298:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6307:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "6307:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6295:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "6295:2:13"
																					},
																					"nativeSrc": "6295:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6295:19:13"
																				},
																				"nativeSrc": "6292:179:13",
																				"nodeType": "YulIf",
																				"src": "6292:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6491:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "6491:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6505:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "6505:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6513:1:13",
																											"nodeType": "YulLiteral",
																											"src": "6513:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6501:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "6501:3:13"
																									},
																									"nativeSrc": "6501:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "6501:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6517:1:13",
																									"nodeType": "YulLiteral",
																									"src": "6517:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6497:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "6497:3:13"
																							},
																							"nativeSrc": "6497:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6497:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6484:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6484:6:13"
																					},
																					"nativeSrc": "6484:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6484:36:13"
																				},
																				"nativeSrc": "6484:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "6484:36:13"
																			}
																		]
																	},
																	"nativeSrc": "5912:618:13",
																	"nodeType": "YulCase",
																	"src": "5912:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5917:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5917:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6547:222:13",
																		"nodeType": "YulBlock",
																		"src": "6547:222:13",
																		"statements": [
																			{
																				"nativeSrc": "6561:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6561:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6574:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6574:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6565:5:13",
																						"nodeType": "YulTypedName",
																						"src": "6565:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6598:67:13",
																					"nodeType": "YulBlock",
																					"src": "6598:67:13",
																					"statements": [
																						{
																							"nativeSrc": "6616:35:13",
																							"nodeType": "YulAssignment",
																							"src": "6616:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6635:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "6635:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6640:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6640:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6631:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "6631:3:13"
																										},
																										"nativeSrc": "6631:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6631:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6625:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6625:5:13"
																								},
																								"nativeSrc": "6625:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6625:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6616:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6616:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6591:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "6591:6:13"
																				},
																				"nativeSrc": "6588:77:13",
																				"nodeType": "YulIf",
																				"src": "6588:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6685:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "6685:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6744:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6744:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6751:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "6751:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6691:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "6691:52:13"
																							},
																							"nativeSrc": "6691:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6691:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6678:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6678:6:13"
																					},
																					"nativeSrc": "6678:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6678:81:13"
																				},
																				"nativeSrc": "6678:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "6678:81:13"
																			}
																		]
																	},
																	"nativeSrc": "6539:230:13",
																	"nodeType": "YulCase",
																	"src": "6539:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5892:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5892:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5900:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5900:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5889:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5889:2:13"
																},
																"nativeSrc": "5889:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5889:14:13"
															},
															"nativeSrc": "5882:887:13",
															"nodeType": "YulSwitch",
															"src": "5882:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5380:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5461:4:13",
														"nodeType": "YulTypedName",
														"src": "5461:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5467:3:13",
														"nodeType": "YulTypedName",
														"src": "5467:3:13",
														"type": ""
													}
												],
												"src": "5380:1395:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f600455348015610013575f80fd5b50604051612bdf380380612bdf83398181016040528101906100359190610219565b80604051806060016040528060278152602001612bb86027913961005e816100e560201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100cf575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100c69190610253565b60405180910390fd5b6100de816100f860201b60201c565b5050610575565b80600290816100f491906104a6565b5050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101e8826101bf565b9050919050565b6101f8816101de565b8114610202575f80fd5b50565b5f81519050610213816101ef565b92915050565b5f6020828403121561022e5761022d6101bb565b5b5f61023b84828501610205565b91505092915050565b61024d816101de565b82525050565b5f6020820190506102665f830184610244565b92915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806102e757607f821691505b6020821081036102fa576102f96102a3565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261035c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610321565b6103668683610321565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6103aa6103a56103a08461037e565b610387565b61037e565b9050919050565b5f819050919050565b6103c383610390565b6103d76103cf826103b1565b84845461032d565b825550505050565b5f90565b6103eb6103df565b6103f68184846103ba565b505050565b5b818110156104195761040e5f826103e3565b6001810190506103fc565b5050565b601f82111561045e5761042f81610300565b61043884610312565b81016020851015610447578190505b61045b61045385610312565b8301826103fb565b50505b505050565b5f82821c905092915050565b5f61047e5f1984600802610463565b1980831691505092915050565b5f610496838361046f565b9150826002028217905092915050565b6104af8261026c565b67ffffffffffffffff8111156104c8576104c7610276565b5b6104d282546102d0565b6104dd82828561041d565b5f60209050601f83116001811461050e575f84156104fc578287015190505b610506858261048b565b86555061056d565b601f19841661051c86610300565b5f5b828110156105435784890151825560018201915060208501945060208101905061051e565b86831015610560578489015161055c601f89168261046f565b8355505b6001600288020188555050505b505050505050565b612636806105825f395ff3fe608060405234801561000f575f80fd5b50600436106100fd575f3560e01c8063715018a611610095578063e985e9c511610064578063e985e9c5146102bb578063f242432a146102eb578063f2fde38b14610307578063f5298aca14610323576100fd565b8063715018a6146102595780638da5cb5b14610263578063a22cb46514610281578063bb62115e1461029d576100fd565b80632693ebf2116100d15780632693ebf2146101ad5780632d571cc4146101dd5780632eb2c2d61461020d5780634e1273f414610229576100fd565b8062fdd58e1461010157806301ffc9a7146101315780630e89341c14610161578063156e29f614610191575b5f80fd5b61011b6004803603810190610116919061193f565b61033f565b604051610128919061198c565b60405180910390f35b61014b600480360381019061014691906119fa565b610394565b6040516101589190611a3f565b60405180910390f35b61017b60048036038101906101769190611a58565b610475565b6040516101889190611af3565b60405180910390f35b6101ab60048036038101906101a69190611b13565b610507565b005b6101c760048036038101906101c29190611a58565b6105a8565b6040516101d4919061198c565b60405180910390f35b6101f760048036038101906101f29190611a58565b6105bd565b604051610204919061198c565b60405180910390f35b61022760048036038101906102229190611d53565b61061c565b005b610243600480360381019061023e9190611ede565b6106c3565b604051610250919061200b565b60405180910390f35b6102616107ca565b005b61026b6107dd565b604051610278919061203a565b60405180910390f35b61029b6004803603810190610296919061207d565b610805565b005b6102a561081b565b6040516102b2919061198c565b60405180910390f35b6102d560048036038101906102d091906120bb565b610821565b6040516102e29190611a3f565b60405180910390f35b610305600480360381019061030091906120f9565b6108af565b005b610321600480360381019061031c919061218c565b610956565b005b61033d60048036038101906103389190611b13565b6109da565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045e57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061046e575061046d82610a5d565b5b9050919050565b606060028054610484906121e4565b80601f01602080910402602001604051908101604052809291908181526020018280546104b0906121e4565b80156104fb5780601f106104d2576101008083540402835291602001916104fb565b820191905f5260205f20905b8154815290600101906020018083116104de57829003601f168201915b50505050509050919050565b61050f610ac6565b5f60055f8481526020019081526020015f205411610562576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105599061225e565b60405180910390fd5b61057c83838360405180602001604052805f815250610b4d565b8060055f8481526020019081526020015f205f82825461059c91906122a9565b92505081905550505050565b6005602052805f5260405f205f915090505481565b5f6105c6610ac6565b5f600454905060045f8154809291906105de906122dc565b91905055506105fd33828560405180602001604052805f815250610b4d565b8260055f8381526020019081526020015f208190555080915050919050565b5f610625610be2565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561066a57506106688682610821565b155b156106ae5780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016106a5929190612323565b60405180910390fd5b6106bb8686868686610be9565b505050505050565b6060815183511461070f57815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161070692919061234a565b60405180910390fd5b5f835167ffffffffffffffff81111561072b5761072a611b67565b5b6040519080825280602002602001820160405280156107595781602001602082028036833780820191505090505b5090505f5b84518110156107bf5761079561077d8287610cdd90919063ffffffff16565b6107908387610cf090919063ffffffff16565b61033f565b8282815181106107a8576107a7612371565b5b60200260200101818152505080600101905061075e565b508091505092915050565b6107d2610ac6565b6107db5f610d03565b565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610817610810610be2565b8383610dc6565b5050565b60045481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f6108b8610be2565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156108fd57506108fb8682610821565b155b156109415780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610938929190612323565b60405180910390fd5b61094e8686868686610f2f565b505050505050565b61095e610ac6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109ce575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109c5919061203a565b60405180910390fd5b6109d781610d03565b50565b806109e5848461033f565b1015610a26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1d906123e8565b60405180910390fd5b610a31838383611035565b8060055f8481526020019081526020015f205f828254610a519190612406565b92505081905550505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610ace610be2565b73ffffffffffffffffffffffffffffffffffffffff16610aec6107dd565b73ffffffffffffffffffffffffffffffffffffffff1614610b4b57610b0f610be2565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b42919061203a565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610bbd575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610bb4919061203a565b60405180910390fd5b5f80610bc985856110d7565b91509150610bda5f87848487611107565b505050505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c59575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610c50919061203a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610cc9575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610cc0919061203a565b60405180910390fd5b610cd68585858585611107565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e36575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610e2d919061203a565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f229190611a3f565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f9f575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610f96919061203a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361100f575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401611006919061203a565b60405180910390fd5b5f8061101b85856110d7565b9150915061102c8787848487611107565b50505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110a5575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161109c919061203a565b60405180910390fd5b5f806110b184846110d7565b915091506110d0855f848460405180602001604052805f815250611107565b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b611113858585856111b3565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146111ac575f61114f610be2565b9050600184510361119b575f61116e5f86610cf090919063ffffffff16565b90505f6111845f86610cf090919063ffffffff16565b9050611194838989858589611543565b50506111aa565b6111a98187878787876116f2565b5b505b5050505050565b80518251146111fd57815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016111f492919061234a565b60405180910390fd5b5f611206610be2565b90505f5b8351811015611402575f6112278286610cf090919063ffffffff16565b90505f61123d8386610cf090919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614611360575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561130c57888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016113039493929190612439565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146113f557805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546113ed91906122a9565b925050819055505b505080600101905061120a565b5060018351036114bd575f6114205f85610cf090919063ffffffff16565b90505f6114365f85610cf090919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516114ae92919061234a565b60405180910390a4505061153c565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161153392919061247c565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b11156116ea578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016115a3959493929190612503565b6020604051808303815f875af19250505080156115de57506040513d601f19601f820116820180604052508101906115db919061256f565b60015b61165f573d805f811461160c576040519150601f19603f3d011682016040523d82523d5f602084013e611611565b606091505b505f81510361165757846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161164e919061203a565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146116e857846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016116df919061203a565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611899578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161175295949392919061259a565b6020604051808303815f875af192505050801561178d57506040513d601f19601f8201168201806040525081019061178a919061256f565b60015b61180e573d805f81146117bb576040519150601f19603f3d011682016040523d82523d5f602084013e6117c0565b606091505b505f81510361180657846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016117fd919061203a565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461189757846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161188e919061203a565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6118db826118b2565b9050919050565b6118eb816118d1565b81146118f5575f80fd5b50565b5f81359050611906816118e2565b92915050565b5f819050919050565b61191e8161190c565b8114611928575f80fd5b50565b5f8135905061193981611915565b92915050565b5f8060408385031215611955576119546118aa565b5b5f611962858286016118f8565b92505060206119738582860161192b565b9150509250929050565b6119868161190c565b82525050565b5f60208201905061199f5f83018461197d565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119d9816119a5565b81146119e3575f80fd5b50565b5f813590506119f4816119d0565b92915050565b5f60208284031215611a0f57611a0e6118aa565b5b5f611a1c848285016119e6565b91505092915050565b5f8115159050919050565b611a3981611a25565b82525050565b5f602082019050611a525f830184611a30565b92915050565b5f60208284031215611a6d57611a6c6118aa565b5b5f611a7a8482850161192b565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611ac582611a83565b611acf8185611a8d565b9350611adf818560208601611a9d565b611ae881611aab565b840191505092915050565b5f6020820190508181035f830152611b0b8184611abb565b905092915050565b5f805f60608486031215611b2a57611b296118aa565b5b5f611b37868287016118f8565b9350506020611b488682870161192b565b9250506040611b598682870161192b565b9150509250925092565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611b9d82611aab565b810181811067ffffffffffffffff82111715611bbc57611bbb611b67565b5b80604052505050565b5f611bce6118a1565b9050611bda8282611b94565b919050565b5f67ffffffffffffffff821115611bf957611bf8611b67565b5b602082029050602081019050919050565b5f80fd5b5f611c20611c1b84611bdf565b611bc5565b90508083825260208201905060208402830185811115611c4357611c42611c0a565b5b835b81811015611c6c5780611c58888261192b565b845260208401935050602081019050611c45565b5050509392505050565b5f82601f830112611c8a57611c89611b63565b5b8135611c9a848260208601611c0e565b91505092915050565b5f80fd5b5f67ffffffffffffffff821115611cc157611cc0611b67565b5b611cca82611aab565b9050602081019050919050565b828183375f83830152505050565b5f611cf7611cf284611ca7565b611bc5565b905082815260208101848484011115611d1357611d12611ca3565b5b611d1e848285611cd7565b509392505050565b5f82601f830112611d3a57611d39611b63565b5b8135611d4a848260208601611ce5565b91505092915050565b5f805f805f60a08688031215611d6c57611d6b6118aa565b5b5f611d79888289016118f8565b9550506020611d8a888289016118f8565b945050604086013567ffffffffffffffff811115611dab57611daa6118ae565b5b611db788828901611c76565b935050606086013567ffffffffffffffff811115611dd857611dd76118ae565b5b611de488828901611c76565b925050608086013567ffffffffffffffff811115611e0557611e046118ae565b5b611e1188828901611d26565b9150509295509295909350565b5f67ffffffffffffffff821115611e3857611e37611b67565b5b602082029050602081019050919050565b5f611e5b611e5684611e1e565b611bc5565b90508083825260208201905060208402830185811115611e7e57611e7d611c0a565b5b835b81811015611ea75780611e9388826118f8565b845260208401935050602081019050611e80565b5050509392505050565b5f82601f830112611ec557611ec4611b63565b5b8135611ed5848260208601611e49565b91505092915050565b5f8060408385031215611ef457611ef36118aa565b5b5f83013567ffffffffffffffff811115611f1157611f106118ae565b5b611f1d85828601611eb1565b925050602083013567ffffffffffffffff811115611f3e57611f3d6118ae565b5b611f4a85828601611c76565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611f868161190c565b82525050565b5f611f978383611f7d565b60208301905092915050565b5f602082019050919050565b5f611fb982611f54565b611fc38185611f5e565b9350611fce83611f6e565b805f5b83811015611ffe578151611fe58882611f8c565b9750611ff083611fa3565b925050600181019050611fd1565b5085935050505092915050565b5f6020820190508181035f8301526120238184611faf565b905092915050565b612034816118d1565b82525050565b5f60208201905061204d5f83018461202b565b92915050565b61205c81611a25565b8114612066575f80fd5b50565b5f8135905061207781612053565b92915050565b5f8060408385031215612093576120926118aa565b5b5f6120a0858286016118f8565b92505060206120b185828601612069565b9150509250929050565b5f80604083850312156120d1576120d06118aa565b5b5f6120de858286016118f8565b92505060206120ef858286016118f8565b9150509250929050565b5f805f805f60a08688031215612112576121116118aa565b5b5f61211f888289016118f8565b9550506020612130888289016118f8565b94505060406121418882890161192b565b93505060606121528882890161192b565b925050608086013567ffffffffffffffff811115612173576121726118ae565b5b61217f88828901611d26565b9150509295509295909350565b5f602082840312156121a1576121a06118aa565b5b5f6121ae848285016118f8565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806121fb57607f821691505b60208210810361220e5761220d6121b7565b5b50919050565b7f546f6b656e20494420646f6573206e6f742065786973740000000000000000005f82015250565b5f612248601783611a8d565b915061225382612214565b602082019050919050565b5f6020820190508181035f8301526122758161223c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122b38261190c565b91506122be8361190c565b92508282019050808211156122d6576122d561227c565b5b92915050565b5f6122e68261190c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123185761231761227c565b5b600182019050919050565b5f6040820190506123365f83018561202b565b612343602083018461202b565b9392505050565b5f60408201905061235d5f83018561197d565b61236a602083018461197d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f496e73756666696369656e742062616c616e636520746f206275726e000000005f82015250565b5f6123d2601c83611a8d565b91506123dd8261239e565b602082019050919050565b5f6020820190508181035f8301526123ff816123c6565b9050919050565b5f6124108261190c565b915061241b8361190c565b92508282039050818111156124335761243261227c565b5b92915050565b5f60808201905061244c5f83018761202b565b612459602083018661197d565b612466604083018561197d565b612473606083018461197d565b95945050505050565b5f6040820190508181035f8301526124948185611faf565b905081810360208301526124a88184611faf565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6124d5826124b1565b6124df81856124bb565b93506124ef818560208601611a9d565b6124f881611aab565b840191505092915050565b5f60a0820190506125165f83018861202b565b612523602083018761202b565b612530604083018661197d565b61253d606083018561197d565b818103608083015261254f81846124cb565b90509695505050505050565b5f81519050612569816119d0565b92915050565b5f60208284031215612584576125836118aa565b5b5f6125918482850161255b565b91505092915050565b5f60a0820190506125ad5f83018861202b565b6125ba602083018761202b565b81810360408301526125cc8186611faf565b905081810360608301526125e08185611faf565b905081810360808301526125f481846124cb565b9050969550505050505056fea26469706673582212202fde6745a2b87497aff98210e40bbd18a820eda07f0606fb93a7317fb830dbd564736f6c6343000819003368747470733a2f2f6d79746f6b656e2e636f6d2f6170692f746f6b656e2f7b69647d2e6a736f6e",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2BDF CODESIZE SUB DUP1 PUSH2 0x2BDF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x35 SWAP2 SWAP1 PUSH2 0x219 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB8 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x5E DUP2 PUSH2 0xE5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x253 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDE DUP2 PUSH2 0xF8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x575 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x4A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E8 DUP3 PUSH2 0x1BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F8 DUP2 PUSH2 0x1DE JUMP JUMPDEST DUP2 EQ PUSH2 0x202 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x213 DUP2 PUSH2 0x1EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22E JUMPI PUSH2 0x22D PUSH2 0x1BB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23B DUP5 DUP3 DUP6 ADD PUSH2 0x205 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24D DUP2 PUSH2 0x1DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x266 PUSH0 DUP4 ADD DUP5 PUSH2 0x244 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2E7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2FA JUMPI PUSH2 0x2F9 PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x35C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x321 JUMP JUMPDEST PUSH2 0x366 DUP7 DUP4 PUSH2 0x321 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3AA PUSH2 0x3A5 PUSH2 0x3A0 DUP5 PUSH2 0x37E JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH2 0x37E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C3 DUP4 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x3D7 PUSH2 0x3CF DUP3 PUSH2 0x3B1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x32D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3EB PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x3F6 DUP2 DUP5 DUP5 PUSH2 0x3BA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x419 JUMPI PUSH2 0x40E PUSH0 DUP3 PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3FC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x45E JUMPI PUSH2 0x42F DUP2 PUSH2 0x300 JUMP JUMPDEST PUSH2 0x438 DUP5 PUSH2 0x312 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x447 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x45B PUSH2 0x453 DUP6 PUSH2 0x312 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3FB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x463 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x496 DUP4 DUP4 PUSH2 0x46F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4AF DUP3 PUSH2 0x26C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C8 JUMPI PUSH2 0x4C7 PUSH2 0x276 JUMP JUMPDEST JUMPDEST PUSH2 0x4D2 DUP3 SLOAD PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x4DD DUP3 DUP3 DUP6 PUSH2 0x41D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x50E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x4FC JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x506 DUP6 DUP3 PUSH2 0x48B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x56D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x51C DUP7 PUSH2 0x300 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x543 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x51E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x560 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x55C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x46F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2636 DUP1 PUSH2 0x582 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x323 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xBB62115E EQ PUSH2 0x29D JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x2693EBF2 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2693EBF2 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x2D571CC4 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x229 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x191 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x19FA JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1B13 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1EDE JUMP JUMPDEST PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH2 0x7CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH2 0x805 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH2 0x81B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST PUSH2 0x8AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x956 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x1B13 JUMP JUMPDEST PUSH2 0x9DA JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45E JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x46E JUMPI POP PUSH2 0x46D DUP3 PUSH2 0xA5D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x484 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B0 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50F PUSH2 0xAC6 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x559 SWAP1 PUSH2 0x225E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB4D JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x22A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x5C6 PUSH2 0xAC6 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5DE SWAP1 PUSH2 0x22DC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x5FD CALLER DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB4D JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x625 PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x66A JUMPI POP PUSH2 0x668 DUP7 DUP3 PUSH2 0x821 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x6AE JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A5 SWAP3 SWAP2 SWAP1 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6BB DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xBE9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x70F JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x706 SWAP3 SWAP2 SWAP1 PUSH2 0x234A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x72B JUMPI PUSH2 0x72A PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x759 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x7BF JUMPI PUSH2 0x795 PUSH2 0x77D DUP3 DUP8 PUSH2 0xCDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x790 DUP4 DUP8 PUSH2 0xCF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7A8 JUMPI PUSH2 0x7A7 PUSH2 0x2371 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x75E JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7D2 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x7DB PUSH0 PUSH2 0xD03 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x817 PUSH2 0x810 PUSH2 0xBE2 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDC6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8B8 PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x8FD JUMPI POP PUSH2 0x8FB DUP7 DUP3 PUSH2 0x821 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x941 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP3 SWAP2 SWAP1 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94E DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xF2F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x95E PUSH2 0xAC6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D7 DUP2 PUSH2 0xD03 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH2 0x9E5 DUP5 DUP5 PUSH2 0x33F JUMP JUMPDEST LT ISZERO PUSH2 0xA26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1D SWAP1 PUSH2 0x23E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA31 DUP4 DUP4 DUP4 PUSH2 0x1035 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA51 SWAP2 SWAP1 PUSH2 0x2406 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xACE PUSH2 0xBE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAEC PUSH2 0x7DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB4B JUMPI PUSH2 0xB0F PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB42 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBBD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB4 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xBC9 DUP6 DUP6 PUSH2 0x10D7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xBDA PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1107 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC59 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC50 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCC9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCD6 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1107 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2D SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF22 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF9F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF96 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x100F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1006 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x101B DUP6 DUP6 PUSH2 0x10D7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x102C DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1107 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10A5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109C SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x10B1 DUP5 DUP5 PUSH2 0x10D7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x10D0 DUP6 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1107 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1113 DUP6 DUP6 DUP6 DUP6 PUSH2 0x11B3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11AC JUMPI PUSH0 PUSH2 0x114F PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x119B JUMPI PUSH0 PUSH2 0x116E PUSH0 DUP7 PUSH2 0xCF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1184 PUSH0 DUP7 PUSH2 0xCF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1194 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1543 JUMP JUMPDEST POP POP PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x11A9 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x16F2 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x11FD JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F4 SWAP3 SWAP2 SWAP1 PUSH2 0x234A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1206 PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1402 JUMPI PUSH0 PUSH2 0x1227 DUP3 DUP7 PUSH2 0xCF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x123D DUP4 DUP7 PUSH2 0xCF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1360 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x130C JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1303 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13F5 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13ED SWAP2 SWAP1 PUSH2 0x22A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x120A JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x14BD JUMPI PUSH0 PUSH2 0x1420 PUSH0 DUP6 PUSH2 0xCF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1436 PUSH0 DUP6 PUSH2 0xCF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x14AE SWAP3 SWAP2 SWAP1 PUSH2 0x234A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x153C JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1533 SWAP3 SWAP2 SWAP1 PUSH2 0x247C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x16EA JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2503 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15DE JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15DB SWAP2 SWAP1 PUSH2 0x256F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x165F JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x160C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1657 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164E SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x16E8 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DF SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1899 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1752 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x178D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x178A SWAP2 SWAP1 PUSH2 0x256F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x180E JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x17BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1806 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17FD SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1897 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188E SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18DB DUP3 PUSH2 0x18B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18EB DUP2 PUSH2 0x18D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x18F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1906 DUP2 PUSH2 0x18E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x191E DUP2 PUSH2 0x190C JUMP JUMPDEST DUP2 EQ PUSH2 0x1928 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1939 DUP2 PUSH2 0x1915 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1955 JUMPI PUSH2 0x1954 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1962 DUP6 DUP3 DUP7 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1973 DUP6 DUP3 DUP7 ADD PUSH2 0x192B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1986 DUP2 PUSH2 0x190C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x199F PUSH0 DUP4 ADD DUP5 PUSH2 0x197D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19D9 DUP2 PUSH2 0x19A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x19E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F4 DUP2 PUSH2 0x19D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A0F JUMPI PUSH2 0x1A0E PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A1C DUP5 DUP3 DUP6 ADD PUSH2 0x19E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A39 DUP2 PUSH2 0x1A25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A52 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A6D JUMPI PUSH2 0x1A6C PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A7A DUP5 DUP3 DUP6 ADD PUSH2 0x192B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC5 DUP3 PUSH2 0x1A83 JUMP JUMPDEST PUSH2 0x1ACF DUP2 DUP6 PUSH2 0x1A8D JUMP JUMPDEST SWAP4 POP PUSH2 0x1ADF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A9D JUMP JUMPDEST PUSH2 0x1AE8 DUP2 PUSH2 0x1AAB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B0B DUP2 DUP5 PUSH2 0x1ABB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B2A JUMPI PUSH2 0x1B29 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B37 DUP7 DUP3 DUP8 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B48 DUP7 DUP3 DUP8 ADD PUSH2 0x192B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B59 DUP7 DUP3 DUP8 ADD PUSH2 0x192B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B9D DUP3 PUSH2 0x1AAB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1BBC JUMPI PUSH2 0x1BBB PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCE PUSH2 0x18A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BDA DUP3 DUP3 PUSH2 0x1B94 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BF9 JUMPI PUSH2 0x1BF8 PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1C20 PUSH2 0x1C1B DUP5 PUSH2 0x1BDF JUMP JUMPDEST PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1C43 JUMPI PUSH2 0x1C42 PUSH2 0x1C0A JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C6C JUMPI DUP1 PUSH2 0x1C58 DUP9 DUP3 PUSH2 0x192B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C45 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C8A JUMPI PUSH2 0x1C89 PUSH2 0x1B63 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C9A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C0E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CC1 JUMPI PUSH2 0x1CC0 PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST PUSH2 0x1CCA DUP3 PUSH2 0x1AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CF7 PUSH2 0x1CF2 DUP5 PUSH2 0x1CA7 JUMP JUMPDEST PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1D13 JUMPI PUSH2 0x1D12 PUSH2 0x1CA3 JUMP JUMPDEST JUMPDEST PUSH2 0x1D1E DUP5 DUP3 DUP6 PUSH2 0x1CD7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D3A JUMPI PUSH2 0x1D39 PUSH2 0x1B63 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D4A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D6C JUMPI PUSH2 0x1D6B PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D79 DUP9 DUP3 DUP10 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1D8A DUP9 DUP3 DUP10 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DAB JUMPI PUSH2 0x1DAA PUSH2 0x18AE JUMP JUMPDEST JUMPDEST PUSH2 0x1DB7 DUP9 DUP3 DUP10 ADD PUSH2 0x1C76 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DD8 JUMPI PUSH2 0x1DD7 PUSH2 0x18AE JUMP JUMPDEST JUMPDEST PUSH2 0x1DE4 DUP9 DUP3 DUP10 ADD PUSH2 0x1C76 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E05 JUMPI PUSH2 0x1E04 PUSH2 0x18AE JUMP JUMPDEST JUMPDEST PUSH2 0x1E11 DUP9 DUP3 DUP10 ADD PUSH2 0x1D26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E38 JUMPI PUSH2 0x1E37 PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5B PUSH2 0x1E56 DUP5 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1E7E JUMPI PUSH2 0x1E7D PUSH2 0x1C0A JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EA7 JUMPI DUP1 PUSH2 0x1E93 DUP9 DUP3 PUSH2 0x18F8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E80 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EC5 JUMPI PUSH2 0x1EC4 PUSH2 0x1B63 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1ED5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E49 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EF4 JUMPI PUSH2 0x1EF3 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F11 JUMPI PUSH2 0x1F10 PUSH2 0x18AE JUMP JUMPDEST JUMPDEST PUSH2 0x1F1D DUP6 DUP3 DUP7 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F3E JUMPI PUSH2 0x1F3D PUSH2 0x18AE JUMP JUMPDEST JUMPDEST PUSH2 0x1F4A DUP6 DUP3 DUP7 ADD PUSH2 0x1C76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F86 DUP2 PUSH2 0x190C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F97 DUP4 DUP4 PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB9 DUP3 PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x1FC3 DUP2 DUP6 PUSH2 0x1F5E JUMP JUMPDEST SWAP4 POP PUSH2 0x1FCE DUP4 PUSH2 0x1F6E JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FFE JUMPI DUP2 MLOAD PUSH2 0x1FE5 DUP9 DUP3 PUSH2 0x1F8C JUMP JUMPDEST SWAP8 POP PUSH2 0x1FF0 DUP4 PUSH2 0x1FA3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1FD1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2023 DUP2 DUP5 PUSH2 0x1FAF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2034 DUP2 PUSH2 0x18D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x204D PUSH0 DUP4 ADD DUP5 PUSH2 0x202B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x205C DUP2 PUSH2 0x1A25 JUMP JUMPDEST DUP2 EQ PUSH2 0x2066 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2077 DUP2 PUSH2 0x2053 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2093 JUMPI PUSH2 0x2092 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20A0 DUP6 DUP3 DUP7 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20B1 DUP6 DUP3 DUP7 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20D1 JUMPI PUSH2 0x20D0 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20DE DUP6 DUP3 DUP7 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20EF DUP6 DUP3 DUP7 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2112 JUMPI PUSH2 0x2111 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x211F DUP9 DUP3 DUP10 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2130 DUP9 DUP3 DUP10 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2141 DUP9 DUP3 DUP10 ADD PUSH2 0x192B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2152 DUP9 DUP3 DUP10 ADD PUSH2 0x192B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2173 JUMPI PUSH2 0x2172 PUSH2 0x18AE JUMP JUMPDEST JUMPDEST PUSH2 0x217F DUP9 DUP3 DUP10 ADD PUSH2 0x1D26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21A1 JUMPI PUSH2 0x21A0 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21AE DUP5 DUP3 DUP6 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21FB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x220E JUMPI PUSH2 0x220D PUSH2 0x21B7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20494420646F6573206E6F74206578697374000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2248 PUSH1 0x17 DUP4 PUSH2 0x1A8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2253 DUP3 PUSH2 0x2214 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2275 DUP2 PUSH2 0x223C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22B3 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP2 POP PUSH2 0x22BE DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22D6 JUMPI PUSH2 0x22D5 PUSH2 0x227C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22E6 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2318 JUMPI PUSH2 0x2317 PUSH2 0x227C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2336 PUSH0 DUP4 ADD DUP6 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x2343 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x202B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x235D PUSH0 DUP4 ADD DUP6 PUSH2 0x197D JUMP JUMPDEST PUSH2 0x236A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x197D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F206275726E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23D2 PUSH1 0x1C DUP4 PUSH2 0x1A8D JUMP JUMPDEST SWAP2 POP PUSH2 0x23DD DUP3 PUSH2 0x239E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23FF DUP2 PUSH2 0x23C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2410 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP2 POP PUSH2 0x241B DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2433 JUMPI PUSH2 0x2432 PUSH2 0x227C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x244C PUSH0 DUP4 ADD DUP8 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x2459 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x197D JUMP JUMPDEST PUSH2 0x2466 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x197D JUMP JUMPDEST PUSH2 0x2473 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x197D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2494 DUP2 DUP6 PUSH2 0x1FAF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x24A8 DUP2 DUP5 PUSH2 0x1FAF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24D5 DUP3 PUSH2 0x24B1 JUMP JUMPDEST PUSH2 0x24DF DUP2 DUP6 PUSH2 0x24BB JUMP JUMPDEST SWAP4 POP PUSH2 0x24EF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A9D JUMP JUMPDEST PUSH2 0x24F8 DUP2 PUSH2 0x1AAB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2516 PUSH0 DUP4 ADD DUP9 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x2523 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x2530 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x197D JUMP JUMPDEST PUSH2 0x253D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x197D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x254F DUP2 DUP5 PUSH2 0x24CB JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2569 DUP2 PUSH2 0x19D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2584 JUMPI PUSH2 0x2583 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2591 DUP5 DUP3 DUP6 ADD PUSH2 0x255B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x25AD PUSH0 DUP4 ADD DUP9 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x25BA PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x202B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x25CC DUP2 DUP7 PUSH2 0x1FAF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x25E0 DUP2 DUP6 PUSH2 0x1FAF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x25F4 DUP2 DUP5 PUSH2 0x24CB JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xDE PUSH8 0x45A2B87497AFF982 LT 0xE4 SIGNEXTEND 0xBD XOR 0xA8 KECCAK256 0xED LOG0 PUSH32 0x606FB93A7317FB830DBD564736F6C6343000819003368747470733A2F2F6D79 PUSH21 0x6F6B656E2E636F6D2F6170692F746F6B656E2F7B69 PUSH5 0x7D2E6A736F PUSH15 0x0 ",
							"sourceMap": "177:1051:12:-:0;;;259:1;227:33;;322:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;415:12;1251:62:2;;;;;;;;;;;;;;;;;1293:13;1301:4;1293:7;;;:13;;:::i;:::-;1251:62;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;322:109:12;177:1051;;10282:86:2;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:99::-;1606:6;1640:5;1634:12;1624:22;;1554:99;;;:::o;1659:180::-;1707:77;1704:1;1697:88;1804:4;1801:1;1794:15;1828:4;1825:1;1818:15;1845:180;1893:77;1890:1;1883:88;1990:4;1987:1;1980:15;2014:4;2011:1;2004:15;2031:320;2075:6;2112:1;2106:4;2102:12;2092:22;;2159:1;2153:4;2149:12;2180:18;2170:81;;2236:4;2228:6;2224:17;2214:27;;2170:81;2298:2;2290:6;2287:14;2267:18;2264:38;2261:84;;2317:18;;:::i;:::-;2261:84;2082:269;2031:320;;;:::o;2357:141::-;2406:4;2429:3;2421:11;;2452:3;2449:1;2442:14;2486:4;2483:1;2473:18;2465:26;;2357:141;;;:::o;2504:93::-;2541:6;2588:2;2583;2576:5;2572:14;2568:23;2558:33;;2504:93;;;:::o;2603:107::-;2647:8;2697:5;2691:4;2687:16;2666:37;;2603:107;;;;:::o;2716:393::-;2785:6;2835:1;2823:10;2819:18;2858:97;2888:66;2877:9;2858:97;:::i;:::-;2976:39;3006:8;2995:9;2976:39;:::i;:::-;2964:51;;3048:4;3044:9;3037:5;3033:21;3024:30;;3097:4;3087:8;3083:19;3076:5;3073:30;3063:40;;2792:317;;2716:393;;;;;:::o;3115:77::-;3152:7;3181:5;3170:16;;3115:77;;;:::o;3198:60::-;3226:3;3247:5;3240:12;;3198:60;;;:::o;3264:142::-;3314:9;3347:53;3365:34;3374:24;3392:5;3374:24;:::i;:::-;3365:34;:::i;:::-;3347:53;:::i;:::-;3334:66;;3264:142;;;:::o;3412:75::-;3455:3;3476:5;3469:12;;3412:75;;;:::o;3493:269::-;3603:39;3634:7;3603:39;:::i;:::-;3664:91;3713:41;3737:16;3713:41;:::i;:::-;3705:6;3698:4;3692:11;3664:91;:::i;:::-;3658:4;3651:105;3569:193;3493:269;;;:::o;3768:73::-;3813:3;3768:73;:::o;3847:189::-;3924:32;;:::i;:::-;3965:65;4023:6;4015;4009:4;3965:65;:::i;:::-;3900:136;3847:189;;:::o;4042:186::-;4102:120;4119:3;4112:5;4109:14;4102:120;;;4173:39;4210:1;4203:5;4173:39;:::i;:::-;4146:1;4139:5;4135:13;4126:22;;4102:120;;;4042:186;;:::o;4234:543::-;4335:2;4330:3;4327:11;4324:446;;;4369:38;4401:5;4369:38;:::i;:::-;4453:29;4471:10;4453:29;:::i;:::-;4443:8;4439:44;4636:2;4624:10;4621:18;4618:49;;;4657:8;4642:23;;4618:49;4680:80;4736:22;4754:3;4736:22;:::i;:::-;4726:8;4722:37;4709:11;4680:80;:::i;:::-;4339:431;;4324:446;4234:543;;;:::o;4783:117::-;4837:8;4887:5;4881:4;4877:16;4856:37;;4783:117;;;;:::o;4906:169::-;4950:6;4983:51;5031:1;5027:6;5019:5;5016:1;5012:13;4983:51;:::i;:::-;4979:56;5064:4;5058;5054:15;5044:25;;4957:118;4906:169;;;;:::o;5080:295::-;5156:4;5302:29;5327:3;5321:4;5302:29;:::i;:::-;5294:37;;5364:3;5361:1;5357:11;5351:4;5348:21;5340:29;;5080:295;;;;:::o;5380:1395::-;5497:37;5530:3;5497:37;:::i;:::-;5599:18;5591:6;5588:30;5585:56;;;5621:18;;:::i;:::-;5585:56;5665:38;5697:4;5691:11;5665:38;:::i;:::-;5750:67;5810:6;5802;5796:4;5750:67;:::i;:::-;5844:1;5868:4;5855:17;;5900:2;5892:6;5889:14;5917:1;5912:618;;;;6574:1;6591:6;6588:77;;;6640:9;6635:3;6631:19;6625:26;6616:35;;6588:77;6691:67;6751:6;6744:5;6691:67;:::i;:::-;6685:4;6678:81;6547:222;5882:887;;5912:618;5964:4;5960:9;5952:6;5948:22;5998:37;6030:4;5998:37;:::i;:::-;6057:1;6071:208;6085:7;6082:1;6079:14;6071:208;;;6164:9;6159:3;6155:19;6149:26;6141:6;6134:42;6215:1;6207:6;6203:14;6193:24;;6262:2;6251:9;6247:18;6234:31;;6108:4;6105:1;6101:12;6096:17;;6071:208;;;6307:6;6298:7;6295:19;6292:179;;;6365:9;6360:3;6356:19;6350:26;6408:48;6450:4;6442:6;6438:17;6427:9;6408:48;:::i;:::-;6400:6;6393:64;6315:156;6292:179;6517:1;6513;6505:6;6501:14;6497:22;6491:4;6484:36;5919:611;;;5882:887;;5472:1303;;;5380:1395;;:::o;177:1051:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_1334": {
									"entryPoint": 4311,
									"id": 1334,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_burn_1101": {
									"entryPoint": 4149,
									"id": 1101,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2758,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1318": {
									"entryPoint": 5874,
									"id": 1318,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1248": {
									"entryPoint": 5443,
									"id": 1248,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_1010": {
									"entryPoint": 2893,
									"id": 1010,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1711": {
									"entryPoint": 3042,
									"id": 1711,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_947": {
									"entryPoint": 3049,
									"id": 947,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_892": {
									"entryPoint": 3887,
									"id": 892,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1180": {
									"entryPoint": 3526,
									"id": 1180,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3331,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_826": {
									"entryPoint": 4359,
									"id": 826,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_750": {
									"entryPoint": 4531,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_474": {
									"entryPoint": 1731,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_404": {
									"entryPoint": 831,
									"id": 404,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@burn_3055": {
									"entryPoint": 2522,
									"id": 3055,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@createToken_2989": {
									"entryPoint": 1469,
									"id": 2989,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@currentTokenID_2940": {
									"entryPoint": 2075,
									"id": 2940,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isApprovedForAll_507": {
									"entryPoint": 2081,
									"id": 507,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_3023": {
									"entryPoint": 1287,
									"id": 3023,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 2013,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1994,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_597": {
									"entryPoint": 1564,
									"id": 597,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_551": {
									"entryPoint": 2223,
									"id": 551,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_490": {
									"entryPoint": 2053,
									"id": 490,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1862": {
									"entryPoint": 2653,
									"id": 1862,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_376": {
									"entryPoint": 916,
									"id": 376,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenSupply_2944": {
									"entryPoint": 1448,
									"id": 2944,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2390,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unsafeMemoryAccess_1685": {
									"entryPoint": 3312,
									"id": 1685,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1698": {
									"entryPoint": 3293,
									"id": 1698,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_387": {
									"entryPoint": 1141,
									"id": 387,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7753,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7182,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7397,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 7507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 8441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 6931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 8076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 8061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 8995,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9626,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9475,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9273,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9340,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9034,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6305,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7383,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6813,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 8924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8828,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8631,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7015,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7011,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7178,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6318,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6314,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f": {
									"entryPoint": 8724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5": {
									"entryPoint": 9118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:26273:13",
										"nodeType": "YulBlock",
										"src": "0:26273:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "748:87:13",
													"nodeType": "YulBlock",
													"src": "748:87:13",
													"statements": [
														{
															"nativeSrc": "758:29:13",
															"nodeType": "YulAssignment",
															"src": "758:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:13"
																},
																"nativeSrc": "767:20:13",
																"nodeType": "YulFunctionCall",
																"src": "767:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:13"
																},
																"nativeSrc": "796:33:13",
																"nodeType": "YulFunctionCall",
																"src": "796:33:13"
															},
															"nativeSrc": "796:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:13",
														"nodeType": "YulTypedName",
														"src": "726:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:13",
														"nodeType": "YulTypedName",
														"src": "734:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:13",
														"nodeType": "YulTypedName",
														"src": "742:5:13",
														"type": ""
													}
												],
												"src": "696:139:13"
											},
											{
												"body": {
													"nativeSrc": "886:32:13",
													"nodeType": "YulBlock",
													"src": "886:32:13",
													"statements": [
														{
															"nativeSrc": "896:16:13",
															"nodeType": "YulAssignment",
															"src": "896:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:13",
																"nodeType": "YulIdentifier",
																"src": "907:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:13",
														"nodeType": "YulTypedName",
														"src": "868:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:13",
														"nodeType": "YulTypedName",
														"src": "878:7:13",
														"type": ""
													}
												],
												"src": "841:77:13"
											},
											{
												"body": {
													"nativeSrc": "967:79:13",
													"nodeType": "YulBlock",
													"src": "967:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:13",
																"nodeType": "YulBlock",
																"src": "1024:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:13"
																			},
																			"nativeSrc": "1026:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:13"
																		},
																		"nativeSrc": "1026:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:13"
																				},
																				"nativeSrc": "997:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:13"
																		},
																		"nativeSrc": "987:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:13"
																},
																"nativeSrc": "980:43:13",
																"nodeType": "YulFunctionCall",
																"src": "980:43:13"
															},
															"nativeSrc": "977:63:13",
															"nodeType": "YulIf",
															"src": "977:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:13",
														"nodeType": "YulTypedName",
														"src": "960:5:13",
														"type": ""
													}
												],
												"src": "924:122:13"
											},
											{
												"body": {
													"nativeSrc": "1104:87:13",
													"nodeType": "YulBlock",
													"src": "1104:87:13",
													"statements": [
														{
															"nativeSrc": "1114:29:13",
															"nodeType": "YulAssignment",
															"src": "1114:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:13"
																},
																"nativeSrc": "1123:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:13"
																},
																"nativeSrc": "1152:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:13"
															},
															"nativeSrc": "1152:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:13",
														"nodeType": "YulTypedName",
														"src": "1082:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:13",
														"nodeType": "YulTypedName",
														"src": "1090:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:13",
														"nodeType": "YulTypedName",
														"src": "1098:5:13",
														"type": ""
													}
												],
												"src": "1052:139:13"
											},
											{
												"body": {
													"nativeSrc": "1280:391:13",
													"nodeType": "YulBlock",
													"src": "1280:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:13",
																"nodeType": "YulBlock",
																"src": "1326:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:13"
																			},
																			"nativeSrc": "1328:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:13"
																		},
																		"nativeSrc": "1328:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:13"
																		},
																		"nativeSrc": "1297:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:13"
																},
																"nativeSrc": "1293:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:13"
															},
															"nativeSrc": "1290:119:13",
															"nodeType": "YulIf",
															"src": "1290:119:13"
														},
														{
															"nativeSrc": "1419:117:13",
															"nodeType": "YulBlock",
															"src": "1419:117:13",
															"statements": [
																{
																	"nativeSrc": "1434:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:13"
																				},
																				"nativeSrc": "1494:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:13"
																		},
																		"nativeSrc": "1473:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:13",
															"nodeType": "YulBlock",
															"src": "1546:118:13",
															"statements": [
																{
																	"nativeSrc": "1561:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:13"
																				},
																				"nativeSrc": "1622:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:13"
																		},
																		"nativeSrc": "1601:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:13",
														"nodeType": "YulTypedName",
														"src": "1242:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:13",
														"nodeType": "YulTypedName",
														"src": "1253:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:13",
														"nodeType": "YulTypedName",
														"src": "1265:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:13",
														"nodeType": "YulTypedName",
														"src": "1273:6:13",
														"type": ""
													}
												],
												"src": "1197:474:13"
											},
											{
												"body": {
													"nativeSrc": "1742:53:13",
													"nodeType": "YulBlock",
													"src": "1742:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1764:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:13"
																		},
																		"nativeSrc": "1764:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:13"
																},
																"nativeSrc": "1752:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:13"
															},
															"nativeSrc": "1752:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1677:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:13",
														"nodeType": "YulTypedName",
														"src": "1730:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:13",
														"nodeType": "YulTypedName",
														"src": "1737:3:13",
														"type": ""
													}
												],
												"src": "1677:118:13"
											},
											{
												"body": {
													"nativeSrc": "1899:124:13",
													"nodeType": "YulBlock",
													"src": "1899:124:13",
													"statements": [
														{
															"nativeSrc": "1909:26:13",
															"nodeType": "YulAssignment",
															"src": "1909:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1921:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1932:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1917:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:13"
																},
																"nativeSrc": "1917:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1917:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1909:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1989:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:13"
																		},
																		"nativeSrc": "1998:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1945:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:13"
																},
																"nativeSrc": "1945:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1945:71:13"
															},
															"nativeSrc": "1945:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1801:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1871:9:13",
														"nodeType": "YulTypedName",
														"src": "1871:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1883:6:13",
														"nodeType": "YulTypedName",
														"src": "1883:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1894:4:13",
														"nodeType": "YulTypedName",
														"src": "1894:4:13",
														"type": ""
													}
												],
												"src": "1801:222:13"
											},
											{
												"body": {
													"nativeSrc": "2073:105:13",
													"nodeType": "YulBlock",
													"src": "2073:105:13",
													"statements": [
														{
															"nativeSrc": "2083:89:13",
															"nodeType": "YulAssignment",
															"src": "2083:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2098:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2105:66:13",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2094:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:13"
																},
																"nativeSrc": "2094:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2094:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2083:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "2029:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2055:5:13",
														"nodeType": "YulTypedName",
														"src": "2055:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2065:7:13",
														"nodeType": "YulTypedName",
														"src": "2065:7:13",
														"type": ""
													}
												],
												"src": "2029:149:13"
											},
											{
												"body": {
													"nativeSrc": "2226:78:13",
													"nodeType": "YulBlock",
													"src": "2226:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2282:16:13",
																"nodeType": "YulBlock",
																"src": "2282:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2291:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2294:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2284:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:13"
																			},
																			"nativeSrc": "2284:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:13"
																		},
																		"nativeSrc": "2284:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2249:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2273:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "2256:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:13"
																				},
																				"nativeSrc": "2256:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2246:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:13"
																		},
																		"nativeSrc": "2246:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2239:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:13"
																},
																"nativeSrc": "2239:42:13",
																"nodeType": "YulFunctionCall",
																"src": "2239:42:13"
															},
															"nativeSrc": "2236:62:13",
															"nodeType": "YulIf",
															"src": "2236:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "2184:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2219:5:13",
														"nodeType": "YulTypedName",
														"src": "2219:5:13",
														"type": ""
													}
												],
												"src": "2184:120:13"
											},
											{
												"body": {
													"nativeSrc": "2361:86:13",
													"nodeType": "YulBlock",
													"src": "2361:86:13",
													"statements": [
														{
															"nativeSrc": "2371:29:13",
															"nodeType": "YulAssignment",
															"src": "2371:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2393:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2380:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:13"
																},
																"nativeSrc": "2380:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2380:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2371:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2435:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "2409:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:13"
																},
																"nativeSrc": "2409:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2409:32:13"
															},
															"nativeSrc": "2409:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "2310:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2339:6:13",
														"nodeType": "YulTypedName",
														"src": "2339:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:13",
														"nodeType": "YulTypedName",
														"src": "2347:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2355:5:13",
														"nodeType": "YulTypedName",
														"src": "2355:5:13",
														"type": ""
													}
												],
												"src": "2310:137:13"
											},
											{
												"body": {
													"nativeSrc": "2518:262:13",
													"nodeType": "YulBlock",
													"src": "2518:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2564:83:13",
																"nodeType": "YulBlock",
																"src": "2564:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2566:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:13"
																			},
																			"nativeSrc": "2566:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:13"
																		},
																		"nativeSrc": "2566:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2539:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2548:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2535:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:13"
																		},
																		"nativeSrc": "2535:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2560:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2531:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:13"
																},
																"nativeSrc": "2531:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2531:32:13"
															},
															"nativeSrc": "2528:119:13",
															"nodeType": "YulIf",
															"src": "2528:119:13"
														},
														{
															"nativeSrc": "2657:116:13",
															"nodeType": "YulBlock",
															"src": "2657:116:13",
															"statements": [
																{
																	"nativeSrc": "2672:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2686:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2676:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2701:62:13",
																	"nodeType": "YulAssignment",
																	"src": "2701:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2735:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2746:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2731:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:13"
																				},
																				"nativeSrc": "2731:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2755:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "2711:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:13"
																		},
																		"nativeSrc": "2711:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2701:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "2453:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2488:9:13",
														"nodeType": "YulTypedName",
														"src": "2488:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2499:7:13",
														"nodeType": "YulTypedName",
														"src": "2499:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2511:6:13",
														"nodeType": "YulTypedName",
														"src": "2511:6:13",
														"type": ""
													}
												],
												"src": "2453:327:13"
											},
											{
												"body": {
													"nativeSrc": "2828:48:13",
													"nodeType": "YulBlock",
													"src": "2828:48:13",
													"statements": [
														{
															"nativeSrc": "2838:32:13",
															"nodeType": "YulAssignment",
															"src": "2838:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2863:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2856:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:13"
																		},
																		"nativeSrc": "2856:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2849:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:13"
																},
																"nativeSrc": "2849:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2849:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2838:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2786:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2810:5:13",
														"nodeType": "YulTypedName",
														"src": "2810:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2820:7:13",
														"nodeType": "YulTypedName",
														"src": "2820:7:13",
														"type": ""
													}
												],
												"src": "2786:90:13"
											},
											{
												"body": {
													"nativeSrc": "2941:50:13",
													"nodeType": "YulBlock",
													"src": "2941:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2958:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2978:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2963:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:13"
																		},
																		"nativeSrc": "2963:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2951:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:13"
																},
																"nativeSrc": "2951:34:13",
																"nodeType": "YulFunctionCall",
																"src": "2951:34:13"
															},
															"nativeSrc": "2951:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2882:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2929:5:13",
														"nodeType": "YulTypedName",
														"src": "2929:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2936:3:13",
														"nodeType": "YulTypedName",
														"src": "2936:3:13",
														"type": ""
													}
												],
												"src": "2882:109:13"
											},
											{
												"body": {
													"nativeSrc": "3089:118:13",
													"nodeType": "YulBlock",
													"src": "3089:118:13",
													"statements": [
														{
															"nativeSrc": "3099:26:13",
															"nodeType": "YulAssignment",
															"src": "3099:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3111:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3107:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:13"
																},
																"nativeSrc": "3107:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3107:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3099:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3173:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3186:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3197:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3182:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:13"
																		},
																		"nativeSrc": "3182:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3135:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:13"
																},
																"nativeSrc": "3135:65:13",
																"nodeType": "YulFunctionCall",
																"src": "3135:65:13"
															},
															"nativeSrc": "3135:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2997:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3061:9:13",
														"nodeType": "YulTypedName",
														"src": "3061:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3073:6:13",
														"nodeType": "YulTypedName",
														"src": "3073:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3084:4:13",
														"nodeType": "YulTypedName",
														"src": "3084:4:13",
														"type": ""
													}
												],
												"src": "2997:210:13"
											},
											{
												"body": {
													"nativeSrc": "3279:263:13",
													"nodeType": "YulBlock",
													"src": "3279:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3325:83:13",
																"nodeType": "YulBlock",
																"src": "3325:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3327:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:13"
																			},
																			"nativeSrc": "3327:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:13"
																		},
																		"nativeSrc": "3327:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3300:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3309:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3296:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:13"
																		},
																		"nativeSrc": "3296:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3292:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:13"
																},
																"nativeSrc": "3292:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3292:32:13"
															},
															"nativeSrc": "3289:119:13",
															"nodeType": "YulIf",
															"src": "3289:119:13"
														},
														{
															"nativeSrc": "3418:117:13",
															"nodeType": "YulBlock",
															"src": "3418:117:13",
															"statements": [
																{
																	"nativeSrc": "3433:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3447:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3437:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:13"
																				},
																				"nativeSrc": "3493:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3472:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:13"
																		},
																		"nativeSrc": "3472:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3462:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3213:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3249:9:13",
														"nodeType": "YulTypedName",
														"src": "3249:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3260:7:13",
														"nodeType": "YulTypedName",
														"src": "3260:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3272:6:13",
														"nodeType": "YulTypedName",
														"src": "3272:6:13",
														"type": ""
													}
												],
												"src": "3213:329:13"
											},
											{
												"body": {
													"nativeSrc": "3607:40:13",
													"nodeType": "YulBlock",
													"src": "3607:40:13",
													"statements": [
														{
															"nativeSrc": "3618:22:13",
															"nodeType": "YulAssignment",
															"src": "3618:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3634:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3628:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:13"
																},
																"nativeSrc": "3628:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3628:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3618:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3548:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3590:5:13",
														"nodeType": "YulTypedName",
														"src": "3590:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3600:6:13",
														"nodeType": "YulTypedName",
														"src": "3600:6:13",
														"type": ""
													}
												],
												"src": "3548:99:13"
											},
											{
												"body": {
													"nativeSrc": "3749:73:13",
													"nodeType": "YulBlock",
													"src": "3749:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3766:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3771:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3771:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3759:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:13"
																},
																"nativeSrc": "3759:19:13",
																"nodeType": "YulFunctionCall",
																"src": "3759:19:13"
															},
															"nativeSrc": "3759:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "3759:19:13"
														},
														{
															"nativeSrc": "3787:29:13",
															"nodeType": "YulAssignment",
															"src": "3787:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3806:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3806:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3811:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3802:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:13"
																},
																"nativeSrc": "3802:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3802:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3787:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "3787:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3653:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3721:3:13",
														"nodeType": "YulTypedName",
														"src": "3721:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3726:6:13",
														"nodeType": "YulTypedName",
														"src": "3726:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3737:11:13",
														"nodeType": "YulTypedName",
														"src": "3737:11:13",
														"type": ""
													}
												],
												"src": "3653:169:13"
											},
											{
												"body": {
													"nativeSrc": "3890:77:13",
													"nodeType": "YulBlock",
													"src": "3890:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3907:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3907:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3912:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3912:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3917:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3917:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "3901:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3901:5:13"
																},
																"nativeSrc": "3901:23:13",
																"nodeType": "YulFunctionCall",
																"src": "3901:23:13"
															},
															"nativeSrc": "3901:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "3901:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3944:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3944:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3949:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3949:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3940:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3940:3:13"
																		},
																		"nativeSrc": "3940:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3940:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3958:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3958:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3933:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3933:6:13"
																},
																"nativeSrc": "3933:27:13",
																"nodeType": "YulFunctionCall",
																"src": "3933:27:13"
															},
															"nativeSrc": "3933:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "3933:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3828:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3872:3:13",
														"nodeType": "YulTypedName",
														"src": "3872:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3877:3:13",
														"nodeType": "YulTypedName",
														"src": "3877:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3882:6:13",
														"nodeType": "YulTypedName",
														"src": "3882:6:13",
														"type": ""
													}
												],
												"src": "3828:139:13"
											},
											{
												"body": {
													"nativeSrc": "4021:54:13",
													"nodeType": "YulBlock",
													"src": "4021:54:13",
													"statements": [
														{
															"nativeSrc": "4031:38:13",
															"nodeType": "YulAssignment",
															"src": "4031:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4049:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4049:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4056:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4056:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4045:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4045:3:13"
																		},
																		"nativeSrc": "4045:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4045:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4065:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4065:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4061:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4061:3:13"
																		},
																		"nativeSrc": "4061:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4061:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4041:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4041:3:13"
																},
																"nativeSrc": "4041:28:13",
																"nodeType": "YulFunctionCall",
																"src": "4041:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4031:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4031:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3973:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4004:5:13",
														"nodeType": "YulTypedName",
														"src": "4004:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4014:6:13",
														"nodeType": "YulTypedName",
														"src": "4014:6:13",
														"type": ""
													}
												],
												"src": "3973:102:13"
											},
											{
												"body": {
													"nativeSrc": "4173:285:13",
													"nodeType": "YulBlock",
													"src": "4173:285:13",
													"statements": [
														{
															"nativeSrc": "4183:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4183:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4230:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4230:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4197:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "4197:32:13"
																},
																"nativeSrc": "4197:39:13",
																"nodeType": "YulFunctionCall",
																"src": "4197:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4187:6:13",
																	"nodeType": "YulTypedName",
																	"src": "4187:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4245:78:13",
															"nodeType": "YulAssignment",
															"src": "4245:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4311:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4311:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4316:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4316:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4252:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "4252:58:13"
																},
																"nativeSrc": "4252:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4252:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4245:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4245:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4371:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4371:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4378:4:13",
																				"nodeType": "YulLiteral",
																				"src": "4378:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4367:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4367:3:13"
																		},
																		"nativeSrc": "4367:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4367:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4385:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4385:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4390:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4390:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4332:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "4332:34:13"
																},
																"nativeSrc": "4332:65:13",
																"nodeType": "YulFunctionCall",
																"src": "4332:65:13"
															},
															"nativeSrc": "4332:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "4332:65:13"
														},
														{
															"nativeSrc": "4406:46:13",
															"nodeType": "YulAssignment",
															"src": "4406:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4417:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4417:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4444:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4444:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4422:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "4422:21:13"
																		},
																		"nativeSrc": "4422:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4422:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4413:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4413:3:13"
																},
																"nativeSrc": "4413:39:13",
																"nodeType": "YulFunctionCall",
																"src": "4413:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4406:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4406:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4081:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4154:5:13",
														"nodeType": "YulTypedName",
														"src": "4154:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4161:3:13",
														"nodeType": "YulTypedName",
														"src": "4161:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4169:3:13",
														"nodeType": "YulTypedName",
														"src": "4169:3:13",
														"type": ""
													}
												],
												"src": "4081:377:13"
											},
											{
												"body": {
													"nativeSrc": "4582:195:13",
													"nodeType": "YulBlock",
													"src": "4582:195:13",
													"statements": [
														{
															"nativeSrc": "4592:26:13",
															"nodeType": "YulAssignment",
															"src": "4592:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4604:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4604:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4615:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4615:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4600:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4600:3:13"
																},
																"nativeSrc": "4600:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4600:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4592:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4592:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4639:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4639:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4650:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4650:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4635:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4635:3:13"
																		},
																		"nativeSrc": "4635:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4635:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4658:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4658:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4664:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4664:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4654:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4654:3:13"
																		},
																		"nativeSrc": "4654:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4654:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4628:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4628:6:13"
																},
																"nativeSrc": "4628:47:13",
																"nodeType": "YulFunctionCall",
																"src": "4628:47:13"
															},
															"nativeSrc": "4628:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "4628:47:13"
														},
														{
															"nativeSrc": "4684:86:13",
															"nodeType": "YulAssignment",
															"src": "4684:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4756:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4756:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4765:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4765:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4692:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "4692:63:13"
																},
																"nativeSrc": "4692:78:13",
																"nodeType": "YulFunctionCall",
																"src": "4692:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4684:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4684:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4464:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4554:9:13",
														"nodeType": "YulTypedName",
														"src": "4554:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4566:6:13",
														"nodeType": "YulTypedName",
														"src": "4566:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4577:4:13",
														"nodeType": "YulTypedName",
														"src": "4577:4:13",
														"type": ""
													}
												],
												"src": "4464:313:13"
											},
											{
												"body": {
													"nativeSrc": "4883:519:13",
													"nodeType": "YulBlock",
													"src": "4883:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:13",
																"nodeType": "YulBlock",
																"src": "4929:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:13"
																			},
																			"nativeSrc": "4931:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:13"
																		},
																		"nativeSrc": "4931:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:13"
																		},
																		"nativeSrc": "4900:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:13"
																},
																"nativeSrc": "4896:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:13"
															},
															"nativeSrc": "4893:119:13",
															"nodeType": "YulIf",
															"src": "4893:119:13"
														},
														{
															"nativeSrc": "5022:117:13",
															"nodeType": "YulBlock",
															"src": "5022:117:13",
															"statements": [
																{
																	"nativeSrc": "5037:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:13"
																				},
																				"nativeSrc": "5097:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:13"
																		},
																		"nativeSrc": "5076:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:13",
															"nodeType": "YulBlock",
															"src": "5149:118:13",
															"statements": [
																{
																	"nativeSrc": "5164:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:13"
																				},
																				"nativeSrc": "5225:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5204:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:13"
																		},
																		"nativeSrc": "5204:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:13",
															"nodeType": "YulBlock",
															"src": "5277:118:13",
															"statements": [
																{
																	"nativeSrc": "5292:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:13"
																				},
																				"nativeSrc": "5353:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:13"
																		},
																		"nativeSrc": "5332:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "4783:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:13",
														"nodeType": "YulTypedName",
														"src": "4837:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:13",
														"nodeType": "YulTypedName",
														"src": "4848:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:13",
														"nodeType": "YulTypedName",
														"src": "4860:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:13",
														"nodeType": "YulTypedName",
														"src": "4868:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:13",
														"nodeType": "YulTypedName",
														"src": "4876:6:13",
														"type": ""
													}
												],
												"src": "4783:619:13"
											},
											{
												"body": {
													"nativeSrc": "5497:28:13",
													"nodeType": "YulBlock",
													"src": "5497:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5514:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5514:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5517:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5517:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5507:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5507:6:13"
																},
																"nativeSrc": "5507:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5507:12:13"
															},
															"nativeSrc": "5507:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "5507:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5408:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5408:117:13"
											},
											{
												"body": {
													"nativeSrc": "5559:152:13",
													"nodeType": "YulBlock",
													"src": "5559:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5576:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5576:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5579:77:13",
																		"nodeType": "YulLiteral",
																		"src": "5579:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5569:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5569:6:13"
																},
																"nativeSrc": "5569:88:13",
																"nodeType": "YulFunctionCall",
																"src": "5569:88:13"
															},
															"nativeSrc": "5569:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "5569:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5673:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5673:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5676:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5676:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5666:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5666:6:13"
																},
																"nativeSrc": "5666:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5666:15:13"
															},
															"nativeSrc": "5666:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5666:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5697:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5697:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5700:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5700:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5690:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5690:6:13"
																},
																"nativeSrc": "5690:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5690:15:13"
															},
															"nativeSrc": "5690:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5690:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5531:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5531:180:13"
											},
											{
												"body": {
													"nativeSrc": "5760:238:13",
													"nodeType": "YulBlock",
													"src": "5760:238:13",
													"statements": [
														{
															"nativeSrc": "5770:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5770:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5792:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5792:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5822:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5822:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5800:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "5800:21:13"
																		},
																		"nativeSrc": "5800:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5800:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5788:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5788:3:13"
																},
																"nativeSrc": "5788:40:13",
																"nodeType": "YulFunctionCall",
																"src": "5788:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5774:10:13",
																	"nodeType": "YulTypedName",
																	"src": "5774:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5939:22:13",
																"nodeType": "YulBlock",
																"src": "5939:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5941:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5941:16:13"
																			},
																			"nativeSrc": "5941:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5941:18:13"
																		},
																		"nativeSrc": "5941:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5941:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5882:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "5882:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5894:18:13",
																				"nodeType": "YulLiteral",
																				"src": "5894:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5879:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5879:2:13"
																		},
																		"nativeSrc": "5879:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5879:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5918:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "5918:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5930:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5930:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5915:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5915:2:13"
																		},
																		"nativeSrc": "5915:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5915:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5876:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5876:2:13"
																},
																"nativeSrc": "5876:62:13",
																"nodeType": "YulFunctionCall",
																"src": "5876:62:13"
															},
															"nativeSrc": "5873:88:13",
															"nodeType": "YulIf",
															"src": "5873:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5977:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5977:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5981:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "5981:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5970:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5970:6:13"
																},
																"nativeSrc": "5970:22:13",
																"nodeType": "YulFunctionCall",
																"src": "5970:22:13"
															},
															"nativeSrc": "5970:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "5970:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5717:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5746:6:13",
														"nodeType": "YulTypedName",
														"src": "5746:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5754:4:13",
														"nodeType": "YulTypedName",
														"src": "5754:4:13",
														"type": ""
													}
												],
												"src": "5717:281:13"
											},
											{
												"body": {
													"nativeSrc": "6045:88:13",
													"nodeType": "YulBlock",
													"src": "6045:88:13",
													"statements": [
														{
															"nativeSrc": "6055:30:13",
															"nodeType": "YulAssignment",
															"src": "6055:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6065:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "6065:18:13"
																},
																"nativeSrc": "6065:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6065:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6055:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6055:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6114:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6114:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6122:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6122:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6094:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "6094:19:13"
																},
																"nativeSrc": "6094:33:13",
																"nodeType": "YulFunctionCall",
																"src": "6094:33:13"
															},
															"nativeSrc": "6094:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "6094:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6004:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6029:4:13",
														"nodeType": "YulTypedName",
														"src": "6029:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6038:6:13",
														"nodeType": "YulTypedName",
														"src": "6038:6:13",
														"type": ""
													}
												],
												"src": "6004:129:13"
											},
											{
												"body": {
													"nativeSrc": "6221:229:13",
													"nodeType": "YulBlock",
													"src": "6221:229:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6326:22:13",
																"nodeType": "YulBlock",
																"src": "6326:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6328:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "6328:16:13"
																			},
																			"nativeSrc": "6328:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6328:18:13"
																		},
																		"nativeSrc": "6328:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6328:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6298:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6298:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6306:18:13",
																		"nodeType": "YulLiteral",
																		"src": "6306:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6295:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6295:2:13"
																},
																"nativeSrc": "6295:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6295:30:13"
															},
															"nativeSrc": "6292:56:13",
															"nodeType": "YulIf",
															"src": "6292:56:13"
														},
														{
															"nativeSrc": "6358:25:13",
															"nodeType": "YulAssignment",
															"src": "6358:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6370:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6370:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6378:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6378:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6366:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6366:3:13"
																},
																"nativeSrc": "6366:17:13",
																"nodeType": "YulFunctionCall",
																"src": "6366:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6358:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6358:4:13"
																}
															]
														},
														{
															"nativeSrc": "6420:23:13",
															"nodeType": "YulAssignment",
															"src": "6420:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6432:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6432:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6438:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6438:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6428:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6428:3:13"
																},
																"nativeSrc": "6428:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6428:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6420:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6420:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6139:311:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6205:6:13",
														"nodeType": "YulTypedName",
														"src": "6205:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6216:4:13",
														"nodeType": "YulTypedName",
														"src": "6216:4:13",
														"type": ""
													}
												],
												"src": "6139:311:13"
											},
											{
												"body": {
													"nativeSrc": "6545:28:13",
													"nodeType": "YulBlock",
													"src": "6545:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6565:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6565:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6555:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6555:6:13"
																},
																"nativeSrc": "6555:12:13",
																"nodeType": "YulFunctionCall",
																"src": "6555:12:13"
															},
															"nativeSrc": "6555:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "6555:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "6456:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "6456:117:13"
											},
											{
												"body": {
													"nativeSrc": "6698:608:13",
													"nodeType": "YulBlock",
													"src": "6698:608:13",
													"statements": [
														{
															"nativeSrc": "6708:90:13",
															"nodeType": "YulAssignment",
															"src": "6708:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6790:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6790:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "6733:56:13",
																			"nodeType": "YulIdentifier",
																			"src": "6733:56:13"
																		},
																		"nativeSrc": "6733:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6733:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6717:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "6717:15:13"
																},
																"nativeSrc": "6717:81:13",
																"nodeType": "YulFunctionCall",
																"src": "6717:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6708:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6708:5:13"
																}
															]
														},
														{
															"nativeSrc": "6807:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6807:16:13",
															"value": {
																"name": "array",
																"nativeSrc": "6818:5:13",
																"nodeType": "YulIdentifier",
																"src": "6818:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6811:3:13",
																	"nodeType": "YulTypedName",
																	"src": "6811:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6840:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6840:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6847:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6847:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6833:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6833:6:13"
																},
																"nativeSrc": "6833:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6833:21:13"
															},
															"nativeSrc": "6833:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "6833:21:13"
														},
														{
															"nativeSrc": "6863:23:13",
															"nodeType": "YulAssignment",
															"src": "6863:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6874:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6874:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6881:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6881:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6870:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6870:3:13"
																},
																"nativeSrc": "6870:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6870:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "6863:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6863:3:13"
																}
															]
														},
														{
															"nativeSrc": "6896:44:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6896:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6914:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6914:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6926:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6926:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6934:4:13",
																				"nodeType": "YulLiteral",
																				"src": "6934:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6922:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6922:3:13"
																		},
																		"nativeSrc": "6922:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6922:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6910:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6910:3:13"
																},
																"nativeSrc": "6910:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6910:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6900:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6900:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6968:103:13",
																"nodeType": "YulBlock",
																"src": "6968:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "6982:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6982:77:13"
																			},
																			"nativeSrc": "6982:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6982:79:13"
																		},
																		"nativeSrc": "6982:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6982:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6955:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6955:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6963:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6963:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6952:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6952:2:13"
																},
																"nativeSrc": "6952:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6952:15:13"
															},
															"nativeSrc": "6949:122:13",
															"nodeType": "YulIf",
															"src": "6949:122:13"
														},
														{
															"body": {
																"nativeSrc": "7156:144:13",
																"nodeType": "YulBlock",
																"src": "7156:144:13",
																"statements": [
																	{
																		"nativeSrc": "7171:21:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7171:21:13",
																		"value": {
																			"name": "src",
																			"nativeSrc": "7189:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7189:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "7175:10:13",
																				"nodeType": "YulTypedName",
																				"src": "7175:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7213:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7213:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "7239:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "7239:10:13"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "7251:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "7251:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "7218:20:13",
																						"nodeType": "YulIdentifier",
																						"src": "7218:20:13"
																					},
																					"nativeSrc": "7218:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7218:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7206:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7206:6:13"
																			},
																			"nativeSrc": "7206:50:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7206:50:13"
																		},
																		"nativeSrc": "7206:50:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7206:50:13"
																	},
																	{
																		"nativeSrc": "7269:21:13",
																		"nodeType": "YulAssignment",
																		"src": "7269:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7280:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7280:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7285:4:13",
																					"nodeType": "YulLiteral",
																					"src": "7285:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7276:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7276:3:13"
																			},
																			"nativeSrc": "7276:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7276:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "7269:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7269:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7109:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7109:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7114:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7114:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7106:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7106:2:13"
																},
																"nativeSrc": "7106:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7106:15:13"
															},
															"nativeSrc": "7080:220:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7122:25:13",
																"nodeType": "YulBlock",
																"src": "7122:25:13",
																"statements": [
																	{
																		"nativeSrc": "7124:21:13",
																		"nodeType": "YulAssignment",
																		"src": "7124:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "7135:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7135:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7140:4:13",
																					"nodeType": "YulLiteral",
																					"src": "7140:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7131:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7131:3:13"
																			},
																			"nativeSrc": "7131:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7131:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "7124:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7124:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7084:21:13",
																"nodeType": "YulBlock",
																"src": "7084:21:13",
																"statements": [
																	{
																		"nativeSrc": "7086:17:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7086:17:13",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "7097:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7097:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "7090:3:13",
																				"nodeType": "YulTypedName",
																				"src": "7090:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7080:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6596:710:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6668:6:13",
														"nodeType": "YulTypedName",
														"src": "6668:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6676:6:13",
														"nodeType": "YulTypedName",
														"src": "6676:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6684:3:13",
														"nodeType": "YulTypedName",
														"src": "6684:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6692:5:13",
														"nodeType": "YulTypedName",
														"src": "6692:5:13",
														"type": ""
													}
												],
												"src": "6596:710:13"
											},
											{
												"body": {
													"nativeSrc": "7406:293:13",
													"nodeType": "YulBlock",
													"src": "7406:293:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7455:83:13",
																"nodeType": "YulBlock",
																"src": "7455:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7457:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7457:77:13"
																			},
																			"nativeSrc": "7457:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7457:79:13"
																		},
																		"nativeSrc": "7457:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7457:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7434:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7434:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7442:4:13",
																						"nodeType": "YulLiteral",
																						"src": "7442:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7430:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7430:3:13"
																				},
																				"nativeSrc": "7430:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7430:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7449:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7449:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7426:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7426:3:13"
																		},
																		"nativeSrc": "7426:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7426:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7419:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7419:6:13"
																},
																"nativeSrc": "7419:35:13",
																"nodeType": "YulFunctionCall",
																"src": "7419:35:13"
															},
															"nativeSrc": "7416:122:13",
															"nodeType": "YulIf",
															"src": "7416:122:13"
														},
														{
															"nativeSrc": "7547:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7547:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7574:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7574:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7561:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7561:12:13"
																},
																"nativeSrc": "7561:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7561:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7551:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7551:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7590:103:13",
															"nodeType": "YulAssignment",
															"src": "7590:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7666:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7666:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7674:4:13",
																				"nodeType": "YulLiteral",
																				"src": "7674:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7662:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7662:3:13"
																		},
																		"nativeSrc": "7662:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7662:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7681:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7681:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7689:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7689:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7599:62:13",
																	"nodeType": "YulIdentifier",
																	"src": "7599:62:13"
																},
																"nativeSrc": "7599:94:13",
																"nodeType": "YulFunctionCall",
																"src": "7599:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7590:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7590:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7329:370:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7384:6:13",
														"nodeType": "YulTypedName",
														"src": "7384:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7392:3:13",
														"nodeType": "YulTypedName",
														"src": "7392:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7400:5:13",
														"nodeType": "YulTypedName",
														"src": "7400:5:13",
														"type": ""
													}
												],
												"src": "7329:370:13"
											},
											{
												"body": {
													"nativeSrc": "7794:28:13",
													"nodeType": "YulBlock",
													"src": "7794:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7811:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7811:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7814:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7814:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7804:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7804:6:13"
																},
																"nativeSrc": "7804:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7804:12:13"
															},
															"nativeSrc": "7804:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "7804:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7705:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7705:117:13"
											},
											{
												"body": {
													"nativeSrc": "7894:241:13",
													"nodeType": "YulBlock",
													"src": "7894:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7999:22:13",
																"nodeType": "YulBlock",
																"src": "7999:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8001:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8001:16:13"
																			},
																			"nativeSrc": "8001:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8001:18:13"
																		},
																		"nativeSrc": "8001:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8001:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7971:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7971:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7979:18:13",
																		"nodeType": "YulLiteral",
																		"src": "7979:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7968:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7968:2:13"
																},
																"nativeSrc": "7968:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7968:30:13"
															},
															"nativeSrc": "7965:56:13",
															"nodeType": "YulIf",
															"src": "7965:56:13"
														},
														{
															"nativeSrc": "8031:37:13",
															"nodeType": "YulAssignment",
															"src": "8031:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8061:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8061:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8039:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "8039:21:13"
																},
																"nativeSrc": "8039:29:13",
																"nodeType": "YulFunctionCall",
																"src": "8039:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8031:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8031:4:13"
																}
															]
														},
														{
															"nativeSrc": "8105:23:13",
															"nodeType": "YulAssignment",
															"src": "8105:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8117:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8117:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8123:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8123:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8113:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8113:3:13"
																},
																"nativeSrc": "8113:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8113:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8105:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8105:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7828:307:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7878:6:13",
														"nodeType": "YulTypedName",
														"src": "7878:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7889:4:13",
														"nodeType": "YulTypedName",
														"src": "7889:4:13",
														"type": ""
													}
												],
												"src": "7828:307:13"
											},
											{
												"body": {
													"nativeSrc": "8205:84:13",
													"nodeType": "YulBlock",
													"src": "8205:84:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8229:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8229:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8234:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8234:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8239:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8239:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8216:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8216:12:13"
																},
																"nativeSrc": "8216:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8216:30:13"
															},
															"nativeSrc": "8216:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "8216:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8266:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8266:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8271:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8271:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8262:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8262:3:13"
																		},
																		"nativeSrc": "8262:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8262:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8280:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8280:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8255:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8255:6:13"
																},
																"nativeSrc": "8255:27:13",
																"nodeType": "YulFunctionCall",
																"src": "8255:27:13"
															},
															"nativeSrc": "8255:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "8255:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8141:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8187:3:13",
														"nodeType": "YulTypedName",
														"src": "8187:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8192:3:13",
														"nodeType": "YulTypedName",
														"src": "8192:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8197:6:13",
														"nodeType": "YulTypedName",
														"src": "8197:6:13",
														"type": ""
													}
												],
												"src": "8141:148:13"
											},
											{
												"body": {
													"nativeSrc": "8378:340:13",
													"nodeType": "YulBlock",
													"src": "8378:340:13",
													"statements": [
														{
															"nativeSrc": "8388:74:13",
															"nodeType": "YulAssignment",
															"src": "8388:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8454:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8454:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8413:40:13",
																			"nodeType": "YulIdentifier",
																			"src": "8413:40:13"
																		},
																		"nativeSrc": "8413:48:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8413:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8397:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "8397:15:13"
																},
																"nativeSrc": "8397:65:13",
																"nodeType": "YulFunctionCall",
																"src": "8397:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8388:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8388:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8478:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8478:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8485:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8485:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8471:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8471:6:13"
																},
																"nativeSrc": "8471:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8471:21:13"
															},
															"nativeSrc": "8471:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "8471:21:13"
														},
														{
															"nativeSrc": "8501:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8501:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8516:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8516:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8523:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8523:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8512:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8512:3:13"
																},
																"nativeSrc": "8512:16:13",
																"nodeType": "YulFunctionCall",
																"src": "8512:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8505:3:13",
																	"nodeType": "YulTypedName",
																	"src": "8505:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8566:83:13",
																"nodeType": "YulBlock",
																"src": "8566:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8568:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8568:77:13"
																			},
																			"nativeSrc": "8568:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8568:79:13"
																		},
																		"nativeSrc": "8568:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8568:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8547:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8547:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8552:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8552:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8543:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8543:3:13"
																		},
																		"nativeSrc": "8543:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8543:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8561:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8561:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8540:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8540:2:13"
																},
																"nativeSrc": "8540:25:13",
																"nodeType": "YulFunctionCall",
																"src": "8540:25:13"
															},
															"nativeSrc": "8537:112:13",
															"nodeType": "YulIf",
															"src": "8537:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8695:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8695:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8700:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8700:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8705:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8705:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8658:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "8658:36:13"
																},
																"nativeSrc": "8658:54:13",
																"nodeType": "YulFunctionCall",
																"src": "8658:54:13"
															},
															"nativeSrc": "8658:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "8658:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8295:423:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8351:3:13",
														"nodeType": "YulTypedName",
														"src": "8351:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8356:6:13",
														"nodeType": "YulTypedName",
														"src": "8356:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8364:3:13",
														"nodeType": "YulTypedName",
														"src": "8364:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8372:5:13",
														"nodeType": "YulTypedName",
														"src": "8372:5:13",
														"type": ""
													}
												],
												"src": "8295:423:13"
											},
											{
												"body": {
													"nativeSrc": "8798:277:13",
													"nodeType": "YulBlock",
													"src": "8798:277:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8847:83:13",
																"nodeType": "YulBlock",
																"src": "8847:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8849:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8849:77:13"
																			},
																			"nativeSrc": "8849:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8849:79:13"
																		},
																		"nativeSrc": "8849:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8849:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8826:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8826:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8834:4:13",
																						"nodeType": "YulLiteral",
																						"src": "8834:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8822:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8822:3:13"
																				},
																				"nativeSrc": "8822:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8822:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8841:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8841:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8818:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8818:3:13"
																		},
																		"nativeSrc": "8818:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8818:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8811:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8811:6:13"
																},
																"nativeSrc": "8811:35:13",
																"nodeType": "YulFunctionCall",
																"src": "8811:35:13"
															},
															"nativeSrc": "8808:122:13",
															"nodeType": "YulIf",
															"src": "8808:122:13"
														},
														{
															"nativeSrc": "8939:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8939:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8966:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8966:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8953:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8953:12:13"
																},
																"nativeSrc": "8953:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8953:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8943:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8943:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8982:87:13",
															"nodeType": "YulAssignment",
															"src": "8982:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9042:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9042:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9050:4:13",
																				"nodeType": "YulLiteral",
																				"src": "9050:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9038:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9038:3:13"
																		},
																		"nativeSrc": "9038:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9038:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9057:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9057:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9065:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9065:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8991:46:13",
																	"nodeType": "YulIdentifier",
																	"src": "8991:46:13"
																},
																"nativeSrc": "8991:78:13",
																"nodeType": "YulFunctionCall",
																"src": "8991:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8982:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8982:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8737:338:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8776:6:13",
														"nodeType": "YulTypedName",
														"src": "8776:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8784:3:13",
														"nodeType": "YulTypedName",
														"src": "8784:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8792:5:13",
														"nodeType": "YulTypedName",
														"src": "8792:5:13",
														"type": ""
													}
												],
												"src": "8737:338:13"
											},
											{
												"body": {
													"nativeSrc": "9274:1316:13",
													"nodeType": "YulBlock",
													"src": "9274:1316:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9321:83:13",
																"nodeType": "YulBlock",
																"src": "9321:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9323:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9323:77:13"
																			},
																			"nativeSrc": "9323:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9323:79:13"
																		},
																		"nativeSrc": "9323:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9323:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9295:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9295:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9304:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9304:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9291:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9291:3:13"
																		},
																		"nativeSrc": "9291:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9291:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9316:3:13",
																		"nodeType": "YulLiteral",
																		"src": "9316:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9287:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9287:3:13"
																},
																"nativeSrc": "9287:33:13",
																"nodeType": "YulFunctionCall",
																"src": "9287:33:13"
															},
															"nativeSrc": "9284:120:13",
															"nodeType": "YulIf",
															"src": "9284:120:13"
														},
														{
															"nativeSrc": "9414:117:13",
															"nodeType": "YulBlock",
															"src": "9414:117:13",
															"statements": [
																{
																	"nativeSrc": "9429:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9429:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9443:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9443:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9433:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9433:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9458:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9458:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9493:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9493:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9504:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9504:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9489:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9489:3:13"
																				},
																				"nativeSrc": "9489:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9489:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9513:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9513:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9468:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9468:20:13"
																		},
																		"nativeSrc": "9468:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9468:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9458:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9458:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9541:118:13",
															"nodeType": "YulBlock",
															"src": "9541:118:13",
															"statements": [
																{
																	"nativeSrc": "9556:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9556:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9570:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9570:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9560:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9560:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9586:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9586:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9621:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9621:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9632:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9632:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9617:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9617:3:13"
																				},
																				"nativeSrc": "9617:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9617:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9641:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9641:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9596:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9596:20:13"
																		},
																		"nativeSrc": "9596:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9596:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9586:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9586:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9669:303:13",
															"nodeType": "YulBlock",
															"src": "9669:303:13",
															"statements": [
																{
																	"nativeSrc": "9684:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9684:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9715:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9715:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9726:2:13",
																						"nodeType": "YulLiteral",
																						"src": "9726:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9711:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9711:3:13"
																				},
																				"nativeSrc": "9711:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9711:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9698:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "9698:12:13"
																		},
																		"nativeSrc": "9698:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9698:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9688:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9688:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9777:83:13",
																		"nodeType": "YulBlock",
																		"src": "9777:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9779:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "9779:77:13"
																					},
																					"nativeSrc": "9779:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9779:79:13"
																				},
																				"nativeSrc": "9779:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "9779:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9749:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9749:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9757:18:13",
																				"nodeType": "YulLiteral",
																				"src": "9757:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9746:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "9746:2:13"
																		},
																		"nativeSrc": "9746:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9746:30:13"
																	},
																	"nativeSrc": "9743:117:13",
																	"nodeType": "YulIf",
																	"src": "9743:117:13"
																},
																{
																	"nativeSrc": "9874:88:13",
																	"nodeType": "YulAssignment",
																	"src": "9874:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9934:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9934:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9945:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9945:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9930:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9930:3:13"
																				},
																				"nativeSrc": "9930:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9930:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9954:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9954:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "9884:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "9884:45:13"
																		},
																		"nativeSrc": "9884:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9884:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9874:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9874:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9982:303:13",
															"nodeType": "YulBlock",
															"src": "9982:303:13",
															"statements": [
																{
																	"nativeSrc": "9997:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9997:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10028:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10028:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10039:2:13",
																						"nodeType": "YulLiteral",
																						"src": "10039:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10024:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10024:3:13"
																				},
																				"nativeSrc": "10024:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10024:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10011:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "10011:12:13"
																		},
																		"nativeSrc": "10011:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10011:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10001:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10001:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10090:83:13",
																		"nodeType": "YulBlock",
																		"src": "10090:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10092:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "10092:77:13"
																					},
																					"nativeSrc": "10092:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "10092:79:13"
																				},
																				"nativeSrc": "10092:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "10092:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10062:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10062:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10070:18:13",
																				"nodeType": "YulLiteral",
																				"src": "10070:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10059:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "10059:2:13"
																		},
																		"nativeSrc": "10059:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10059:30:13"
																	},
																	"nativeSrc": "10056:117:13",
																	"nodeType": "YulIf",
																	"src": "10056:117:13"
																},
																{
																	"nativeSrc": "10187:88:13",
																	"nodeType": "YulAssignment",
																	"src": "10187:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10247:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10247:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10258:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10258:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10243:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10243:3:13"
																				},
																				"nativeSrc": "10243:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10243:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10267:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10267:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "10197:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "10197:45:13"
																		},
																		"nativeSrc": "10197:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10197:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10187:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10187:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10295:288:13",
															"nodeType": "YulBlock",
															"src": "10295:288:13",
															"statements": [
																{
																	"nativeSrc": "10310:47:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10310:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10341:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10341:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10352:3:13",
																						"nodeType": "YulLiteral",
																						"src": "10352:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10337:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10337:3:13"
																				},
																				"nativeSrc": "10337:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10337:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10324:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "10324:12:13"
																		},
																		"nativeSrc": "10324:33:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10324:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10314:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10314:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10404:83:13",
																		"nodeType": "YulBlock",
																		"src": "10404:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10406:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "10406:77:13"
																					},
																					"nativeSrc": "10406:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "10406:79:13"
																				},
																				"nativeSrc": "10406:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "10406:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10376:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10376:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10384:18:13",
																				"nodeType": "YulLiteral",
																				"src": "10384:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10373:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "10373:2:13"
																		},
																		"nativeSrc": "10373:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10373:30:13"
																	},
																	"nativeSrc": "10370:117:13",
																	"nodeType": "YulIf",
																	"src": "10370:117:13"
																},
																{
																	"nativeSrc": "10501:72:13",
																	"nodeType": "YulAssignment",
																	"src": "10501:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10545:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10545:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10556:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10556:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10541:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10541:3:13"
																				},
																				"nativeSrc": "10541:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10541:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10565:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10565:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "10511:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "10511:29:13"
																		},
																		"nativeSrc": "10511:62:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10511:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "10501:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10501:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "9081:1509:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9212:9:13",
														"nodeType": "YulTypedName",
														"src": "9212:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9223:7:13",
														"nodeType": "YulTypedName",
														"src": "9223:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9235:6:13",
														"nodeType": "YulTypedName",
														"src": "9235:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9243:6:13",
														"nodeType": "YulTypedName",
														"src": "9243:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9251:6:13",
														"nodeType": "YulTypedName",
														"src": "9251:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9259:6:13",
														"nodeType": "YulTypedName",
														"src": "9259:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9267:6:13",
														"nodeType": "YulTypedName",
														"src": "9267:6:13",
														"type": ""
													}
												],
												"src": "9081:1509:13"
											},
											{
												"body": {
													"nativeSrc": "10678:229:13",
													"nodeType": "YulBlock",
													"src": "10678:229:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10783:22:13",
																"nodeType": "YulBlock",
																"src": "10783:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10785:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10785:16:13"
																			},
																			"nativeSrc": "10785:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10785:18:13"
																		},
																		"nativeSrc": "10785:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10785:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10755:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10755:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10763:18:13",
																		"nodeType": "YulLiteral",
																		"src": "10763:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10752:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10752:2:13"
																},
																"nativeSrc": "10752:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10752:30:13"
															},
															"nativeSrc": "10749:56:13",
															"nodeType": "YulIf",
															"src": "10749:56:13"
														},
														{
															"nativeSrc": "10815:25:13",
															"nodeType": "YulAssignment",
															"src": "10815:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10827:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10827:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10835:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10835:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10823:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10823:3:13"
																},
																"nativeSrc": "10823:17:13",
																"nodeType": "YulFunctionCall",
																"src": "10823:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10815:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10815:4:13"
																}
															]
														},
														{
															"nativeSrc": "10877:23:13",
															"nodeType": "YulAssignment",
															"src": "10877:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10889:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10889:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10895:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10895:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10885:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10885:3:13"
																},
																"nativeSrc": "10885:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10885:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10877:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10877:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "10596:311:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10662:6:13",
														"nodeType": "YulTypedName",
														"src": "10662:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10673:4:13",
														"nodeType": "YulTypedName",
														"src": "10673:4:13",
														"type": ""
													}
												],
												"src": "10596:311:13"
											},
											{
												"body": {
													"nativeSrc": "11032:608:13",
													"nodeType": "YulBlock",
													"src": "11032:608:13",
													"statements": [
														{
															"nativeSrc": "11042:90:13",
															"nodeType": "YulAssignment",
															"src": "11042:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11124:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11124:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "11067:56:13",
																			"nodeType": "YulIdentifier",
																			"src": "11067:56:13"
																		},
																		"nativeSrc": "11067:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11067:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "11051:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "11051:15:13"
																},
																"nativeSrc": "11051:81:13",
																"nodeType": "YulFunctionCall",
																"src": "11051:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11042:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11042:5:13"
																}
															]
														},
														{
															"nativeSrc": "11141:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11141:16:13",
															"value": {
																"name": "array",
																"nativeSrc": "11152:5:13",
																"nodeType": "YulIdentifier",
																"src": "11152:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "11145:3:13",
																	"nodeType": "YulTypedName",
																	"src": "11145:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11174:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11174:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11181:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11181:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11167:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11167:6:13"
																},
																"nativeSrc": "11167:21:13",
																"nodeType": "YulFunctionCall",
																"src": "11167:21:13"
															},
															"nativeSrc": "11167:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "11167:21:13"
														},
														{
															"nativeSrc": "11197:23:13",
															"nodeType": "YulAssignment",
															"src": "11197:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11208:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11208:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11215:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11215:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11204:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11204:3:13"
																},
																"nativeSrc": "11204:16:13",
																"nodeType": "YulFunctionCall",
																"src": "11204:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "11197:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11197:3:13"
																}
															]
														},
														{
															"nativeSrc": "11230:44:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11230:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11248:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11248:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11260:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11260:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11268:4:13",
																				"nodeType": "YulLiteral",
																				"src": "11268:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "11256:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11256:3:13"
																		},
																		"nativeSrc": "11256:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11256:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11244:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11244:3:13"
																},
																"nativeSrc": "11244:30:13",
																"nodeType": "YulFunctionCall",
																"src": "11244:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "11234:6:13",
																	"nodeType": "YulTypedName",
																	"src": "11234:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11302:103:13",
																"nodeType": "YulBlock",
																"src": "11302:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "11316:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11316:77:13"
																			},
																			"nativeSrc": "11316:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11316:79:13"
																		},
																		"nativeSrc": "11316:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11316:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "11289:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11289:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11297:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11297:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11286:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11286:2:13"
																},
																"nativeSrc": "11286:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11286:15:13"
															},
															"nativeSrc": "11283:122:13",
															"nodeType": "YulIf",
															"src": "11283:122:13"
														},
														{
															"body": {
																"nativeSrc": "11490:144:13",
																"nodeType": "YulBlock",
																"src": "11490:144:13",
																"statements": [
																	{
																		"nativeSrc": "11505:21:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11505:21:13",
																		"value": {
																			"name": "src",
																			"nativeSrc": "11523:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11523:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "11509:10:13",
																				"nodeType": "YulTypedName",
																				"src": "11509:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "11547:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11547:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "11573:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "11573:10:13"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "11585:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "11585:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "11552:20:13",
																						"nodeType": "YulIdentifier",
																						"src": "11552:20:13"
																					},
																					"nativeSrc": "11552:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "11552:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11540:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11540:6:13"
																			},
																			"nativeSrc": "11540:50:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11540:50:13"
																		},
																		"nativeSrc": "11540:50:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11540:50:13"
																	},
																	{
																		"nativeSrc": "11603:21:13",
																		"nodeType": "YulAssignment",
																		"src": "11603:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "11614:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11614:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11619:4:13",
																					"nodeType": "YulLiteral",
																					"src": "11619:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11610:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11610:3:13"
																			},
																			"nativeSrc": "11610:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11610:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "11603:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11603:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11443:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11443:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "11448:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11448:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11440:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11440:2:13"
																},
																"nativeSrc": "11440:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11440:15:13"
															},
															"nativeSrc": "11414:220:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11456:25:13",
																"nodeType": "YulBlock",
																"src": "11456:25:13",
																"statements": [
																	{
																		"nativeSrc": "11458:21:13",
																		"nodeType": "YulAssignment",
																		"src": "11458:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "11469:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11469:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11474:4:13",
																					"nodeType": "YulLiteral",
																					"src": "11474:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11465:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11465:3:13"
																			},
																			"nativeSrc": "11465:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11465:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "11458:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11458:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "11418:21:13",
																"nodeType": "YulBlock",
																"src": "11418:21:13",
																"statements": [
																	{
																		"nativeSrc": "11420:17:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11420:17:13",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "11431:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11431:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "11424:3:13",
																				"nodeType": "YulTypedName",
																				"src": "11424:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "11414:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "10930:710:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11002:6:13",
														"nodeType": "YulTypedName",
														"src": "11002:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11010:6:13",
														"nodeType": "YulTypedName",
														"src": "11010:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11018:3:13",
														"nodeType": "YulTypedName",
														"src": "11018:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11026:5:13",
														"nodeType": "YulTypedName",
														"src": "11026:5:13",
														"type": ""
													}
												],
												"src": "10930:710:13"
											},
											{
												"body": {
													"nativeSrc": "11740:293:13",
													"nodeType": "YulBlock",
													"src": "11740:293:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11789:83:13",
																"nodeType": "YulBlock",
																"src": "11789:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11791:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11791:77:13"
																			},
																			"nativeSrc": "11791:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11791:79:13"
																		},
																		"nativeSrc": "11791:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11791:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11768:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11768:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11776:4:13",
																						"nodeType": "YulLiteral",
																						"src": "11776:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11764:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11764:3:13"
																				},
																				"nativeSrc": "11764:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11764:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11783:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11783:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11760:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11760:3:13"
																		},
																		"nativeSrc": "11760:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11760:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11753:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11753:6:13"
																},
																"nativeSrc": "11753:35:13",
																"nodeType": "YulFunctionCall",
																"src": "11753:35:13"
															},
															"nativeSrc": "11750:122:13",
															"nodeType": "YulIf",
															"src": "11750:122:13"
														},
														{
															"nativeSrc": "11881:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11881:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11908:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11908:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11895:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "11895:12:13"
																},
																"nativeSrc": "11895:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11895:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11885:6:13",
																	"nodeType": "YulTypedName",
																	"src": "11885:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11924:103:13",
															"nodeType": "YulAssignment",
															"src": "11924:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12000:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12000:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12008:4:13",
																				"nodeType": "YulLiteral",
																				"src": "12008:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11996:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11996:3:13"
																		},
																		"nativeSrc": "11996:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11996:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12015:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12015:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12023:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12023:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "11933:62:13",
																	"nodeType": "YulIdentifier",
																	"src": "11933:62:13"
																},
																"nativeSrc": "11933:94:13",
																"nodeType": "YulFunctionCall",
																"src": "11933:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11924:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11924:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "11663:370:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11718:6:13",
														"nodeType": "YulTypedName",
														"src": "11718:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11726:3:13",
														"nodeType": "YulTypedName",
														"src": "11726:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11734:5:13",
														"nodeType": "YulTypedName",
														"src": "11734:5:13",
														"type": ""
													}
												],
												"src": "11663:370:13"
											},
											{
												"body": {
													"nativeSrc": "12172:761:13",
													"nodeType": "YulBlock",
													"src": "12172:761:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12218:83:13",
																"nodeType": "YulBlock",
																"src": "12218:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12220:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "12220:77:13"
																			},
																			"nativeSrc": "12220:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12220:79:13"
																		},
																		"nativeSrc": "12220:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12220:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12193:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12193:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12202:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12202:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12189:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12189:3:13"
																		},
																		"nativeSrc": "12189:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12189:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12214:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12214:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12185:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12185:3:13"
																},
																"nativeSrc": "12185:32:13",
																"nodeType": "YulFunctionCall",
																"src": "12185:32:13"
															},
															"nativeSrc": "12182:119:13",
															"nodeType": "YulIf",
															"src": "12182:119:13"
														},
														{
															"nativeSrc": "12311:302:13",
															"nodeType": "YulBlock",
															"src": "12311:302:13",
															"statements": [
																{
																	"nativeSrc": "12326:45:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12326:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12357:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12357:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12368:1:13",
																						"nodeType": "YulLiteral",
																						"src": "12368:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12353:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12353:3:13"
																				},
																				"nativeSrc": "12353:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12353:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12340:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "12340:12:13"
																		},
																		"nativeSrc": "12340:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12340:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12330:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12330:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12418:83:13",
																		"nodeType": "YulBlock",
																		"src": "12418:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12420:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "12420:77:13"
																					},
																					"nativeSrc": "12420:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12420:79:13"
																				},
																				"nativeSrc": "12420:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "12420:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12390:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12390:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12398:18:13",
																				"nodeType": "YulLiteral",
																				"src": "12398:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12387:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12387:2:13"
																		},
																		"nativeSrc": "12387:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12387:30:13"
																	},
																	"nativeSrc": "12384:117:13",
																	"nodeType": "YulIf",
																	"src": "12384:117:13"
																},
																{
																	"nativeSrc": "12515:88:13",
																	"nodeType": "YulAssignment",
																	"src": "12515:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12575:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12575:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12586:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12586:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12571:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12571:3:13"
																				},
																				"nativeSrc": "12571:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12571:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12595:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12595:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "12525:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "12525:45:13"
																		},
																		"nativeSrc": "12525:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12525:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12515:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12515:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12623:303:13",
															"nodeType": "YulBlock",
															"src": "12623:303:13",
															"statements": [
																{
																	"nativeSrc": "12638:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12638:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12669:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12669:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12680:2:13",
																						"nodeType": "YulLiteral",
																						"src": "12680:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12665:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12665:3:13"
																				},
																				"nativeSrc": "12665:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12665:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12652:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "12652:12:13"
																		},
																		"nativeSrc": "12652:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12652:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12642:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12642:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12731:83:13",
																		"nodeType": "YulBlock",
																		"src": "12731:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12733:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "12733:77:13"
																					},
																					"nativeSrc": "12733:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12733:79:13"
																				},
																				"nativeSrc": "12733:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "12733:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12703:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12703:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12711:18:13",
																				"nodeType": "YulLiteral",
																				"src": "12711:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12700:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12700:2:13"
																		},
																		"nativeSrc": "12700:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12700:30:13"
																	},
																	"nativeSrc": "12697:117:13",
																	"nodeType": "YulIf",
																	"src": "12697:117:13"
																},
																{
																	"nativeSrc": "12828:88:13",
																	"nodeType": "YulAssignment",
																	"src": "12828:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12888:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12888:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12899:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12899:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12884:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12884:3:13"
																				},
																				"nativeSrc": "12884:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12884:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12908:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12908:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "12838:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "12838:45:13"
																		},
																		"nativeSrc": "12838:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12838:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12828:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12828:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "12039:894:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12134:9:13",
														"nodeType": "YulTypedName",
														"src": "12134:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12145:7:13",
														"nodeType": "YulTypedName",
														"src": "12145:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12157:6:13",
														"nodeType": "YulTypedName",
														"src": "12157:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12165:6:13",
														"nodeType": "YulTypedName",
														"src": "12165:6:13",
														"type": ""
													}
												],
												"src": "12039:894:13"
											},
											{
												"body": {
													"nativeSrc": "13013:40:13",
													"nodeType": "YulBlock",
													"src": "13013:40:13",
													"statements": [
														{
															"nativeSrc": "13024:22:13",
															"nodeType": "YulAssignment",
															"src": "13024:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13040:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13040:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13034:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "13034:5:13"
																},
																"nativeSrc": "13034:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13034:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13024:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13024:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "12939:114:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12996:5:13",
														"nodeType": "YulTypedName",
														"src": "12996:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13006:6:13",
														"nodeType": "YulTypedName",
														"src": "13006:6:13",
														"type": ""
													}
												],
												"src": "12939:114:13"
											},
											{
												"body": {
													"nativeSrc": "13170:73:13",
													"nodeType": "YulBlock",
													"src": "13170:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13187:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13187:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13192:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13192:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13180:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13180:6:13"
																},
																"nativeSrc": "13180:19:13",
																"nodeType": "YulFunctionCall",
																"src": "13180:19:13"
															},
															"nativeSrc": "13180:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "13180:19:13"
														},
														{
															"nativeSrc": "13208:29:13",
															"nodeType": "YulAssignment",
															"src": "13208:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13227:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13227:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13232:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13232:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13223:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13223:3:13"
																},
																"nativeSrc": "13223:14:13",
																"nodeType": "YulFunctionCall",
																"src": "13223:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13208:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "13208:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "13059:184:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13142:3:13",
														"nodeType": "YulTypedName",
														"src": "13142:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13147:6:13",
														"nodeType": "YulTypedName",
														"src": "13147:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13158:11:13",
														"nodeType": "YulTypedName",
														"src": "13158:11:13",
														"type": ""
													}
												],
												"src": "13059:184:13"
											},
											{
												"body": {
													"nativeSrc": "13321:60:13",
													"nodeType": "YulBlock",
													"src": "13321:60:13",
													"statements": [
														{
															"nativeSrc": "13331:11:13",
															"nodeType": "YulAssignment",
															"src": "13331:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "13339:3:13",
																"nodeType": "YulIdentifier",
																"src": "13339:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13331:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13331:4:13"
																}
															]
														},
														{
															"nativeSrc": "13352:22:13",
															"nodeType": "YulAssignment",
															"src": "13352:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "13364:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13364:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13369:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13369:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13360:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13360:3:13"
																},
																"nativeSrc": "13360:14:13",
																"nodeType": "YulFunctionCall",
																"src": "13360:14:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13352:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13352:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "13249:132:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13308:3:13",
														"nodeType": "YulTypedName",
														"src": "13308:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "13316:4:13",
														"nodeType": "YulTypedName",
														"src": "13316:4:13",
														"type": ""
													}
												],
												"src": "13249:132:13"
											},
											{
												"body": {
													"nativeSrc": "13442:53:13",
													"nodeType": "YulBlock",
													"src": "13442:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13459:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13459:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13482:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "13482:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "13464:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "13464:17:13"
																		},
																		"nativeSrc": "13464:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13464:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13452:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13452:6:13"
																},
																"nativeSrc": "13452:37:13",
																"nodeType": "YulFunctionCall",
																"src": "13452:37:13"
															},
															"nativeSrc": "13452:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "13452:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "13387:108:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13430:5:13",
														"nodeType": "YulTypedName",
														"src": "13430:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13437:3:13",
														"nodeType": "YulTypedName",
														"src": "13437:3:13",
														"type": ""
													}
												],
												"src": "13387:108:13"
											},
											{
												"body": {
													"nativeSrc": "13581:99:13",
													"nodeType": "YulBlock",
													"src": "13581:99:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13625:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13625:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13633:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13633:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "13591:33:13",
																	"nodeType": "YulIdentifier",
																	"src": "13591:33:13"
																},
																"nativeSrc": "13591:46:13",
																"nodeType": "YulFunctionCall",
																"src": "13591:46:13"
															},
															"nativeSrc": "13591:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "13591:46:13"
														},
														{
															"nativeSrc": "13646:28:13",
															"nodeType": "YulAssignment",
															"src": "13646:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13664:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13664:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13669:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13669:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13660:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13660:3:13"
																},
																"nativeSrc": "13660:14:13",
																"nodeType": "YulFunctionCall",
																"src": "13660:14:13"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "13646:10:13",
																	"nodeType": "YulIdentifier",
																	"src": "13646:10:13"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "13501:179:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "13554:6:13",
														"nodeType": "YulTypedName",
														"src": "13554:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13562:3:13",
														"nodeType": "YulTypedName",
														"src": "13562:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "13570:10:13",
														"nodeType": "YulTypedName",
														"src": "13570:10:13",
														"type": ""
													}
												],
												"src": "13501:179:13"
											},
											{
												"body": {
													"nativeSrc": "13761:38:13",
													"nodeType": "YulBlock",
													"src": "13761:38:13",
													"statements": [
														{
															"nativeSrc": "13771:22:13",
															"nodeType": "YulAssignment",
															"src": "13771:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "13783:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13783:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13788:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13788:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13779:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13779:3:13"
																},
																"nativeSrc": "13779:14:13",
																"nodeType": "YulFunctionCall",
																"src": "13779:14:13"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "13771:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13771:4:13"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "13686:113:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13748:3:13",
														"nodeType": "YulTypedName",
														"src": "13748:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "13756:4:13",
														"nodeType": "YulTypedName",
														"src": "13756:4:13",
														"type": ""
													}
												],
												"src": "13686:113:13"
											},
											{
												"body": {
													"nativeSrc": "13959:608:13",
													"nodeType": "YulBlock",
													"src": "13959:608:13",
													"statements": [
														{
															"nativeSrc": "13969:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13969:68:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14031:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "14031:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "13983:47:13",
																	"nodeType": "YulIdentifier",
																	"src": "13983:47:13"
																},
																"nativeSrc": "13983:54:13",
																"nodeType": "YulFunctionCall",
																"src": "13983:54:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13973:6:13",
																	"nodeType": "YulTypedName",
																	"src": "13973:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14046:93:13",
															"nodeType": "YulAssignment",
															"src": "14046:93:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14127:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14127:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14132:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14132:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14053:73:13",
																	"nodeType": "YulIdentifier",
																	"src": "14053:73:13"
																},
																"nativeSrc": "14053:86:13",
																"nodeType": "YulFunctionCall",
																"src": "14053:86:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14046:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14046:3:13"
																}
															]
														},
														{
															"nativeSrc": "14148:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14148:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14213:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "14213:5:13"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "14163:49:13",
																	"nodeType": "YulIdentifier",
																	"src": "14163:49:13"
																},
																"nativeSrc": "14163:56:13",
																"nodeType": "YulFunctionCall",
																"src": "14163:56:13"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "14152:7:13",
																	"nodeType": "YulTypedName",
																	"src": "14152:7:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14228:21:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14228:21:13",
															"value": {
																"name": "baseRef",
																"nativeSrc": "14242:7:13",
																"nodeType": "YulIdentifier",
																"src": "14242:7:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "14232:6:13",
																	"nodeType": "YulTypedName",
																	"src": "14232:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14318:224:13",
																"nodeType": "YulBlock",
																"src": "14318:224:13",
																"statements": [
																	{
																		"nativeSrc": "14332:34:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14332:34:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "14359:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "14359:6:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "14353:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14353:5:13"
																			},
																			"nativeSrc": "14353:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14353:13:13"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "14336:13:13",
																				"nodeType": "YulTypedName",
																				"src": "14336:13:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "14379:70:13",
																		"nodeType": "YulAssignment",
																		"src": "14379:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "14430:13:13",
																					"nodeType": "YulIdentifier",
																					"src": "14430:13:13"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "14445:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14445:3:13"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "14386:43:13",
																				"nodeType": "YulIdentifier",
																				"src": "14386:43:13"
																			},
																			"nativeSrc": "14386:63:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14386:63:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "14379:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "14379:3:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14462:70:13",
																		"nodeType": "YulAssignment",
																		"src": "14462:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "14525:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "14525:6:13"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "14472:52:13",
																				"nodeType": "YulIdentifier",
																				"src": "14472:52:13"
																			},
																			"nativeSrc": "14472:60:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14472:60:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "14462:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14462:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "14280:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14280:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14283:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14283:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "14277:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "14277:2:13"
																},
																"nativeSrc": "14277:13:13",
																"nodeType": "YulFunctionCall",
																"src": "14277:13:13"
															},
															"nativeSrc": "14258:284:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "14291:18:13",
																"nodeType": "YulBlock",
																"src": "14291:18:13",
																"statements": [
																	{
																		"nativeSrc": "14293:14:13",
																		"nodeType": "YulAssignment",
																		"src": "14293:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "14302:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "14302:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14305:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14305:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14298:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "14298:3:13"
																			},
																			"nativeSrc": "14298:9:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14298:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "14293:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "14293:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "14262:14:13",
																"nodeType": "YulBlock",
																"src": "14262:14:13",
																"statements": [
																	{
																		"nativeSrc": "14264:10:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14264:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14273:1:13",
																			"nodeType": "YulLiteral",
																			"src": "14273:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "14268:1:13",
																				"nodeType": "YulTypedName",
																				"src": "14268:1:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "14258:284:13"
														},
														{
															"nativeSrc": "14551:10:13",
															"nodeType": "YulAssignment",
															"src": "14551:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "14558:3:13",
																"nodeType": "YulIdentifier",
																"src": "14558:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14551:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14551:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "13835:732:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13938:5:13",
														"nodeType": "YulTypedName",
														"src": "13938:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13945:3:13",
														"nodeType": "YulTypedName",
														"src": "13945:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13954:3:13",
														"nodeType": "YulTypedName",
														"src": "13954:3:13",
														"type": ""
													}
												],
												"src": "13835:732:13"
											},
											{
												"body": {
													"nativeSrc": "14721:225:13",
													"nodeType": "YulBlock",
													"src": "14721:225:13",
													"statements": [
														{
															"nativeSrc": "14731:26:13",
															"nodeType": "YulAssignment",
															"src": "14731:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14743:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14743:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14754:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14754:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14739:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14739:3:13"
																},
																"nativeSrc": "14739:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14739:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14731:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14731:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14778:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14778:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14789:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14789:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14774:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14774:3:13"
																		},
																		"nativeSrc": "14774:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14774:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14797:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14797:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14803:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14803:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14793:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14793:3:13"
																		},
																		"nativeSrc": "14793:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14793:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14767:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14767:6:13"
																},
																"nativeSrc": "14767:47:13",
																"nodeType": "YulFunctionCall",
																"src": "14767:47:13"
															},
															"nativeSrc": "14767:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "14767:47:13"
														},
														{
															"nativeSrc": "14823:116:13",
															"nodeType": "YulAssignment",
															"src": "14823:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14925:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14925:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14934:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14934:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14831:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "14831:93:13"
																},
																"nativeSrc": "14831:108:13",
																"nodeType": "YulFunctionCall",
																"src": "14831:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14823:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14823:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "14573:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14693:9:13",
														"nodeType": "YulTypedName",
														"src": "14693:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14705:6:13",
														"nodeType": "YulTypedName",
														"src": "14705:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14716:4:13",
														"nodeType": "YulTypedName",
														"src": "14716:4:13",
														"type": ""
													}
												],
												"src": "14573:373:13"
											},
											{
												"body": {
													"nativeSrc": "15017:53:13",
													"nodeType": "YulBlock",
													"src": "15017:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15034:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15034:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15057:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "15057:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "15039:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "15039:17:13"
																		},
																		"nativeSrc": "15039:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15039:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15027:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15027:6:13"
																},
																"nativeSrc": "15027:37:13",
																"nodeType": "YulFunctionCall",
																"src": "15027:37:13"
															},
															"nativeSrc": "15027:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "15027:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "14952:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15005:5:13",
														"nodeType": "YulTypedName",
														"src": "15005:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15012:3:13",
														"nodeType": "YulTypedName",
														"src": "15012:3:13",
														"type": ""
													}
												],
												"src": "14952:118:13"
											},
											{
												"body": {
													"nativeSrc": "15174:124:13",
													"nodeType": "YulBlock",
													"src": "15174:124:13",
													"statements": [
														{
															"nativeSrc": "15184:26:13",
															"nodeType": "YulAssignment",
															"src": "15184:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15196:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15196:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15207:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15207:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15192:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15192:3:13"
																},
																"nativeSrc": "15192:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15192:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15184:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15184:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15264:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15264:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15277:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15277:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15288:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15288:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15273:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15273:3:13"
																		},
																		"nativeSrc": "15273:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15273:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15220:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "15220:43:13"
																},
																"nativeSrc": "15220:71:13",
																"nodeType": "YulFunctionCall",
																"src": "15220:71:13"
															},
															"nativeSrc": "15220:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "15220:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "15076:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15146:9:13",
														"nodeType": "YulTypedName",
														"src": "15146:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15158:6:13",
														"nodeType": "YulTypedName",
														"src": "15158:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15169:4:13",
														"nodeType": "YulTypedName",
														"src": "15169:4:13",
														"type": ""
													}
												],
												"src": "15076:222:13"
											},
											{
												"body": {
													"nativeSrc": "15344:76:13",
													"nodeType": "YulBlock",
													"src": "15344:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "15398:16:13",
																"nodeType": "YulBlock",
																"src": "15398:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15407:1:13",
																					"nodeType": "YulLiteral",
																					"src": "15407:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15410:1:13",
																					"nodeType": "YulLiteral",
																					"src": "15410:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15400:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15400:6:13"
																			},
																			"nativeSrc": "15400:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15400:12:13"
																		},
																		"nativeSrc": "15400:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15400:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15367:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "15367:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15389:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "15389:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "15374:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "15374:14:13"
																				},
																				"nativeSrc": "15374:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "15374:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15364:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "15364:2:13"
																		},
																		"nativeSrc": "15364:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15364:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15357:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15357:6:13"
																},
																"nativeSrc": "15357:40:13",
																"nodeType": "YulFunctionCall",
																"src": "15357:40:13"
															},
															"nativeSrc": "15354:60:13",
															"nodeType": "YulIf",
															"src": "15354:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "15304:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15337:5:13",
														"nodeType": "YulTypedName",
														"src": "15337:5:13",
														"type": ""
													}
												],
												"src": "15304:116:13"
											},
											{
												"body": {
													"nativeSrc": "15475:84:13",
													"nodeType": "YulBlock",
													"src": "15475:84:13",
													"statements": [
														{
															"nativeSrc": "15485:29:13",
															"nodeType": "YulAssignment",
															"src": "15485:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15507:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15507:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "15494:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "15494:12:13"
																},
																"nativeSrc": "15494:20:13",
																"nodeType": "YulFunctionCall",
																"src": "15494:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15485:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "15485:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15547:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15547:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "15523:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "15523:23:13"
																},
																"nativeSrc": "15523:30:13",
																"nodeType": "YulFunctionCall",
																"src": "15523:30:13"
															},
															"nativeSrc": "15523:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "15523:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "15426:133:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15453:6:13",
														"nodeType": "YulTypedName",
														"src": "15453:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15461:3:13",
														"nodeType": "YulTypedName",
														"src": "15461:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15469:5:13",
														"nodeType": "YulTypedName",
														"src": "15469:5:13",
														"type": ""
													}
												],
												"src": "15426:133:13"
											},
											{
												"body": {
													"nativeSrc": "15645:388:13",
													"nodeType": "YulBlock",
													"src": "15645:388:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "15691:83:13",
																"nodeType": "YulBlock",
																"src": "15691:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15693:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "15693:77:13"
																			},
																			"nativeSrc": "15693:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15693:79:13"
																		},
																		"nativeSrc": "15693:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15693:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15666:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "15666:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15675:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15675:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15662:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15662:3:13"
																		},
																		"nativeSrc": "15662:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15662:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15687:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15687:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15658:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15658:3:13"
																},
																"nativeSrc": "15658:32:13",
																"nodeType": "YulFunctionCall",
																"src": "15658:32:13"
															},
															"nativeSrc": "15655:119:13",
															"nodeType": "YulIf",
															"src": "15655:119:13"
														},
														{
															"nativeSrc": "15784:117:13",
															"nodeType": "YulBlock",
															"src": "15784:117:13",
															"statements": [
																{
																	"nativeSrc": "15799:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15799:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15813:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15813:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15803:6:13",
																			"nodeType": "YulTypedName",
																			"src": "15803:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15828:63:13",
																	"nodeType": "YulAssignment",
																	"src": "15828:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15863:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "15863:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15874:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "15874:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15859:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "15859:3:13"
																				},
																				"nativeSrc": "15859:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "15859:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15883:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "15883:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "15838:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "15838:20:13"
																		},
																		"nativeSrc": "15838:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15838:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15828:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "15828:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15911:115:13",
															"nodeType": "YulBlock",
															"src": "15911:115:13",
															"statements": [
																{
																	"nativeSrc": "15926:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15926:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15940:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15940:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15930:6:13",
																			"nodeType": "YulTypedName",
																			"src": "15930:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15956:60:13",
																	"nodeType": "YulAssignment",
																	"src": "15956:60:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15988:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "15988:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15999:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "15999:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15984:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "15984:3:13"
																				},
																				"nativeSrc": "15984:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "15984:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16008:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16008:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "15966:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "15966:17:13"
																		},
																		"nativeSrc": "15966:50:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15966:50:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "15956:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "15956:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "15565:468:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15607:9:13",
														"nodeType": "YulTypedName",
														"src": "15607:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15618:7:13",
														"nodeType": "YulTypedName",
														"src": "15618:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15630:6:13",
														"nodeType": "YulTypedName",
														"src": "15630:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15638:6:13",
														"nodeType": "YulTypedName",
														"src": "15638:6:13",
														"type": ""
													}
												],
												"src": "15565:468:13"
											},
											{
												"body": {
													"nativeSrc": "16122:391:13",
													"nodeType": "YulBlock",
													"src": "16122:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "16168:83:13",
																"nodeType": "YulBlock",
																"src": "16168:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16170:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "16170:77:13"
																			},
																			"nativeSrc": "16170:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16170:79:13"
																		},
																		"nativeSrc": "16170:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16170:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16143:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16143:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16152:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16152:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16139:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16139:3:13"
																		},
																		"nativeSrc": "16139:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16139:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16164:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16164:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16135:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16135:3:13"
																},
																"nativeSrc": "16135:32:13",
																"nodeType": "YulFunctionCall",
																"src": "16135:32:13"
															},
															"nativeSrc": "16132:119:13",
															"nodeType": "YulIf",
															"src": "16132:119:13"
														},
														{
															"nativeSrc": "16261:117:13",
															"nodeType": "YulBlock",
															"src": "16261:117:13",
															"statements": [
																{
																	"nativeSrc": "16276:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16276:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16290:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16290:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16280:6:13",
																			"nodeType": "YulTypedName",
																			"src": "16280:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16305:63:13",
																	"nodeType": "YulAssignment",
																	"src": "16305:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16340:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "16340:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16351:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "16351:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16336:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "16336:3:13"
																				},
																				"nativeSrc": "16336:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16336:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16360:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16360:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16315:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "16315:20:13"
																		},
																		"nativeSrc": "16315:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16315:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16305:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "16305:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16388:118:13",
															"nodeType": "YulBlock",
															"src": "16388:118:13",
															"statements": [
																{
																	"nativeSrc": "16403:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16403:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16417:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16417:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16407:6:13",
																			"nodeType": "YulTypedName",
																			"src": "16407:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16433:63:13",
																	"nodeType": "YulAssignment",
																	"src": "16433:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16468:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "16468:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16479:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "16479:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16464:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "16464:3:13"
																				},
																				"nativeSrc": "16464:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16464:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16488:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16488:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16443:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "16443:20:13"
																		},
																		"nativeSrc": "16443:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16443:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16433:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "16433:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "16039:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16084:9:13",
														"nodeType": "YulTypedName",
														"src": "16084:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16095:7:13",
														"nodeType": "YulTypedName",
														"src": "16095:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16107:6:13",
														"nodeType": "YulTypedName",
														"src": "16107:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16115:6:13",
														"nodeType": "YulTypedName",
														"src": "16115:6:13",
														"type": ""
													}
												],
												"src": "16039:474:13"
											},
											{
												"body": {
													"nativeSrc": "16662:946:13",
													"nodeType": "YulBlock",
													"src": "16662:946:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "16709:83:13",
																"nodeType": "YulBlock",
																"src": "16709:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16711:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "16711:77:13"
																			},
																			"nativeSrc": "16711:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16711:79:13"
																		},
																		"nativeSrc": "16711:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16711:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16683:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16683:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16692:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16692:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16679:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16679:3:13"
																		},
																		"nativeSrc": "16679:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16679:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16704:3:13",
																		"nodeType": "YulLiteral",
																		"src": "16704:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16675:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16675:3:13"
																},
																"nativeSrc": "16675:33:13",
																"nodeType": "YulFunctionCall",
																"src": "16675:33:13"
															},
															"nativeSrc": "16672:120:13",
															"nodeType": "YulIf",
															"src": "16672:120:13"
														},
														{
															"nativeSrc": "16802:117:13",
															"nodeType": "YulBlock",
															"src": "16802:117:13",
															"statements": [
																{
																	"nativeSrc": "16817:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16817:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16831:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16831:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16821:6:13",
																			"nodeType": "YulTypedName",
																			"src": "16821:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16846:63:13",
																	"nodeType": "YulAssignment",
																	"src": "16846:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16881:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "16881:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16892:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "16892:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16877:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "16877:3:13"
																				},
																				"nativeSrc": "16877:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16877:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16901:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16901:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16856:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "16856:20:13"
																		},
																		"nativeSrc": "16856:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16856:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16846:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "16846:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16929:118:13",
															"nodeType": "YulBlock",
															"src": "16929:118:13",
															"statements": [
																{
																	"nativeSrc": "16944:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16944:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16958:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16958:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16948:6:13",
																			"nodeType": "YulTypedName",
																			"src": "16948:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16974:63:13",
																	"nodeType": "YulAssignment",
																	"src": "16974:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17009:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "17009:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17020:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17020:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17005:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17005:3:13"
																				},
																				"nativeSrc": "17005:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17005:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17029:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17029:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16984:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "16984:20:13"
																		},
																		"nativeSrc": "16984:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16984:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16974:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "16974:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17057:118:13",
															"nodeType": "YulBlock",
															"src": "17057:118:13",
															"statements": [
																{
																	"nativeSrc": "17072:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17072:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17086:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17086:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17076:6:13",
																			"nodeType": "YulTypedName",
																			"src": "17076:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17102:63:13",
																	"nodeType": "YulAssignment",
																	"src": "17102:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17137:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "17137:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17148:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17148:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17133:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17133:3:13"
																				},
																				"nativeSrc": "17133:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17133:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17157:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17157:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "17112:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "17112:20:13"
																		},
																		"nativeSrc": "17112:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17112:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "17102:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "17102:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17185:118:13",
															"nodeType": "YulBlock",
															"src": "17185:118:13",
															"statements": [
																{
																	"nativeSrc": "17200:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17200:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17214:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17214:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17204:6:13",
																			"nodeType": "YulTypedName",
																			"src": "17204:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17230:63:13",
																	"nodeType": "YulAssignment",
																	"src": "17230:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17265:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "17265:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17276:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17276:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17261:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17261:3:13"
																				},
																				"nativeSrc": "17261:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17261:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17285:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17285:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "17240:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "17240:20:13"
																		},
																		"nativeSrc": "17240:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17240:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "17230:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "17230:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17313:288:13",
															"nodeType": "YulBlock",
															"src": "17313:288:13",
															"statements": [
																{
																	"nativeSrc": "17328:47:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17328:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17359:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "17359:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17370:3:13",
																						"nodeType": "YulLiteral",
																						"src": "17370:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17355:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17355:3:13"
																				},
																				"nativeSrc": "17355:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17355:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "17342:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "17342:12:13"
																		},
																		"nativeSrc": "17342:33:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17342:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17332:6:13",
																			"nodeType": "YulTypedName",
																			"src": "17332:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "17422:83:13",
																		"nodeType": "YulBlock",
																		"src": "17422:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "17424:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "17424:77:13"
																					},
																					"nativeSrc": "17424:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "17424:79:13"
																				},
																				"nativeSrc": "17424:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "17424:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "17394:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17394:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17402:18:13",
																				"nodeType": "YulLiteral",
																				"src": "17402:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "17391:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "17391:2:13"
																		},
																		"nativeSrc": "17391:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17391:30:13"
																	},
																	"nativeSrc": "17388:117:13",
																	"nodeType": "YulIf",
																	"src": "17388:117:13"
																},
																{
																	"nativeSrc": "17519:72:13",
																	"nodeType": "YulAssignment",
																	"src": "17519:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17563:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "17563:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17574:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17574:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17559:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17559:3:13"
																				},
																				"nativeSrc": "17559:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17559:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17583:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17583:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "17529:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "17529:29:13"
																		},
																		"nativeSrc": "17529:62:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17529:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "17519:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "17519:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "16519:1089:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16600:9:13",
														"nodeType": "YulTypedName",
														"src": "16600:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16611:7:13",
														"nodeType": "YulTypedName",
														"src": "16611:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16623:6:13",
														"nodeType": "YulTypedName",
														"src": "16623:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16631:6:13",
														"nodeType": "YulTypedName",
														"src": "16631:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16639:6:13",
														"nodeType": "YulTypedName",
														"src": "16639:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16647:6:13",
														"nodeType": "YulTypedName",
														"src": "16647:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "16655:6:13",
														"nodeType": "YulTypedName",
														"src": "16655:6:13",
														"type": ""
													}
												],
												"src": "16519:1089:13"
											},
											{
												"body": {
													"nativeSrc": "17680:263:13",
													"nodeType": "YulBlock",
													"src": "17680:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "17726:83:13",
																"nodeType": "YulBlock",
																"src": "17726:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17728:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "17728:77:13"
																			},
																			"nativeSrc": "17728:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17728:79:13"
																		},
																		"nativeSrc": "17728:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17728:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17701:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17701:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17710:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17710:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17697:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17697:3:13"
																		},
																		"nativeSrc": "17697:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17697:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17722:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17722:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17693:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17693:3:13"
																},
																"nativeSrc": "17693:32:13",
																"nodeType": "YulFunctionCall",
																"src": "17693:32:13"
															},
															"nativeSrc": "17690:119:13",
															"nodeType": "YulIf",
															"src": "17690:119:13"
														},
														{
															"nativeSrc": "17819:117:13",
															"nodeType": "YulBlock",
															"src": "17819:117:13",
															"statements": [
																{
																	"nativeSrc": "17834:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17834:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17848:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17848:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17838:6:13",
																			"nodeType": "YulTypedName",
																			"src": "17838:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17863:63:13",
																	"nodeType": "YulAssignment",
																	"src": "17863:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17898:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "17898:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17909:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17909:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17894:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17894:3:13"
																				},
																				"nativeSrc": "17894:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17894:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17918:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17918:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17873:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "17873:20:13"
																		},
																		"nativeSrc": "17873:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17873:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17863:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "17863:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "17614:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17650:9:13",
														"nodeType": "YulTypedName",
														"src": "17650:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17661:7:13",
														"nodeType": "YulTypedName",
														"src": "17661:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17673:6:13",
														"nodeType": "YulTypedName",
														"src": "17673:6:13",
														"type": ""
													}
												],
												"src": "17614:329:13"
											},
											{
												"body": {
													"nativeSrc": "17977:152:13",
													"nodeType": "YulBlock",
													"src": "17977:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17994:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17994:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17997:77:13",
																		"nodeType": "YulLiteral",
																		"src": "17997:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17987:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17987:6:13"
																},
																"nativeSrc": "17987:88:13",
																"nodeType": "YulFunctionCall",
																"src": "17987:88:13"
															},
															"nativeSrc": "17987:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "17987:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18091:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18091:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18094:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18094:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18084:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18084:6:13"
																},
																"nativeSrc": "18084:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18084:15:13"
															},
															"nativeSrc": "18084:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "18084:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18115:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18115:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18118:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18118:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18108:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18108:6:13"
																},
																"nativeSrc": "18108:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18108:15:13"
															},
															"nativeSrc": "18108:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "18108:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "17949:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "17949:180:13"
											},
											{
												"body": {
													"nativeSrc": "18186:269:13",
													"nodeType": "YulBlock",
													"src": "18186:269:13",
													"statements": [
														{
															"nativeSrc": "18196:22:13",
															"nodeType": "YulAssignment",
															"src": "18196:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18210:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18210:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18216:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18216:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18206:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18206:3:13"
																},
																"nativeSrc": "18206:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18206:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18196:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18196:6:13"
																}
															]
														},
														{
															"nativeSrc": "18227:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18227:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18257:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18257:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18263:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18263:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18253:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18253:3:13"
																},
																"nativeSrc": "18253:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18253:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "18231:18:13",
																	"nodeType": "YulTypedName",
																	"src": "18231:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18304:51:13",
																"nodeType": "YulBlock",
																"src": "18304:51:13",
																"statements": [
																	{
																		"nativeSrc": "18318:27:13",
																		"nodeType": "YulAssignment",
																		"src": "18318:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "18332:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "18332:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18340:4:13",
																					"nodeType": "YulLiteral",
																					"src": "18340:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "18328:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "18328:3:13"
																			},
																			"nativeSrc": "18328:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18328:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "18318:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18318:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "18284:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "18284:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18277:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18277:6:13"
																},
																"nativeSrc": "18277:26:13",
																"nodeType": "YulFunctionCall",
																"src": "18277:26:13"
															},
															"nativeSrc": "18274:81:13",
															"nodeType": "YulIf",
															"src": "18274:81:13"
														},
														{
															"body": {
																"nativeSrc": "18407:42:13",
																"nodeType": "YulBlock",
																"src": "18407:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "18421:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "18421:16:13"
																			},
																			"nativeSrc": "18421:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18421:18:13"
																		},
																		"nativeSrc": "18421:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18421:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "18371:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "18371:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "18394:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18394:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18402:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18402:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "18391:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "18391:2:13"
																		},
																		"nativeSrc": "18391:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18391:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "18368:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "18368:2:13"
																},
																"nativeSrc": "18368:38:13",
																"nodeType": "YulFunctionCall",
																"src": "18368:38:13"
															},
															"nativeSrc": "18365:84:13",
															"nodeType": "YulIf",
															"src": "18365:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "18135:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18170:4:13",
														"nodeType": "YulTypedName",
														"src": "18170:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18179:6:13",
														"nodeType": "YulTypedName",
														"src": "18179:6:13",
														"type": ""
													}
												],
												"src": "18135:320:13"
											},
											{
												"body": {
													"nativeSrc": "18567:67:13",
													"nodeType": "YulBlock",
													"src": "18567:67:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18589:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18597:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18597:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18585:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18585:3:13"
																		},
																		"nativeSrc": "18585:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18585:14:13"
																	},
																	{
																		"hexValue": "546f6b656e20494420646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "18601:25:13",
																		"nodeType": "YulLiteral",
																		"src": "18601:25:13",
																		"type": "",
																		"value": "Token ID does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18578:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18578:6:13"
																},
																"nativeSrc": "18578:49:13",
																"nodeType": "YulFunctionCall",
																"src": "18578:49:13"
															},
															"nativeSrc": "18578:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "18578:49:13"
														}
													]
												},
												"name": "store_literal_in_memory_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f",
												"nativeSrc": "18461:173:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18559:6:13",
														"nodeType": "YulTypedName",
														"src": "18559:6:13",
														"type": ""
													}
												],
												"src": "18461:173:13"
											},
											{
												"body": {
													"nativeSrc": "18786:220:13",
													"nodeType": "YulBlock",
													"src": "18786:220:13",
													"statements": [
														{
															"nativeSrc": "18796:74:13",
															"nodeType": "YulAssignment",
															"src": "18796:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18862:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18862:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18867:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18867:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18803:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "18803:58:13"
																},
																"nativeSrc": "18803:67:13",
																"nodeType": "YulFunctionCall",
																"src": "18803:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18796:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18796:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18968:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18968:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f",
																	"nativeSrc": "18879:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "18879:88:13"
																},
																"nativeSrc": "18879:93:13",
																"nodeType": "YulFunctionCall",
																"src": "18879:93:13"
															},
															"nativeSrc": "18879:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "18879:93:13"
														},
														{
															"nativeSrc": "18981:19:13",
															"nodeType": "YulAssignment",
															"src": "18981:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18992:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18992:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18997:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18997:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18988:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18988:3:13"
																},
																"nativeSrc": "18988:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18988:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18981:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18981:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18640:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18774:3:13",
														"nodeType": "YulTypedName",
														"src": "18774:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18782:3:13",
														"nodeType": "YulTypedName",
														"src": "18782:3:13",
														"type": ""
													}
												],
												"src": "18640:366:13"
											},
											{
												"body": {
													"nativeSrc": "19183:248:13",
													"nodeType": "YulBlock",
													"src": "19183:248:13",
													"statements": [
														{
															"nativeSrc": "19193:26:13",
															"nodeType": "YulAssignment",
															"src": "19193:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19205:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19205:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19216:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19216:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19201:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19201:3:13"
																},
																"nativeSrc": "19201:18:13",
																"nodeType": "YulFunctionCall",
																"src": "19201:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19193:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19193:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19240:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19240:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19251:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19251:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19236:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19236:3:13"
																		},
																		"nativeSrc": "19236:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19236:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19259:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "19259:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19265:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19265:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19255:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19255:3:13"
																		},
																		"nativeSrc": "19255:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19255:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19229:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19229:6:13"
																},
																"nativeSrc": "19229:47:13",
																"nodeType": "YulFunctionCall",
																"src": "19229:47:13"
															},
															"nativeSrc": "19229:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "19229:47:13"
														},
														{
															"nativeSrc": "19285:139:13",
															"nodeType": "YulAssignment",
															"src": "19285:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19419:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "19419:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19293:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "19293:124:13"
																},
																"nativeSrc": "19293:131:13",
																"nodeType": "YulFunctionCall",
																"src": "19293:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19285:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19285:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19012:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19163:9:13",
														"nodeType": "YulTypedName",
														"src": "19163:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19178:4:13",
														"nodeType": "YulTypedName",
														"src": "19178:4:13",
														"type": ""
													}
												],
												"src": "19012:419:13"
											},
											{
												"body": {
													"nativeSrc": "19465:152:13",
													"nodeType": "YulBlock",
													"src": "19465:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19482:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19482:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19485:77:13",
																		"nodeType": "YulLiteral",
																		"src": "19485:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19475:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19475:6:13"
																},
																"nativeSrc": "19475:88:13",
																"nodeType": "YulFunctionCall",
																"src": "19475:88:13"
															},
															"nativeSrc": "19475:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "19475:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19579:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19579:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19582:4:13",
																		"nodeType": "YulLiteral",
																		"src": "19582:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19572:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19572:6:13"
																},
																"nativeSrc": "19572:15:13",
																"nodeType": "YulFunctionCall",
																"src": "19572:15:13"
															},
															"nativeSrc": "19572:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "19572:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19603:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19603:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19606:4:13",
																		"nodeType": "YulLiteral",
																		"src": "19606:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19596:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19596:6:13"
																},
																"nativeSrc": "19596:15:13",
																"nodeType": "YulFunctionCall",
																"src": "19596:15:13"
															},
															"nativeSrc": "19596:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "19596:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "19437:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "19437:180:13"
											},
											{
												"body": {
													"nativeSrc": "19667:147:13",
													"nodeType": "YulBlock",
													"src": "19667:147:13",
													"statements": [
														{
															"nativeSrc": "19677:25:13",
															"nodeType": "YulAssignment",
															"src": "19677:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19700:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "19700:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19682:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "19682:17:13"
																},
																"nativeSrc": "19682:20:13",
																"nodeType": "YulFunctionCall",
																"src": "19682:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19677:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "19677:1:13"
																}
															]
														},
														{
															"nativeSrc": "19711:25:13",
															"nodeType": "YulAssignment",
															"src": "19711:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19734:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "19734:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19716:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "19716:17:13"
																},
																"nativeSrc": "19716:20:13",
																"nodeType": "YulFunctionCall",
																"src": "19716:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19711:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "19711:1:13"
																}
															]
														},
														{
															"nativeSrc": "19745:16:13",
															"nodeType": "YulAssignment",
															"src": "19745:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19756:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "19756:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19759:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "19759:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19752:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19752:3:13"
																},
																"nativeSrc": "19752:9:13",
																"nodeType": "YulFunctionCall",
																"src": "19752:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "19745:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19745:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19785:22:13",
																"nodeType": "YulBlock",
																"src": "19785:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19787:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "19787:16:13"
																			},
																			"nativeSrc": "19787:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19787:18:13"
																		},
																		"nativeSrc": "19787:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "19787:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19777:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "19777:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "19780:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19780:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19774:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "19774:2:13"
																},
																"nativeSrc": "19774:10:13",
																"nodeType": "YulFunctionCall",
																"src": "19774:10:13"
															},
															"nativeSrc": "19771:36:13",
															"nodeType": "YulIf",
															"src": "19771:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "19623:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19654:1:13",
														"nodeType": "YulTypedName",
														"src": "19654:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19657:1:13",
														"nodeType": "YulTypedName",
														"src": "19657:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "19663:3:13",
														"nodeType": "YulTypedName",
														"src": "19663:3:13",
														"type": ""
													}
												],
												"src": "19623:191:13"
											},
											{
												"body": {
													"nativeSrc": "19863:190:13",
													"nodeType": "YulBlock",
													"src": "19863:190:13",
													"statements": [
														{
															"nativeSrc": "19873:33:13",
															"nodeType": "YulAssignment",
															"src": "19873:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19900:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19900:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19882:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "19882:17:13"
																},
																"nativeSrc": "19882:24:13",
																"nodeType": "YulFunctionCall",
																"src": "19882:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19873:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "19873:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19996:22:13",
																"nodeType": "YulBlock",
																"src": "19996:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19998:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "19998:16:13"
																			},
																			"nativeSrc": "19998:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19998:18:13"
																		},
																		"nativeSrc": "19998:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "19998:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19921:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19921:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19928:66:13",
																		"nodeType": "YulLiteral",
																		"src": "19928:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "19918:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "19918:2:13"
																},
																"nativeSrc": "19918:77:13",
																"nodeType": "YulFunctionCall",
																"src": "19918:77:13"
															},
															"nativeSrc": "19915:103:13",
															"nodeType": "YulIf",
															"src": "19915:103:13"
														},
														{
															"nativeSrc": "20027:20:13",
															"nodeType": "YulAssignment",
															"src": "20027:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20038:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "20038:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20045:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20045:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20034:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20034:3:13"
																},
																"nativeSrc": "20034:13:13",
																"nodeType": "YulFunctionCall",
																"src": "20034:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "20027:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20027:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "19820:233:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19849:5:13",
														"nodeType": "YulTypedName",
														"src": "19849:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19859:3:13",
														"nodeType": "YulTypedName",
														"src": "19859:3:13",
														"type": ""
													}
												],
												"src": "19820:233:13"
											},
											{
												"body": {
													"nativeSrc": "20185:206:13",
													"nodeType": "YulBlock",
													"src": "20185:206:13",
													"statements": [
														{
															"nativeSrc": "20195:26:13",
															"nodeType": "YulAssignment",
															"src": "20195:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20207:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20207:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20218:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20218:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20203:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20203:3:13"
																},
																"nativeSrc": "20203:18:13",
																"nodeType": "YulFunctionCall",
																"src": "20203:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20195:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20195:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20275:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20275:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20288:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20288:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20299:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20299:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20284:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20284:3:13"
																		},
																		"nativeSrc": "20284:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20284:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20231:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "20231:43:13"
																},
																"nativeSrc": "20231:71:13",
																"nodeType": "YulFunctionCall",
																"src": "20231:71:13"
															},
															"nativeSrc": "20231:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "20231:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20356:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20356:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20369:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20369:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20380:2:13",
																				"nodeType": "YulLiteral",
																				"src": "20380:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20365:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20365:3:13"
																		},
																		"nativeSrc": "20365:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20365:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20312:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "20312:43:13"
																},
																"nativeSrc": "20312:72:13",
																"nodeType": "YulFunctionCall",
																"src": "20312:72:13"
															},
															"nativeSrc": "20312:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "20312:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "20059:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20149:9:13",
														"nodeType": "YulTypedName",
														"src": "20149:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20161:6:13",
														"nodeType": "YulTypedName",
														"src": "20161:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20169:6:13",
														"nodeType": "YulTypedName",
														"src": "20169:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20180:4:13",
														"nodeType": "YulTypedName",
														"src": "20180:4:13",
														"type": ""
													}
												],
												"src": "20059:332:13"
											},
											{
												"body": {
													"nativeSrc": "20523:206:13",
													"nodeType": "YulBlock",
													"src": "20523:206:13",
													"statements": [
														{
															"nativeSrc": "20533:26:13",
															"nodeType": "YulAssignment",
															"src": "20533:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20545:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20545:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20556:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20556:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20541:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20541:3:13"
																},
																"nativeSrc": "20541:18:13",
																"nodeType": "YulFunctionCall",
																"src": "20541:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20533:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20533:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20613:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20613:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20626:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20626:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20637:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20637:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20622:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20622:3:13"
																		},
																		"nativeSrc": "20622:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20622:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20569:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "20569:43:13"
																},
																"nativeSrc": "20569:71:13",
																"nodeType": "YulFunctionCall",
																"src": "20569:71:13"
															},
															"nativeSrc": "20569:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "20569:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20694:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20694:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20707:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20707:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20718:2:13",
																				"nodeType": "YulLiteral",
																				"src": "20718:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20703:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20703:3:13"
																		},
																		"nativeSrc": "20703:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20703:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20650:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "20650:43:13"
																},
																"nativeSrc": "20650:72:13",
																"nodeType": "YulFunctionCall",
																"src": "20650:72:13"
															},
															"nativeSrc": "20650:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "20650:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20397:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20487:9:13",
														"nodeType": "YulTypedName",
														"src": "20487:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20499:6:13",
														"nodeType": "YulTypedName",
														"src": "20499:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20507:6:13",
														"nodeType": "YulTypedName",
														"src": "20507:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20518:4:13",
														"nodeType": "YulTypedName",
														"src": "20518:4:13",
														"type": ""
													}
												],
												"src": "20397:332:13"
											},
											{
												"body": {
													"nativeSrc": "20763:152:13",
													"nodeType": "YulBlock",
													"src": "20763:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20780:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20780:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20783:77:13",
																		"nodeType": "YulLiteral",
																		"src": "20783:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20773:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20773:6:13"
																},
																"nativeSrc": "20773:88:13",
																"nodeType": "YulFunctionCall",
																"src": "20773:88:13"
															},
															"nativeSrc": "20773:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "20773:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20877:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20877:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20880:4:13",
																		"nodeType": "YulLiteral",
																		"src": "20880:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20870:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20870:6:13"
																},
																"nativeSrc": "20870:15:13",
																"nodeType": "YulFunctionCall",
																"src": "20870:15:13"
															},
															"nativeSrc": "20870:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "20870:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20901:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20901:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20904:4:13",
																		"nodeType": "YulLiteral",
																		"src": "20904:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20894:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20894:6:13"
																},
																"nativeSrc": "20894:15:13",
																"nodeType": "YulFunctionCall",
																"src": "20894:15:13"
															},
															"nativeSrc": "20894:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "20894:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "20735:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "20735:180:13"
											},
											{
												"body": {
													"nativeSrc": "21027:72:13",
													"nodeType": "YulBlock",
													"src": "21027:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21049:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "21049:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21057:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21057:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21045:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21045:3:13"
																		},
																		"nativeSrc": "21045:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21045:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e636520746f206275726e",
																		"kind": "string",
																		"nativeSrc": "21061:30:13",
																		"nodeType": "YulLiteral",
																		"src": "21061:30:13",
																		"type": "",
																		"value": "Insufficient balance to burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21038:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21038:6:13"
																},
																"nativeSrc": "21038:54:13",
																"nodeType": "YulFunctionCall",
																"src": "21038:54:13"
															},
															"nativeSrc": "21038:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "21038:54:13"
														}
													]
												},
												"name": "store_literal_in_memory_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5",
												"nativeSrc": "20921:178:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21019:6:13",
														"nodeType": "YulTypedName",
														"src": "21019:6:13",
														"type": ""
													}
												],
												"src": "20921:178:13"
											},
											{
												"body": {
													"nativeSrc": "21251:220:13",
													"nodeType": "YulBlock",
													"src": "21251:220:13",
													"statements": [
														{
															"nativeSrc": "21261:74:13",
															"nodeType": "YulAssignment",
															"src": "21261:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21327:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21327:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21332:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21332:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21268:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "21268:58:13"
																},
																"nativeSrc": "21268:67:13",
																"nodeType": "YulFunctionCall",
																"src": "21268:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21261:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21261:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21433:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21433:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5",
																	"nativeSrc": "21344:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "21344:88:13"
																},
																"nativeSrc": "21344:93:13",
																"nodeType": "YulFunctionCall",
																"src": "21344:93:13"
															},
															"nativeSrc": "21344:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "21344:93:13"
														},
														{
															"nativeSrc": "21446:19:13",
															"nodeType": "YulAssignment",
															"src": "21446:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21457:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21457:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21462:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21462:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21453:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21453:3:13"
																},
																"nativeSrc": "21453:12:13",
																"nodeType": "YulFunctionCall",
																"src": "21453:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21446:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21446:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21105:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21239:3:13",
														"nodeType": "YulTypedName",
														"src": "21239:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21247:3:13",
														"nodeType": "YulTypedName",
														"src": "21247:3:13",
														"type": ""
													}
												],
												"src": "21105:366:13"
											},
											{
												"body": {
													"nativeSrc": "21648:248:13",
													"nodeType": "YulBlock",
													"src": "21648:248:13",
													"statements": [
														{
															"nativeSrc": "21658:26:13",
															"nodeType": "YulAssignment",
															"src": "21658:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21670:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21670:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21681:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21681:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21666:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21666:3:13"
																},
																"nativeSrc": "21666:18:13",
																"nodeType": "YulFunctionCall",
																"src": "21666:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21658:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21658:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21705:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21705:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21716:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21716:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21701:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21701:3:13"
																		},
																		"nativeSrc": "21701:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21701:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21724:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "21724:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21730:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21730:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21720:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21720:3:13"
																		},
																		"nativeSrc": "21720:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21720:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21694:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21694:6:13"
																},
																"nativeSrc": "21694:47:13",
																"nodeType": "YulFunctionCall",
																"src": "21694:47:13"
															},
															"nativeSrc": "21694:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "21694:47:13"
														},
														{
															"nativeSrc": "21750:139:13",
															"nodeType": "YulAssignment",
															"src": "21750:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21884:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "21884:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21758:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "21758:124:13"
																},
																"nativeSrc": "21758:131:13",
																"nodeType": "YulFunctionCall",
																"src": "21758:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21750:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21750:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21477:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21628:9:13",
														"nodeType": "YulTypedName",
														"src": "21628:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21643:4:13",
														"nodeType": "YulTypedName",
														"src": "21643:4:13",
														"type": ""
													}
												],
												"src": "21477:419:13"
											},
											{
												"body": {
													"nativeSrc": "21947:149:13",
													"nodeType": "YulBlock",
													"src": "21947:149:13",
													"statements": [
														{
															"nativeSrc": "21957:25:13",
															"nodeType": "YulAssignment",
															"src": "21957:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21980:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "21980:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21962:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "21962:17:13"
																},
																"nativeSrc": "21962:20:13",
																"nodeType": "YulFunctionCall",
																"src": "21962:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21957:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "21957:1:13"
																}
															]
														},
														{
															"nativeSrc": "21991:25:13",
															"nodeType": "YulAssignment",
															"src": "21991:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22014:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "22014:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21996:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "21996:17:13"
																},
																"nativeSrc": "21996:20:13",
																"nodeType": "YulFunctionCall",
																"src": "21996:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21991:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "21991:1:13"
																}
															]
														},
														{
															"nativeSrc": "22025:17:13",
															"nodeType": "YulAssignment",
															"src": "22025:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22037:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "22037:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "22040:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "22040:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "22033:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22033:3:13"
																},
																"nativeSrc": "22033:9:13",
																"nodeType": "YulFunctionCall",
																"src": "22033:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "22025:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22025:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22067:22:13",
																"nodeType": "YulBlock",
																"src": "22067:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "22069:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "22069:16:13"
																			},
																			"nativeSrc": "22069:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "22069:18:13"
																		},
																		"nativeSrc": "22069:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "22069:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "22058:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "22058:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "22064:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "22064:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22055:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "22055:2:13"
																},
																"nativeSrc": "22055:11:13",
																"nodeType": "YulFunctionCall",
																"src": "22055:11:13"
															},
															"nativeSrc": "22052:37:13",
															"nodeType": "YulIf",
															"src": "22052:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "21902:194:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21933:1:13",
														"nodeType": "YulTypedName",
														"src": "21933:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21936:1:13",
														"nodeType": "YulTypedName",
														"src": "21936:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "21942:4:13",
														"nodeType": "YulTypedName",
														"src": "21942:4:13",
														"type": ""
													}
												],
												"src": "21902:194:13"
											},
											{
												"body": {
													"nativeSrc": "22284:371:13",
													"nodeType": "YulBlock",
													"src": "22284:371:13",
													"statements": [
														{
															"nativeSrc": "22294:27:13",
															"nodeType": "YulAssignment",
															"src": "22294:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22306:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "22306:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22317:3:13",
																		"nodeType": "YulLiteral",
																		"src": "22317:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22302:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22302:3:13"
																},
																"nativeSrc": "22302:19:13",
																"nodeType": "YulFunctionCall",
																"src": "22302:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22294:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22294:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22375:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22375:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22388:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22388:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22399:1:13",
																				"nodeType": "YulLiteral",
																				"src": "22399:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22384:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22384:3:13"
																		},
																		"nativeSrc": "22384:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22384:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22331:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "22331:43:13"
																},
																"nativeSrc": "22331:71:13",
																"nodeType": "YulFunctionCall",
																"src": "22331:71:13"
															},
															"nativeSrc": "22331:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "22331:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22456:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22456:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22469:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22469:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22480:2:13",
																				"nodeType": "YulLiteral",
																				"src": "22480:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22465:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22465:3:13"
																		},
																		"nativeSrc": "22465:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22465:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22412:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "22412:43:13"
																},
																"nativeSrc": "22412:72:13",
																"nodeType": "YulFunctionCall",
																"src": "22412:72:13"
															},
															"nativeSrc": "22412:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "22412:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22538:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22538:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22551:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22551:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22562:2:13",
																				"nodeType": "YulLiteral",
																				"src": "22562:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22547:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22547:3:13"
																		},
																		"nativeSrc": "22547:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22547:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22494:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "22494:43:13"
																},
																"nativeSrc": "22494:72:13",
																"nodeType": "YulFunctionCall",
																"src": "22494:72:13"
															},
															"nativeSrc": "22494:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "22494:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "22620:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22620:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22633:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22633:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22644:2:13",
																				"nodeType": "YulLiteral",
																				"src": "22644:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22629:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22629:3:13"
																		},
																		"nativeSrc": "22629:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22629:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22576:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "22576:43:13"
																},
																"nativeSrc": "22576:72:13",
																"nodeType": "YulFunctionCall",
																"src": "22576:72:13"
															},
															"nativeSrc": "22576:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "22576:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "22102:553:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22232:9:13",
														"nodeType": "YulTypedName",
														"src": "22232:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "22244:6:13",
														"nodeType": "YulTypedName",
														"src": "22244:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22252:6:13",
														"nodeType": "YulTypedName",
														"src": "22252:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22260:6:13",
														"nodeType": "YulTypedName",
														"src": "22260:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22268:6:13",
														"nodeType": "YulTypedName",
														"src": "22268:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22279:4:13",
														"nodeType": "YulTypedName",
														"src": "22279:4:13",
														"type": ""
													}
												],
												"src": "22102:553:13"
											},
											{
												"body": {
													"nativeSrc": "22887:408:13",
													"nodeType": "YulBlock",
													"src": "22887:408:13",
													"statements": [
														{
															"nativeSrc": "22897:26:13",
															"nodeType": "YulAssignment",
															"src": "22897:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22909:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "22909:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22920:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22920:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22905:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22905:3:13"
																},
																"nativeSrc": "22905:18:13",
																"nodeType": "YulFunctionCall",
																"src": "22905:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22897:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22897:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22944:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22944:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22955:1:13",
																				"nodeType": "YulLiteral",
																				"src": "22955:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22940:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22940:3:13"
																		},
																		"nativeSrc": "22940:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22940:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22963:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "22963:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22969:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22969:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22959:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22959:3:13"
																		},
																		"nativeSrc": "22959:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22959:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22933:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22933:6:13"
																},
																"nativeSrc": "22933:47:13",
																"nodeType": "YulFunctionCall",
																"src": "22933:47:13"
															},
															"nativeSrc": "22933:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "22933:47:13"
														},
														{
															"nativeSrc": "22989:116:13",
															"nodeType": "YulAssignment",
															"src": "22989:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23091:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23091:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "23100:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23100:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "22997:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "22997:93:13"
																},
																"nativeSrc": "22997:108:13",
																"nodeType": "YulFunctionCall",
																"src": "22997:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22989:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22989:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23126:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23126:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23137:2:13",
																				"nodeType": "YulLiteral",
																				"src": "23137:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23122:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23122:3:13"
																		},
																		"nativeSrc": "23122:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23122:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23146:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "23146:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23152:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23152:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23142:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23142:3:13"
																		},
																		"nativeSrc": "23142:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23142:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23115:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23115:6:13"
																},
																"nativeSrc": "23115:48:13",
																"nodeType": "YulFunctionCall",
																"src": "23115:48:13"
															},
															"nativeSrc": "23115:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "23115:48:13"
														},
														{
															"nativeSrc": "23172:116:13",
															"nodeType": "YulAssignment",
															"src": "23172:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23274:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23274:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "23283:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23283:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "23180:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "23180:93:13"
																},
																"nativeSrc": "23180:108:13",
																"nodeType": "YulFunctionCall",
																"src": "23180:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23172:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23172:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "22661:634:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22851:9:13",
														"nodeType": "YulTypedName",
														"src": "22851:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22863:6:13",
														"nodeType": "YulTypedName",
														"src": "22863:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22871:6:13",
														"nodeType": "YulTypedName",
														"src": "22871:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22882:4:13",
														"nodeType": "YulTypedName",
														"src": "22882:4:13",
														"type": ""
													}
												],
												"src": "22661:634:13"
											},
											{
												"body": {
													"nativeSrc": "23359:40:13",
													"nodeType": "YulBlock",
													"src": "23359:40:13",
													"statements": [
														{
															"nativeSrc": "23370:22:13",
															"nodeType": "YulAssignment",
															"src": "23370:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23386:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "23386:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23380:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "23380:5:13"
																},
																"nativeSrc": "23380:12:13",
																"nodeType": "YulFunctionCall",
																"src": "23380:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "23370:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23370:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "23301:98:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23342:5:13",
														"nodeType": "YulTypedName",
														"src": "23342:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "23352:6:13",
														"nodeType": "YulTypedName",
														"src": "23352:6:13",
														"type": ""
													}
												],
												"src": "23301:98:13"
											},
											{
												"body": {
													"nativeSrc": "23500:73:13",
													"nodeType": "YulBlock",
													"src": "23500:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23517:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23517:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23522:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23522:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23510:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23510:6:13"
																},
																"nativeSrc": "23510:19:13",
																"nodeType": "YulFunctionCall",
																"src": "23510:19:13"
															},
															"nativeSrc": "23510:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "23510:19:13"
														},
														{
															"nativeSrc": "23538:29:13",
															"nodeType": "YulAssignment",
															"src": "23538:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23557:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23557:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23562:4:13",
																		"nodeType": "YulLiteral",
																		"src": "23562:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23553:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23553:3:13"
																},
																"nativeSrc": "23553:14:13",
																"nodeType": "YulFunctionCall",
																"src": "23553:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "23538:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "23538:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "23405:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23472:3:13",
														"nodeType": "YulTypedName",
														"src": "23472:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "23477:6:13",
														"nodeType": "YulTypedName",
														"src": "23477:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "23488:11:13",
														"nodeType": "YulTypedName",
														"src": "23488:11:13",
														"type": ""
													}
												],
												"src": "23405:168:13"
											},
											{
												"body": {
													"nativeSrc": "23669:283:13",
													"nodeType": "YulBlock",
													"src": "23669:283:13",
													"statements": [
														{
															"nativeSrc": "23679:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "23679:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23725:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "23725:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "23693:31:13",
																	"nodeType": "YulIdentifier",
																	"src": "23693:31:13"
																},
																"nativeSrc": "23693:38:13",
																"nodeType": "YulFunctionCall",
																"src": "23693:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "23683:6:13",
																	"nodeType": "YulTypedName",
																	"src": "23683:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23740:77:13",
															"nodeType": "YulAssignment",
															"src": "23740:77:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23805:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23805:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23810:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23810:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "23747:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "23747:57:13"
																},
																"nativeSrc": "23747:70:13",
																"nodeType": "YulFunctionCall",
																"src": "23747:70:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23740:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23740:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "23865:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "23865:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23872:4:13",
																				"nodeType": "YulLiteral",
																				"src": "23872:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23861:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23861:3:13"
																		},
																		"nativeSrc": "23861:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23861:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "23879:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23879:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23884:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23884:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "23826:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "23826:34:13"
																},
																"nativeSrc": "23826:65:13",
																"nodeType": "YulFunctionCall",
																"src": "23826:65:13"
															},
															"nativeSrc": "23826:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "23826:65:13"
														},
														{
															"nativeSrc": "23900:46:13",
															"nodeType": "YulAssignment",
															"src": "23900:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23911:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23911:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "23938:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "23938:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "23916:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "23916:21:13"
																		},
																		"nativeSrc": "23916:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23916:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23907:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23907:3:13"
																},
																"nativeSrc": "23907:39:13",
																"nodeType": "YulFunctionCall",
																"src": "23907:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23900:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23900:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "23579:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23650:5:13",
														"nodeType": "YulTypedName",
														"src": "23650:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "23657:3:13",
														"nodeType": "YulTypedName",
														"src": "23657:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23665:3:13",
														"nodeType": "YulTypedName",
														"src": "23665:3:13",
														"type": ""
													}
												],
												"src": "23579:373:13"
											},
											{
												"body": {
													"nativeSrc": "24186:523:13",
													"nodeType": "YulBlock",
													"src": "24186:523:13",
													"statements": [
														{
															"nativeSrc": "24196:27:13",
															"nodeType": "YulAssignment",
															"src": "24196:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24208:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "24208:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24219:3:13",
																		"nodeType": "YulLiteral",
																		"src": "24219:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24204:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "24204:3:13"
																},
																"nativeSrc": "24204:19:13",
																"nodeType": "YulFunctionCall",
																"src": "24204:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24196:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "24196:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24277:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24277:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24290:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24290:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24301:1:13",
																				"nodeType": "YulLiteral",
																				"src": "24301:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24286:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24286:3:13"
																		},
																		"nativeSrc": "24286:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24286:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24233:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24233:43:13"
																},
																"nativeSrc": "24233:71:13",
																"nodeType": "YulFunctionCall",
																"src": "24233:71:13"
															},
															"nativeSrc": "24233:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "24233:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24358:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24358:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24371:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24371:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24382:2:13",
																				"nodeType": "YulLiteral",
																				"src": "24382:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24367:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24367:3:13"
																		},
																		"nativeSrc": "24367:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24367:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24314:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24314:43:13"
																},
																"nativeSrc": "24314:72:13",
																"nodeType": "YulFunctionCall",
																"src": "24314:72:13"
															},
															"nativeSrc": "24314:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "24314:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "24440:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24440:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24453:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24453:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24464:2:13",
																				"nodeType": "YulLiteral",
																				"src": "24464:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24449:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24449:3:13"
																		},
																		"nativeSrc": "24449:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24449:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24396:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24396:43:13"
																},
																"nativeSrc": "24396:72:13",
																"nodeType": "YulFunctionCall",
																"src": "24396:72:13"
															},
															"nativeSrc": "24396:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "24396:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "24522:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24522:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24535:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24535:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24546:2:13",
																				"nodeType": "YulLiteral",
																				"src": "24546:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24531:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24531:3:13"
																		},
																		"nativeSrc": "24531:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24531:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24478:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24478:43:13"
																},
																"nativeSrc": "24478:72:13",
																"nodeType": "YulFunctionCall",
																"src": "24478:72:13"
															},
															"nativeSrc": "24478:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "24478:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24571:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24571:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24582:3:13",
																				"nodeType": "YulLiteral",
																				"src": "24582:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24567:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24567:3:13"
																		},
																		"nativeSrc": "24567:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24567:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24592:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "24592:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24598:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24598:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24588:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24588:3:13"
																		},
																		"nativeSrc": "24588:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24588:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24560:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "24560:6:13"
																},
																"nativeSrc": "24560:49:13",
																"nodeType": "YulFunctionCall",
																"src": "24560:49:13"
															},
															"nativeSrc": "24560:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "24560:49:13"
														},
														{
															"nativeSrc": "24618:84:13",
															"nodeType": "YulAssignment",
															"src": "24618:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "24688:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24688:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "24697:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "24697:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "24626:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "24626:61:13"
																},
																"nativeSrc": "24626:76:13",
																"nodeType": "YulFunctionCall",
																"src": "24626:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24618:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "24618:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "23958:751:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24126:9:13",
														"nodeType": "YulTypedName",
														"src": "24126:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "24138:6:13",
														"nodeType": "YulTypedName",
														"src": "24138:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "24146:6:13",
														"nodeType": "YulTypedName",
														"src": "24146:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24154:6:13",
														"nodeType": "YulTypedName",
														"src": "24154:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24162:6:13",
														"nodeType": "YulTypedName",
														"src": "24162:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24170:6:13",
														"nodeType": "YulTypedName",
														"src": "24170:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24181:4:13",
														"nodeType": "YulTypedName",
														"src": "24181:4:13",
														"type": ""
													}
												],
												"src": "23958:751:13"
											},
											{
												"body": {
													"nativeSrc": "24777:79:13",
													"nodeType": "YulBlock",
													"src": "24777:79:13",
													"statements": [
														{
															"nativeSrc": "24787:22:13",
															"nodeType": "YulAssignment",
															"src": "24787:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "24802:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24802:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "24796:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "24796:5:13"
																},
																"nativeSrc": "24796:13:13",
																"nodeType": "YulFunctionCall",
																"src": "24796:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "24787:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "24787:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24844:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "24844:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "24818:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "24818:25:13"
																},
																"nativeSrc": "24818:32:13",
																"nodeType": "YulFunctionCall",
																"src": "24818:32:13"
															},
															"nativeSrc": "24818:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "24818:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "24715:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "24755:6:13",
														"nodeType": "YulTypedName",
														"src": "24755:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "24763:3:13",
														"nodeType": "YulTypedName",
														"src": "24763:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "24771:5:13",
														"nodeType": "YulTypedName",
														"src": "24771:5:13",
														"type": ""
													}
												],
												"src": "24715:141:13"
											},
											{
												"body": {
													"nativeSrc": "24938:273:13",
													"nodeType": "YulBlock",
													"src": "24938:273:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "24984:83:13",
																"nodeType": "YulBlock",
																"src": "24984:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "24986:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "24986:77:13"
																			},
																			"nativeSrc": "24986:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24986:79:13"
																		},
																		"nativeSrc": "24986:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "24986:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24959:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "24959:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24968:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24968:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24955:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24955:3:13"
																		},
																		"nativeSrc": "24955:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24955:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24980:2:13",
																		"nodeType": "YulLiteral",
																		"src": "24980:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "24951:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "24951:3:13"
																},
																"nativeSrc": "24951:32:13",
																"nodeType": "YulFunctionCall",
																"src": "24951:32:13"
															},
															"nativeSrc": "24948:119:13",
															"nodeType": "YulIf",
															"src": "24948:119:13"
														},
														{
															"nativeSrc": "25077:127:13",
															"nodeType": "YulBlock",
															"src": "25077:127:13",
															"statements": [
																{
																	"nativeSrc": "25092:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "25092:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25106:1:13",
																		"nodeType": "YulLiteral",
																		"src": "25106:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "25096:6:13",
																			"nodeType": "YulTypedName",
																			"src": "25096:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "25121:73:13",
																	"nodeType": "YulAssignment",
																	"src": "25121:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "25166:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "25166:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "25177:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "25177:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25162:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "25162:3:13"
																				},
																				"nativeSrc": "25162:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "25162:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "25186:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "25186:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "25131:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "25131:30:13"
																		},
																		"nativeSrc": "25131:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "25131:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "25121:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "25121:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "24862:349:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24908:9:13",
														"nodeType": "YulTypedName",
														"src": "24908:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "24919:7:13",
														"nodeType": "YulTypedName",
														"src": "24919:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "24931:6:13",
														"nodeType": "YulTypedName",
														"src": "24931:6:13",
														"type": ""
													}
												],
												"src": "24862:349:13"
											},
											{
												"body": {
													"nativeSrc": "25545:725:13",
													"nodeType": "YulBlock",
													"src": "25545:725:13",
													"statements": [
														{
															"nativeSrc": "25555:27:13",
															"nodeType": "YulAssignment",
															"src": "25555:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25567:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "25567:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25578:3:13",
																		"nodeType": "YulLiteral",
																		"src": "25578:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25563:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "25563:3:13"
																},
																"nativeSrc": "25563:19:13",
																"nodeType": "YulFunctionCall",
																"src": "25563:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25555:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "25555:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25636:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "25636:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25649:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "25649:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25660:1:13",
																				"nodeType": "YulLiteral",
																				"src": "25660:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25645:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "25645:3:13"
																		},
																		"nativeSrc": "25645:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "25645:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25592:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "25592:43:13"
																},
																"nativeSrc": "25592:71:13",
																"nodeType": "YulFunctionCall",
																"src": "25592:71:13"
															},
															"nativeSrc": "25592:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "25592:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25717:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "25717:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25730:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "25730:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25741:2:13",
																				"nodeType": "YulLiteral",
																				"src": "25741:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25726:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "25726:3:13"
																		},
																		"nativeSrc": "25726:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "25726:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25673:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "25673:43:13"
																},
																"nativeSrc": "25673:72:13",
																"nodeType": "YulFunctionCall",
																"src": "25673:72:13"
															},
															"nativeSrc": "25673:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "25673:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25766:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "25766:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25777:2:13",
																				"nodeType": "YulLiteral",
																				"src": "25777:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25762:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "25762:3:13"
																		},
																		"nativeSrc": "25762:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "25762:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25786:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "25786:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25792:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "25792:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25782:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "25782:3:13"
																		},
																		"nativeSrc": "25782:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "25782:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25755:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "25755:6:13"
																},
																"nativeSrc": "25755:48:13",
																"nodeType": "YulFunctionCall",
																"src": "25755:48:13"
															},
															"nativeSrc": "25755:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "25755:48:13"
														},
														{
															"nativeSrc": "25812:116:13",
															"nodeType": "YulAssignment",
															"src": "25812:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25914:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "25914:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "25923:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "25923:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "25820:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "25820:93:13"
																},
																"nativeSrc": "25820:108:13",
																"nodeType": "YulFunctionCall",
																"src": "25820:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25812:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "25812:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25949:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "25949:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25960:2:13",
																				"nodeType": "YulLiteral",
																				"src": "25960:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25945:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "25945:3:13"
																		},
																		"nativeSrc": "25945:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "25945:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25969:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "25969:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25975:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "25975:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25965:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "25965:3:13"
																		},
																		"nativeSrc": "25965:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "25965:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25938:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "25938:6:13"
																},
																"nativeSrc": "25938:48:13",
																"nodeType": "YulFunctionCall",
																"src": "25938:48:13"
															},
															"nativeSrc": "25938:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "25938:48:13"
														},
														{
															"nativeSrc": "25995:116:13",
															"nodeType": "YulAssignment",
															"src": "25995:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "26097:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "26097:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "26106:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "26106:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "26003:93:13",
																	"nodeType": "YulIdentifier",
																	"src": "26003:93:13"
																},
																"nativeSrc": "26003:108:13",
																"nodeType": "YulFunctionCall",
																"src": "26003:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25995:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "25995:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26132:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "26132:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26143:3:13",
																				"nodeType": "YulLiteral",
																				"src": "26143:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26128:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "26128:3:13"
																		},
																		"nativeSrc": "26128:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "26128:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26153:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "26153:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26159:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "26159:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26149:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "26149:3:13"
																		},
																		"nativeSrc": "26149:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "26149:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26121:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "26121:6:13"
																},
																"nativeSrc": "26121:49:13",
																"nodeType": "YulFunctionCall",
																"src": "26121:49:13"
															},
															"nativeSrc": "26121:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "26121:49:13"
														},
														{
															"nativeSrc": "26179:84:13",
															"nodeType": "YulAssignment",
															"src": "26179:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "26249:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "26249:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "26258:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "26258:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "26187:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "26187:61:13"
																},
																"nativeSrc": "26187:76:13",
																"nodeType": "YulFunctionCall",
																"src": "26187:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26179:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "26179:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "25217:1053:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25485:9:13",
														"nodeType": "YulTypedName",
														"src": "25485:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "25497:6:13",
														"nodeType": "YulTypedName",
														"src": "25497:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "25505:6:13",
														"nodeType": "YulTypedName",
														"src": "25505:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "25513:6:13",
														"nodeType": "YulTypedName",
														"src": "25513:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25521:6:13",
														"nodeType": "YulTypedName",
														"src": "25521:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25529:6:13",
														"nodeType": "YulTypedName",
														"src": "25529:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25540:4:13",
														"nodeType": "YulTypedName",
														"src": "25540:4:13",
														"type": ""
													}
												],
												"src": "25217:1053:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token ID does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance to burn\")\n\n    }\n\n    function abi_encode_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fd575f3560e01c8063715018a611610095578063e985e9c511610064578063e985e9c5146102bb578063f242432a146102eb578063f2fde38b14610307578063f5298aca14610323576100fd565b8063715018a6146102595780638da5cb5b14610263578063a22cb46514610281578063bb62115e1461029d576100fd565b80632693ebf2116100d15780632693ebf2146101ad5780632d571cc4146101dd5780632eb2c2d61461020d5780634e1273f414610229576100fd565b8062fdd58e1461010157806301ffc9a7146101315780630e89341c14610161578063156e29f614610191575b5f80fd5b61011b6004803603810190610116919061193f565b61033f565b604051610128919061198c565b60405180910390f35b61014b600480360381019061014691906119fa565b610394565b6040516101589190611a3f565b60405180910390f35b61017b60048036038101906101769190611a58565b610475565b6040516101889190611af3565b60405180910390f35b6101ab60048036038101906101a69190611b13565b610507565b005b6101c760048036038101906101c29190611a58565b6105a8565b6040516101d4919061198c565b60405180910390f35b6101f760048036038101906101f29190611a58565b6105bd565b604051610204919061198c565b60405180910390f35b61022760048036038101906102229190611d53565b61061c565b005b610243600480360381019061023e9190611ede565b6106c3565b604051610250919061200b565b60405180910390f35b6102616107ca565b005b61026b6107dd565b604051610278919061203a565b60405180910390f35b61029b6004803603810190610296919061207d565b610805565b005b6102a561081b565b6040516102b2919061198c565b60405180910390f35b6102d560048036038101906102d091906120bb565b610821565b6040516102e29190611a3f565b60405180910390f35b610305600480360381019061030091906120f9565b6108af565b005b610321600480360381019061031c919061218c565b610956565b005b61033d60048036038101906103389190611b13565b6109da565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045e57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061046e575061046d82610a5d565b5b9050919050565b606060028054610484906121e4565b80601f01602080910402602001604051908101604052809291908181526020018280546104b0906121e4565b80156104fb5780601f106104d2576101008083540402835291602001916104fb565b820191905f5260205f20905b8154815290600101906020018083116104de57829003601f168201915b50505050509050919050565b61050f610ac6565b5f60055f8481526020019081526020015f205411610562576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105599061225e565b60405180910390fd5b61057c83838360405180602001604052805f815250610b4d565b8060055f8481526020019081526020015f205f82825461059c91906122a9565b92505081905550505050565b6005602052805f5260405f205f915090505481565b5f6105c6610ac6565b5f600454905060045f8154809291906105de906122dc565b91905055506105fd33828560405180602001604052805f815250610b4d565b8260055f8381526020019081526020015f208190555080915050919050565b5f610625610be2565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561066a57506106688682610821565b155b156106ae5780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016106a5929190612323565b60405180910390fd5b6106bb8686868686610be9565b505050505050565b6060815183511461070f57815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161070692919061234a565b60405180910390fd5b5f835167ffffffffffffffff81111561072b5761072a611b67565b5b6040519080825280602002602001820160405280156107595781602001602082028036833780820191505090505b5090505f5b84518110156107bf5761079561077d8287610cdd90919063ffffffff16565b6107908387610cf090919063ffffffff16565b61033f565b8282815181106107a8576107a7612371565b5b60200260200101818152505080600101905061075e565b508091505092915050565b6107d2610ac6565b6107db5f610d03565b565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610817610810610be2565b8383610dc6565b5050565b60045481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f6108b8610be2565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156108fd57506108fb8682610821565b155b156109415780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610938929190612323565b60405180910390fd5b61094e8686868686610f2f565b505050505050565b61095e610ac6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109ce575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109c5919061203a565b60405180910390fd5b6109d781610d03565b50565b806109e5848461033f565b1015610a26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1d906123e8565b60405180910390fd5b610a31838383611035565b8060055f8481526020019081526020015f205f828254610a519190612406565b92505081905550505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610ace610be2565b73ffffffffffffffffffffffffffffffffffffffff16610aec6107dd565b73ffffffffffffffffffffffffffffffffffffffff1614610b4b57610b0f610be2565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b42919061203a565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610bbd575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610bb4919061203a565b60405180910390fd5b5f80610bc985856110d7565b91509150610bda5f87848487611107565b505050505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c59575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610c50919061203a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610cc9575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610cc0919061203a565b60405180910390fd5b610cd68585858585611107565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e36575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610e2d919061203a565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f229190611a3f565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f9f575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610f96919061203a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361100f575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401611006919061203a565b60405180910390fd5b5f8061101b85856110d7565b9150915061102c8787848487611107565b50505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110a5575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161109c919061203a565b60405180910390fd5b5f806110b184846110d7565b915091506110d0855f848460405180602001604052805f815250611107565b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b611113858585856111b3565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146111ac575f61114f610be2565b9050600184510361119b575f61116e5f86610cf090919063ffffffff16565b90505f6111845f86610cf090919063ffffffff16565b9050611194838989858589611543565b50506111aa565b6111a98187878787876116f2565b5b505b5050505050565b80518251146111fd57815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016111f492919061234a565b60405180910390fd5b5f611206610be2565b90505f5b8351811015611402575f6112278286610cf090919063ffffffff16565b90505f61123d8386610cf090919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614611360575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561130c57888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016113039493929190612439565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146113f557805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546113ed91906122a9565b925050819055505b505080600101905061120a565b5060018351036114bd575f6114205f85610cf090919063ffffffff16565b90505f6114365f85610cf090919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516114ae92919061234a565b60405180910390a4505061153c565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161153392919061247c565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b11156116ea578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016115a3959493929190612503565b6020604051808303815f875af19250505080156115de57506040513d601f19601f820116820180604052508101906115db919061256f565b60015b61165f573d805f811461160c576040519150601f19603f3d011682016040523d82523d5f602084013e611611565b606091505b505f81510361165757846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161164e919061203a565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146116e857846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016116df919061203a565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611899578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161175295949392919061259a565b6020604051808303815f875af192505050801561178d57506040513d601f19601f8201168201806040525081019061178a919061256f565b60015b61180e573d805f81146117bb576040519150601f19603f3d011682016040523d82523d5f602084013e6117c0565b606091505b505f81510361180657846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016117fd919061203a565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461189757846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161188e919061203a565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6118db826118b2565b9050919050565b6118eb816118d1565b81146118f5575f80fd5b50565b5f81359050611906816118e2565b92915050565b5f819050919050565b61191e8161190c565b8114611928575f80fd5b50565b5f8135905061193981611915565b92915050565b5f8060408385031215611955576119546118aa565b5b5f611962858286016118f8565b92505060206119738582860161192b565b9150509250929050565b6119868161190c565b82525050565b5f60208201905061199f5f83018461197d565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119d9816119a5565b81146119e3575f80fd5b50565b5f813590506119f4816119d0565b92915050565b5f60208284031215611a0f57611a0e6118aa565b5b5f611a1c848285016119e6565b91505092915050565b5f8115159050919050565b611a3981611a25565b82525050565b5f602082019050611a525f830184611a30565b92915050565b5f60208284031215611a6d57611a6c6118aa565b5b5f611a7a8482850161192b565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611ac582611a83565b611acf8185611a8d565b9350611adf818560208601611a9d565b611ae881611aab565b840191505092915050565b5f6020820190508181035f830152611b0b8184611abb565b905092915050565b5f805f60608486031215611b2a57611b296118aa565b5b5f611b37868287016118f8565b9350506020611b488682870161192b565b9250506040611b598682870161192b565b9150509250925092565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611b9d82611aab565b810181811067ffffffffffffffff82111715611bbc57611bbb611b67565b5b80604052505050565b5f611bce6118a1565b9050611bda8282611b94565b919050565b5f67ffffffffffffffff821115611bf957611bf8611b67565b5b602082029050602081019050919050565b5f80fd5b5f611c20611c1b84611bdf565b611bc5565b90508083825260208201905060208402830185811115611c4357611c42611c0a565b5b835b81811015611c6c5780611c58888261192b565b845260208401935050602081019050611c45565b5050509392505050565b5f82601f830112611c8a57611c89611b63565b5b8135611c9a848260208601611c0e565b91505092915050565b5f80fd5b5f67ffffffffffffffff821115611cc157611cc0611b67565b5b611cca82611aab565b9050602081019050919050565b828183375f83830152505050565b5f611cf7611cf284611ca7565b611bc5565b905082815260208101848484011115611d1357611d12611ca3565b5b611d1e848285611cd7565b509392505050565b5f82601f830112611d3a57611d39611b63565b5b8135611d4a848260208601611ce5565b91505092915050565b5f805f805f60a08688031215611d6c57611d6b6118aa565b5b5f611d79888289016118f8565b9550506020611d8a888289016118f8565b945050604086013567ffffffffffffffff811115611dab57611daa6118ae565b5b611db788828901611c76565b935050606086013567ffffffffffffffff811115611dd857611dd76118ae565b5b611de488828901611c76565b925050608086013567ffffffffffffffff811115611e0557611e046118ae565b5b611e1188828901611d26565b9150509295509295909350565b5f67ffffffffffffffff821115611e3857611e37611b67565b5b602082029050602081019050919050565b5f611e5b611e5684611e1e565b611bc5565b90508083825260208201905060208402830185811115611e7e57611e7d611c0a565b5b835b81811015611ea75780611e9388826118f8565b845260208401935050602081019050611e80565b5050509392505050565b5f82601f830112611ec557611ec4611b63565b5b8135611ed5848260208601611e49565b91505092915050565b5f8060408385031215611ef457611ef36118aa565b5b5f83013567ffffffffffffffff811115611f1157611f106118ae565b5b611f1d85828601611eb1565b925050602083013567ffffffffffffffff811115611f3e57611f3d6118ae565b5b611f4a85828601611c76565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611f868161190c565b82525050565b5f611f978383611f7d565b60208301905092915050565b5f602082019050919050565b5f611fb982611f54565b611fc38185611f5e565b9350611fce83611f6e565b805f5b83811015611ffe578151611fe58882611f8c565b9750611ff083611fa3565b925050600181019050611fd1565b5085935050505092915050565b5f6020820190508181035f8301526120238184611faf565b905092915050565b612034816118d1565b82525050565b5f60208201905061204d5f83018461202b565b92915050565b61205c81611a25565b8114612066575f80fd5b50565b5f8135905061207781612053565b92915050565b5f8060408385031215612093576120926118aa565b5b5f6120a0858286016118f8565b92505060206120b185828601612069565b9150509250929050565b5f80604083850312156120d1576120d06118aa565b5b5f6120de858286016118f8565b92505060206120ef858286016118f8565b9150509250929050565b5f805f805f60a08688031215612112576121116118aa565b5b5f61211f888289016118f8565b9550506020612130888289016118f8565b94505060406121418882890161192b565b93505060606121528882890161192b565b925050608086013567ffffffffffffffff811115612173576121726118ae565b5b61217f88828901611d26565b9150509295509295909350565b5f602082840312156121a1576121a06118aa565b5b5f6121ae848285016118f8565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806121fb57607f821691505b60208210810361220e5761220d6121b7565b5b50919050565b7f546f6b656e20494420646f6573206e6f742065786973740000000000000000005f82015250565b5f612248601783611a8d565b915061225382612214565b602082019050919050565b5f6020820190508181035f8301526122758161223c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122b38261190c565b91506122be8361190c565b92508282019050808211156122d6576122d561227c565b5b92915050565b5f6122e68261190c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123185761231761227c565b5b600182019050919050565b5f6040820190506123365f83018561202b565b612343602083018461202b565b9392505050565b5f60408201905061235d5f83018561197d565b61236a602083018461197d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f496e73756666696369656e742062616c616e636520746f206275726e000000005f82015250565b5f6123d2601c83611a8d565b91506123dd8261239e565b602082019050919050565b5f6020820190508181035f8301526123ff816123c6565b9050919050565b5f6124108261190c565b915061241b8361190c565b92508282039050818111156124335761243261227c565b5b92915050565b5f60808201905061244c5f83018761202b565b612459602083018661197d565b612466604083018561197d565b612473606083018461197d565b95945050505050565b5f6040820190508181035f8301526124948185611faf565b905081810360208301526124a88184611faf565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6124d5826124b1565b6124df81856124bb565b93506124ef818560208601611a9d565b6124f881611aab565b840191505092915050565b5f60a0820190506125165f83018861202b565b612523602083018761202b565b612530604083018661197d565b61253d606083018561197d565b818103608083015261254f81846124cb565b90509695505050505050565b5f81519050612569816119d0565b92915050565b5f60208284031215612584576125836118aa565b5b5f6125918482850161255b565b91505092915050565b5f60a0820190506125ad5f83018861202b565b6125ba602083018761202b565b81810360408301526125cc8186611faf565b905081810360608301526125e08185611faf565b905081810360808301526125f481846124cb565b9050969550505050505056fea26469706673582212202fde6745a2b87497aff98210e40bbd18a820eda07f0606fb93a7317fb830dbd564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x323 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xBB62115E EQ PUSH2 0x29D JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x2693EBF2 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2693EBF2 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x2D571CC4 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x229 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x191 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x19FA JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1B13 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1EDE JUMP JUMPDEST PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x200B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH2 0x7CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH2 0x805 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH2 0x81B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST PUSH2 0x8AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x218C JUMP JUMPDEST PUSH2 0x956 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x1B13 JUMP JUMPDEST PUSH2 0x9DA JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45E JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x46E JUMPI POP PUSH2 0x46D DUP3 PUSH2 0xA5D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x484 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B0 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50F PUSH2 0xAC6 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x559 SWAP1 PUSH2 0x225E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB4D JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x22A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x5C6 PUSH2 0xAC6 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5DE SWAP1 PUSH2 0x22DC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x5FD CALLER DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB4D JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x625 PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x66A JUMPI POP PUSH2 0x668 DUP7 DUP3 PUSH2 0x821 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x6AE JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A5 SWAP3 SWAP2 SWAP1 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6BB DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xBE9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x70F JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x706 SWAP3 SWAP2 SWAP1 PUSH2 0x234A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x72B JUMPI PUSH2 0x72A PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x759 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x7BF JUMPI PUSH2 0x795 PUSH2 0x77D DUP3 DUP8 PUSH2 0xCDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x790 DUP4 DUP8 PUSH2 0xCF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7A8 JUMPI PUSH2 0x7A7 PUSH2 0x2371 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x75E JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7D2 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x7DB PUSH0 PUSH2 0xD03 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x817 PUSH2 0x810 PUSH2 0xBE2 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDC6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8B8 PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x8FD JUMPI POP PUSH2 0x8FB DUP7 DUP3 PUSH2 0x821 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x941 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP3 SWAP2 SWAP1 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94E DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xF2F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x95E PUSH2 0xAC6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D7 DUP2 PUSH2 0xD03 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH2 0x9E5 DUP5 DUP5 PUSH2 0x33F JUMP JUMPDEST LT ISZERO PUSH2 0xA26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1D SWAP1 PUSH2 0x23E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA31 DUP4 DUP4 DUP4 PUSH2 0x1035 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA51 SWAP2 SWAP1 PUSH2 0x2406 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xACE PUSH2 0xBE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAEC PUSH2 0x7DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB4B JUMPI PUSH2 0xB0F PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB42 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBBD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB4 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xBC9 DUP6 DUP6 PUSH2 0x10D7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xBDA PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1107 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC59 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC50 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCC9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCD6 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1107 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2D SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF22 SWAP2 SWAP1 PUSH2 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF9F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF96 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x100F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1006 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x101B DUP6 DUP6 PUSH2 0x10D7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x102C DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1107 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10A5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109C SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x10B1 DUP5 DUP5 PUSH2 0x10D7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x10D0 DUP6 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1107 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1113 DUP6 DUP6 DUP6 DUP6 PUSH2 0x11B3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11AC JUMPI PUSH0 PUSH2 0x114F PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x119B JUMPI PUSH0 PUSH2 0x116E PUSH0 DUP7 PUSH2 0xCF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1184 PUSH0 DUP7 PUSH2 0xCF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1194 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1543 JUMP JUMPDEST POP POP PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x11A9 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x16F2 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x11FD JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F4 SWAP3 SWAP2 SWAP1 PUSH2 0x234A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1206 PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1402 JUMPI PUSH0 PUSH2 0x1227 DUP3 DUP7 PUSH2 0xCF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x123D DUP4 DUP7 PUSH2 0xCF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1360 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x130C JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1303 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13F5 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13ED SWAP2 SWAP1 PUSH2 0x22A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x120A JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x14BD JUMPI PUSH0 PUSH2 0x1420 PUSH0 DUP6 PUSH2 0xCF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1436 PUSH0 DUP6 PUSH2 0xCF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x14AE SWAP3 SWAP2 SWAP1 PUSH2 0x234A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x153C JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1533 SWAP3 SWAP2 SWAP1 PUSH2 0x247C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x16EA JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2503 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15DE JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15DB SWAP2 SWAP1 PUSH2 0x256F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x165F JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x160C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1657 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164E SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x16E8 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DF SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1899 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1752 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x178D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x178A SWAP2 SWAP1 PUSH2 0x256F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x180E JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x17BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1806 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17FD SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1897 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188E SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18DB DUP3 PUSH2 0x18B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18EB DUP2 PUSH2 0x18D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x18F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1906 DUP2 PUSH2 0x18E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x191E DUP2 PUSH2 0x190C JUMP JUMPDEST DUP2 EQ PUSH2 0x1928 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1939 DUP2 PUSH2 0x1915 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1955 JUMPI PUSH2 0x1954 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1962 DUP6 DUP3 DUP7 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1973 DUP6 DUP3 DUP7 ADD PUSH2 0x192B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1986 DUP2 PUSH2 0x190C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x199F PUSH0 DUP4 ADD DUP5 PUSH2 0x197D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19D9 DUP2 PUSH2 0x19A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x19E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F4 DUP2 PUSH2 0x19D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A0F JUMPI PUSH2 0x1A0E PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A1C DUP5 DUP3 DUP6 ADD PUSH2 0x19E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A39 DUP2 PUSH2 0x1A25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A52 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A6D JUMPI PUSH2 0x1A6C PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A7A DUP5 DUP3 DUP6 ADD PUSH2 0x192B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC5 DUP3 PUSH2 0x1A83 JUMP JUMPDEST PUSH2 0x1ACF DUP2 DUP6 PUSH2 0x1A8D JUMP JUMPDEST SWAP4 POP PUSH2 0x1ADF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A9D JUMP JUMPDEST PUSH2 0x1AE8 DUP2 PUSH2 0x1AAB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B0B DUP2 DUP5 PUSH2 0x1ABB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B2A JUMPI PUSH2 0x1B29 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B37 DUP7 DUP3 DUP8 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B48 DUP7 DUP3 DUP8 ADD PUSH2 0x192B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B59 DUP7 DUP3 DUP8 ADD PUSH2 0x192B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B9D DUP3 PUSH2 0x1AAB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1BBC JUMPI PUSH2 0x1BBB PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCE PUSH2 0x18A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BDA DUP3 DUP3 PUSH2 0x1B94 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BF9 JUMPI PUSH2 0x1BF8 PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1C20 PUSH2 0x1C1B DUP5 PUSH2 0x1BDF JUMP JUMPDEST PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1C43 JUMPI PUSH2 0x1C42 PUSH2 0x1C0A JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C6C JUMPI DUP1 PUSH2 0x1C58 DUP9 DUP3 PUSH2 0x192B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C45 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C8A JUMPI PUSH2 0x1C89 PUSH2 0x1B63 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C9A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C0E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CC1 JUMPI PUSH2 0x1CC0 PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST PUSH2 0x1CCA DUP3 PUSH2 0x1AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CF7 PUSH2 0x1CF2 DUP5 PUSH2 0x1CA7 JUMP JUMPDEST PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1D13 JUMPI PUSH2 0x1D12 PUSH2 0x1CA3 JUMP JUMPDEST JUMPDEST PUSH2 0x1D1E DUP5 DUP3 DUP6 PUSH2 0x1CD7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D3A JUMPI PUSH2 0x1D39 PUSH2 0x1B63 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D4A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D6C JUMPI PUSH2 0x1D6B PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D79 DUP9 DUP3 DUP10 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1D8A DUP9 DUP3 DUP10 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DAB JUMPI PUSH2 0x1DAA PUSH2 0x18AE JUMP JUMPDEST JUMPDEST PUSH2 0x1DB7 DUP9 DUP3 DUP10 ADD PUSH2 0x1C76 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DD8 JUMPI PUSH2 0x1DD7 PUSH2 0x18AE JUMP JUMPDEST JUMPDEST PUSH2 0x1DE4 DUP9 DUP3 DUP10 ADD PUSH2 0x1C76 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E05 JUMPI PUSH2 0x1E04 PUSH2 0x18AE JUMP JUMPDEST JUMPDEST PUSH2 0x1E11 DUP9 DUP3 DUP10 ADD PUSH2 0x1D26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E38 JUMPI PUSH2 0x1E37 PUSH2 0x1B67 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5B PUSH2 0x1E56 DUP5 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1E7E JUMPI PUSH2 0x1E7D PUSH2 0x1C0A JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EA7 JUMPI DUP1 PUSH2 0x1E93 DUP9 DUP3 PUSH2 0x18F8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E80 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EC5 JUMPI PUSH2 0x1EC4 PUSH2 0x1B63 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1ED5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E49 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EF4 JUMPI PUSH2 0x1EF3 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F11 JUMPI PUSH2 0x1F10 PUSH2 0x18AE JUMP JUMPDEST JUMPDEST PUSH2 0x1F1D DUP6 DUP3 DUP7 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F3E JUMPI PUSH2 0x1F3D PUSH2 0x18AE JUMP JUMPDEST JUMPDEST PUSH2 0x1F4A DUP6 DUP3 DUP7 ADD PUSH2 0x1C76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F86 DUP2 PUSH2 0x190C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F97 DUP4 DUP4 PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB9 DUP3 PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x1FC3 DUP2 DUP6 PUSH2 0x1F5E JUMP JUMPDEST SWAP4 POP PUSH2 0x1FCE DUP4 PUSH2 0x1F6E JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FFE JUMPI DUP2 MLOAD PUSH2 0x1FE5 DUP9 DUP3 PUSH2 0x1F8C JUMP JUMPDEST SWAP8 POP PUSH2 0x1FF0 DUP4 PUSH2 0x1FA3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1FD1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2023 DUP2 DUP5 PUSH2 0x1FAF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2034 DUP2 PUSH2 0x18D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x204D PUSH0 DUP4 ADD DUP5 PUSH2 0x202B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x205C DUP2 PUSH2 0x1A25 JUMP JUMPDEST DUP2 EQ PUSH2 0x2066 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2077 DUP2 PUSH2 0x2053 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2093 JUMPI PUSH2 0x2092 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20A0 DUP6 DUP3 DUP7 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20B1 DUP6 DUP3 DUP7 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20D1 JUMPI PUSH2 0x20D0 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20DE DUP6 DUP3 DUP7 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20EF DUP6 DUP3 DUP7 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2112 JUMPI PUSH2 0x2111 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x211F DUP9 DUP3 DUP10 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2130 DUP9 DUP3 DUP10 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2141 DUP9 DUP3 DUP10 ADD PUSH2 0x192B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2152 DUP9 DUP3 DUP10 ADD PUSH2 0x192B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2173 JUMPI PUSH2 0x2172 PUSH2 0x18AE JUMP JUMPDEST JUMPDEST PUSH2 0x217F DUP9 DUP3 DUP10 ADD PUSH2 0x1D26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21A1 JUMPI PUSH2 0x21A0 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21AE DUP5 DUP3 DUP6 ADD PUSH2 0x18F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21FB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x220E JUMPI PUSH2 0x220D PUSH2 0x21B7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20494420646F6573206E6F74206578697374000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2248 PUSH1 0x17 DUP4 PUSH2 0x1A8D JUMP JUMPDEST SWAP2 POP PUSH2 0x2253 DUP3 PUSH2 0x2214 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2275 DUP2 PUSH2 0x223C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22B3 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP2 POP PUSH2 0x22BE DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22D6 JUMPI PUSH2 0x22D5 PUSH2 0x227C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22E6 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2318 JUMPI PUSH2 0x2317 PUSH2 0x227C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2336 PUSH0 DUP4 ADD DUP6 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x2343 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x202B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x235D PUSH0 DUP4 ADD DUP6 PUSH2 0x197D JUMP JUMPDEST PUSH2 0x236A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x197D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F206275726E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23D2 PUSH1 0x1C DUP4 PUSH2 0x1A8D JUMP JUMPDEST SWAP2 POP PUSH2 0x23DD DUP3 PUSH2 0x239E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23FF DUP2 PUSH2 0x23C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2410 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP2 POP PUSH2 0x241B DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2433 JUMPI PUSH2 0x2432 PUSH2 0x227C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x244C PUSH0 DUP4 ADD DUP8 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x2459 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x197D JUMP JUMPDEST PUSH2 0x2466 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x197D JUMP JUMPDEST PUSH2 0x2473 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x197D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2494 DUP2 DUP6 PUSH2 0x1FAF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x24A8 DUP2 DUP5 PUSH2 0x1FAF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24D5 DUP3 PUSH2 0x24B1 JUMP JUMPDEST PUSH2 0x24DF DUP2 DUP6 PUSH2 0x24BB JUMP JUMPDEST SWAP4 POP PUSH2 0x24EF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A9D JUMP JUMPDEST PUSH2 0x24F8 DUP2 PUSH2 0x1AAB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2516 PUSH0 DUP4 ADD DUP9 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x2523 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x2530 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x197D JUMP JUMPDEST PUSH2 0x253D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x197D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x254F DUP2 DUP5 PUSH2 0x24CB JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2569 DUP2 PUSH2 0x19D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2584 JUMPI PUSH2 0x2583 PUSH2 0x18AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2591 DUP5 DUP3 DUP6 ADD PUSH2 0x255B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x25AD PUSH0 DUP4 ADD DUP9 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x25BA PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x202B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x25CC DUP2 DUP7 PUSH2 0x1FAF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x25E0 DUP2 DUP6 PUSH2 0x1FAF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x25F4 DUP2 DUP5 PUSH2 0x24CB JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xDE PUSH8 0x45A2B87497AFF982 LT 0xE4 SIGNEXTEND 0xBD XOR 0xA8 KECCAK256 0xED LOG0 PUSH32 0x606FB93A7317FB830DBD564736F6C6343000819003300000000000000000000 ",
							"sourceMap": "177:1051:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1380:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2084:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;734:239:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;267:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;439:287;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4014:429:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2536:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3156:144:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;227:33:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3367:157:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3591:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;981:244:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2247:132:2;2324:7;2350:9;:13;2360:2;2350:13;;;;;;;;;;;:22;2364:7;2350:22;;;;;;;;;;;;;;;;2343:29;;2247:132;;;;:::o;1380:305::-;1482:4;1532:26;1517:41;;;:11;:41;;;;:109;;;;1589:37;1574:52;;;:11;:52;;;;1517:109;:161;;;;1642:36;1666:11;1642:23;:36::i;:::-;1517:161;1498:180;;1380:305;;;:::o;2084:103::-;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;734:239:12:-;1531:13:0;:11;:13::i;:::-;854:1:12::1;831:11;:20;843:7;831:20;;;;;;;;;;;;:24;823:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;894:30;900:2;904:7;913:6;894:30;;;;;;;;;;;::::0;:5:::1;:30::i;:::-;959:6;935:11;:20;947:7;935:20;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;734:239:::0;;;:::o;267:46::-;;;;;;;;;;;;;;;;;:::o;439:287::-;511:7;1531:13:0;:11;:13::i;:::-;531:15:12::1;549:14;;531:32;;574:14;;:16;;;;;;;;;:::i;:::-;;;;;;601:45;607:10;619:7;628:13;601:45;;;;;;;;;;;::::0;:5:::1;:45::i;:::-;680:13;657:11;:20;669:7;657:20;;;;;;;;;;;:36;;;;711:7;704:14;;;439:287:::0;;;:::o;4014:429:2:-;4208:14;4225:12;:10;:12::i;:::-;4208:29;;4259:6;4251:14;;:4;:14;;;;:49;;;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4352:6;4360:4;4323:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;2536:552::-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:3;:10;2782:8;:15;2744:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2688:121;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;2972:68;2982:30;3010:1;2982:8;:27;;:30;;;;:::i;:::-;3014:25;3037:1;3014:3;:22;;:25;;;;:::i;:::-;2972:9;:68::i;:::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2934:3;;;;;2893:158;;;;3068:13;3061:20;;;2536:552;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3156:144:2:-;3241:52;3260:12;:10;:12::i;:::-;3274:8;3284;3241:18;:52::i;:::-;3156:144;;:::o;227:33:12:-;;;;:::o;3367:157:2:-;3457:4;3480:18;:27;3499:7;3480:27;;;;;;;;;;;;;;;:37;3508:8;3480:37;;;;;;;;;;;;;;;;;;;;;;;;;3473:44;;3367:157;;;;:::o;3591:351::-;3714:14;3731:12;:10;:12::i;:::-;3714:29;;3765:6;3757:14;;:4;:14;;;;:49;;;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3858:6;3866:4;3829:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3753:129;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;:::-;3704:238;3591:351;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;981:244:12:-;1098:6;1070:24;1080:4;1086:7;1070:9;:24::i;:::-;:34;;1062:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1148:28;1154:4;1160:7;1169:6;1148:5;:28::i;:::-;1211:6;1187:11;:20;1199:7;1187:20;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;981:244;;;:::o;762:146:9:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10746:346:2:-;10856:1;10842:16;;:2;:16;;;10838:88;;10912:1;10881:34;;;;;;;;;;;:::i;:::-;;;;;;;;10838:88;10936:20;10958:23;10985:29;11004:2;11008:5;10985:18;:29::i;:::-;10935:79;;;;11024:61;11059:1;11063:2;11067:3;11072:6;11080:4;11024:26;:61::i;:::-;10828:264;;10746:346;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;9015:445:2:-;9222:1;9208:16;;:2;:16;;;9204:88;;9278:1;9247:34;;;;;;;;;;;:::i;:::-;;;;;;;;9204:88;9321:1;9305:18;;:4;:18;;;9301:88;;9375:1;9346:32;;;;;;;;;;;:::i;:::-;;;;;;;;9301:88;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;4603:197:6:-;4689:11;4777:4;4772:3;4768:14;4761:4;4756:3;4752:14;4748:35;4742:42;4735:49;;4603:197;;;;:::o;4204:::-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;13268:315:2:-;13395:1;13375:22;;:8;:22;;;13371:94;;13451:1;13420:34;;;;;;;;;;;:::i;:::-;;;;;;;;13371:94;13512:8;13474:18;:25;13493:5;13474:25;;;;;;;;;;;;;;;:35;13500:8;13474:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13557:8;13535:41;;13550:5;13535:41;;;13567:8;13535:41;;;;;;:::i;:::-;;;;;;;;13268:315;;;:::o;8151:463::-;8287:1;8273:16;;:2;:16;;;8269:88;;8343:1;8312:34;;;;;;;;;;;:::i;:::-;;;;;;;;8269:88;8386:1;8370:18;;:4;:18;;;8366:88;;8440:1;8411:32;;;;;;;;;;;:::i;:::-;;;;;;;;8366:88;8464:20;8486:23;8513:29;8532:2;8536:5;8513:18;:29::i;:::-;8463:79;;;;8552:55;8579:4;8585:2;8589:3;8594:6;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;12099:329::-;12194:1;12178:18;;:4;:18;;;12174:88;;12248:1;12219:32;;;;;;;;;;;:::i;:::-;;;;;;;;12174:88;12272:20;12294:23;12321:29;12340:2;12344:5;12321:18;:29::i;:::-;12271:79;;;;12360:61;12387:4;12401:1;12405:3;12410:6;12360:61;;;;;;;;;;;;:26;:61::i;:::-;12164:264;;12099:329;;;:::o;16080:849::-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;:12::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;:12::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;13761:974::-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:139::-;3917:6;3912:3;3907;3901:23;3958:1;3949:6;3944:3;3940:16;3933:27;3828:139;;;:::o;3973:102::-;4014:6;4065:2;4061:7;4056:2;4049:5;4045:14;4041:28;4031:38;;3973:102;;;:::o;4081:377::-;4169:3;4197:39;4230:5;4197:39;:::i;:::-;4252:71;4316:6;4311:3;4252:71;:::i;:::-;4245:78;;4332:65;4390:6;4385:3;4378:4;4371:5;4367:16;4332:65;:::i;:::-;4422:29;4444:6;4422:29;:::i;:::-;4417:3;4413:39;4406:46;;4173:285;4081:377;;;;:::o;4464:313::-;4577:4;4615:2;4604:9;4600:18;4592:26;;4664:9;4658:4;4654:20;4650:1;4639:9;4635:17;4628:47;4692:78;4765:4;4756:6;4692:78;:::i;:::-;4684:86;;4464:313;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:117::-;5517:1;5514;5507:12;5531:180;5579:77;5576:1;5569:88;5676:4;5673:1;5666:15;5700:4;5697:1;5690:15;5717:281;5800:27;5822:4;5800:27;:::i;:::-;5792:6;5788:40;5930:6;5918:10;5915:22;5894:18;5882:10;5879:34;5876:62;5873:88;;;5941:18;;:::i;:::-;5873:88;5981:10;5977:2;5970:22;5760:238;5717:281;;:::o;6004:129::-;6038:6;6065:20;;:::i;:::-;6055:30;;6094:33;6122:4;6114:6;6094:33;:::i;:::-;6004:129;;;:::o;6139:311::-;6216:4;6306:18;6298:6;6295:30;6292:56;;;6328:18;;:::i;:::-;6292:56;6378:4;6370:6;6366:17;6358:25;;6438:4;6432;6428:15;6420:23;;6139:311;;;:::o;6456:117::-;6565:1;6562;6555:12;6596:710;6692:5;6717:81;6733:64;6790:6;6733:64;:::i;:::-;6717:81;:::i;:::-;6708:90;;6818:5;6847:6;6840:5;6833:21;6881:4;6874:5;6870:16;6863:23;;6934:4;6926:6;6922:17;6914:6;6910:30;6963:3;6955:6;6952:15;6949:122;;;6982:79;;:::i;:::-;6949:122;7097:6;7080:220;7114:6;7109:3;7106:15;7080:220;;;7189:3;7218:37;7251:3;7239:10;7218:37;:::i;:::-;7213:3;7206:50;7285:4;7280:3;7276:14;7269:21;;7156:144;7140:4;7135:3;7131:14;7124:21;;7080:220;;;7084:21;6698:608;;6596:710;;;;;:::o;7329:370::-;7400:5;7449:3;7442:4;7434:6;7430:17;7426:27;7416:122;;7457:79;;:::i;:::-;7416:122;7574:6;7561:20;7599:94;7689:3;7681:6;7674:4;7666:6;7662:17;7599:94;:::i;:::-;7590:103;;7406:293;7329:370;;;;:::o;7705:117::-;7814:1;7811;7804:12;7828:307;7889:4;7979:18;7971:6;7968:30;7965:56;;;8001:18;;:::i;:::-;7965:56;8039:29;8061:6;8039:29;:::i;:::-;8031:37;;8123:4;8117;8113:15;8105:23;;7828:307;;;:::o;8141:148::-;8239:6;8234:3;8229;8216:30;8280:1;8271:6;8266:3;8262:16;8255:27;8141:148;;;:::o;8295:423::-;8372:5;8397:65;8413:48;8454:6;8413:48;:::i;:::-;8397:65;:::i;:::-;8388:74;;8485:6;8478:5;8471:21;8523:4;8516:5;8512:16;8561:3;8552:6;8547:3;8543:16;8540:25;8537:112;;;8568:79;;:::i;:::-;8537:112;8658:54;8705:6;8700:3;8695;8658:54;:::i;:::-;8378:340;8295:423;;;;;:::o;8737:338::-;8792:5;8841:3;8834:4;8826:6;8822:17;8818:27;8808:122;;8849:79;;:::i;:::-;8808:122;8966:6;8953:20;8991:78;9065:3;9057:6;9050:4;9042:6;9038:17;8991:78;:::i;:::-;8982:87;;8798:277;8737:338;;;;:::o;9081:1509::-;9235:6;9243;9251;9259;9267;9316:3;9304:9;9295:7;9291:23;9287:33;9284:120;;;9323:79;;:::i;:::-;9284:120;9443:1;9468:53;9513:7;9504:6;9493:9;9489:22;9468:53;:::i;:::-;9458:63;;9414:117;9570:2;9596:53;9641:7;9632:6;9621:9;9617:22;9596:53;:::i;:::-;9586:63;;9541:118;9726:2;9715:9;9711:18;9698:32;9757:18;9749:6;9746:30;9743:117;;;9779:79;;:::i;:::-;9743:117;9884:78;9954:7;9945:6;9934:9;9930:22;9884:78;:::i;:::-;9874:88;;9669:303;10039:2;10028:9;10024:18;10011:32;10070:18;10062:6;10059:30;10056:117;;;10092:79;;:::i;:::-;10056:117;10197:78;10267:7;10258:6;10247:9;10243:22;10197:78;:::i;:::-;10187:88;;9982:303;10352:3;10341:9;10337:19;10324:33;10384:18;10376:6;10373:30;10370:117;;;10406:79;;:::i;:::-;10370:117;10511:62;10565:7;10556:6;10545:9;10541:22;10511:62;:::i;:::-;10501:72;;10295:288;9081:1509;;;;;;;;:::o;10596:311::-;10673:4;10763:18;10755:6;10752:30;10749:56;;;10785:18;;:::i;:::-;10749:56;10835:4;10827:6;10823:17;10815:25;;10895:4;10889;10885:15;10877:23;;10596:311;;;:::o;10930:710::-;11026:5;11051:81;11067:64;11124:6;11067:64;:::i;:::-;11051:81;:::i;:::-;11042:90;;11152:5;11181:6;11174:5;11167:21;11215:4;11208:5;11204:16;11197:23;;11268:4;11260:6;11256:17;11248:6;11244:30;11297:3;11289:6;11286:15;11283:122;;;11316:79;;:::i;:::-;11283:122;11431:6;11414:220;11448:6;11443:3;11440:15;11414:220;;;11523:3;11552:37;11585:3;11573:10;11552:37;:::i;:::-;11547:3;11540:50;11619:4;11614:3;11610:14;11603:21;;11490:144;11474:4;11469:3;11465:14;11458:21;;11414:220;;;11418:21;11032:608;;10930:710;;;;;:::o;11663:370::-;11734:5;11783:3;11776:4;11768:6;11764:17;11760:27;11750:122;;11791:79;;:::i;:::-;11750:122;11908:6;11895:20;11933:94;12023:3;12015:6;12008:4;12000:6;11996:17;11933:94;:::i;:::-;11924:103;;11740:293;11663:370;;;;:::o;12039:894::-;12157:6;12165;12214:2;12202:9;12193:7;12189:23;12185:32;12182:119;;;12220:79;;:::i;:::-;12182:119;12368:1;12357:9;12353:17;12340:31;12398:18;12390:6;12387:30;12384:117;;;12420:79;;:::i;:::-;12384:117;12525:78;12595:7;12586:6;12575:9;12571:22;12525:78;:::i;:::-;12515:88;;12311:302;12680:2;12669:9;12665:18;12652:32;12711:18;12703:6;12700:30;12697:117;;;12733:79;;:::i;:::-;12697:117;12838:78;12908:7;12899:6;12888:9;12884:22;12838:78;:::i;:::-;12828:88;;12623:303;12039:894;;;;;:::o;12939:114::-;13006:6;13040:5;13034:12;13024:22;;12939:114;;;:::o;13059:184::-;13158:11;13192:6;13187:3;13180:19;13232:4;13227:3;13223:14;13208:29;;13059:184;;;;:::o;13249:132::-;13316:4;13339:3;13331:11;;13369:4;13364:3;13360:14;13352:22;;13249:132;;;:::o;13387:108::-;13464:24;13482:5;13464:24;:::i;:::-;13459:3;13452:37;13387:108;;:::o;13501:179::-;13570:10;13591:46;13633:3;13625:6;13591:46;:::i;:::-;13669:4;13664:3;13660:14;13646:28;;13501:179;;;;:::o;13686:113::-;13756:4;13788;13783:3;13779:14;13771:22;;13686:113;;;:::o;13835:732::-;13954:3;13983:54;14031:5;13983:54;:::i;:::-;14053:86;14132:6;14127:3;14053:86;:::i;:::-;14046:93;;14163:56;14213:5;14163:56;:::i;:::-;14242:7;14273:1;14258:284;14283:6;14280:1;14277:13;14258:284;;;14359:6;14353:13;14386:63;14445:3;14430:13;14386:63;:::i;:::-;14379:70;;14472:60;14525:6;14472:60;:::i;:::-;14462:70;;14318:224;14305:1;14302;14298:9;14293:14;;14258:284;;;14262:14;14558:3;14551:10;;13959:608;;;13835:732;;;;:::o;14573:373::-;14716:4;14754:2;14743:9;14739:18;14731:26;;14803:9;14797:4;14793:20;14789:1;14778:9;14774:17;14767:47;14831:108;14934:4;14925:6;14831:108;:::i;:::-;14823:116;;14573:373;;;;:::o;14952:118::-;15039:24;15057:5;15039:24;:::i;:::-;15034:3;15027:37;14952:118;;:::o;15076:222::-;15169:4;15207:2;15196:9;15192:18;15184:26;;15220:71;15288:1;15277:9;15273:17;15264:6;15220:71;:::i;:::-;15076:222;;;;:::o;15304:116::-;15374:21;15389:5;15374:21;:::i;:::-;15367:5;15364:32;15354:60;;15410:1;15407;15400:12;15354:60;15304:116;:::o;15426:133::-;15469:5;15507:6;15494:20;15485:29;;15523:30;15547:5;15523:30;:::i;:::-;15426:133;;;;:::o;15565:468::-;15630:6;15638;15687:2;15675:9;15666:7;15662:23;15658:32;15655:119;;;15693:79;;:::i;:::-;15655:119;15813:1;15838:53;15883:7;15874:6;15863:9;15859:22;15838:53;:::i;:::-;15828:63;;15784:117;15940:2;15966:50;16008:7;15999:6;15988:9;15984:22;15966:50;:::i;:::-;15956:60;;15911:115;15565:468;;;;;:::o;16039:474::-;16107:6;16115;16164:2;16152:9;16143:7;16139:23;16135:32;16132:119;;;16170:79;;:::i;:::-;16132:119;16290:1;16315:53;16360:7;16351:6;16340:9;16336:22;16315:53;:::i;:::-;16305:63;;16261:117;16417:2;16443:53;16488:7;16479:6;16468:9;16464:22;16443:53;:::i;:::-;16433:63;;16388:118;16039:474;;;;;:::o;16519:1089::-;16623:6;16631;16639;16647;16655;16704:3;16692:9;16683:7;16679:23;16675:33;16672:120;;;16711:79;;:::i;:::-;16672:120;16831:1;16856:53;16901:7;16892:6;16881:9;16877:22;16856:53;:::i;:::-;16846:63;;16802:117;16958:2;16984:53;17029:7;17020:6;17009:9;17005:22;16984:53;:::i;:::-;16974:63;;16929:118;17086:2;17112:53;17157:7;17148:6;17137:9;17133:22;17112:53;:::i;:::-;17102:63;;17057:118;17214:2;17240:53;17285:7;17276:6;17265:9;17261:22;17240:53;:::i;:::-;17230:63;;17185:118;17370:3;17359:9;17355:19;17342:33;17402:18;17394:6;17391:30;17388:117;;;17424:79;;:::i;:::-;17388:117;17529:62;17583:7;17574:6;17563:9;17559:22;17529:62;:::i;:::-;17519:72;;17313:288;16519:1089;;;;;;;;:::o;17614:329::-;17673:6;17722:2;17710:9;17701:7;17697:23;17693:32;17690:119;;;17728:79;;:::i;:::-;17690:119;17848:1;17873:53;17918:7;17909:6;17898:9;17894:22;17873:53;:::i;:::-;17863:63;;17819:117;17614:329;;;;:::o;17949:180::-;17997:77;17994:1;17987:88;18094:4;18091:1;18084:15;18118:4;18115:1;18108:15;18135:320;18179:6;18216:1;18210:4;18206:12;18196:22;;18263:1;18257:4;18253:12;18284:18;18274:81;;18340:4;18332:6;18328:17;18318:27;;18274:81;18402:2;18394:6;18391:14;18371:18;18368:38;18365:84;;18421:18;;:::i;:::-;18365:84;18186:269;18135:320;;;:::o;18461:173::-;18601:25;18597:1;18589:6;18585:14;18578:49;18461:173;:::o;18640:366::-;18782:3;18803:67;18867:2;18862:3;18803:67;:::i;:::-;18796:74;;18879:93;18968:3;18879:93;:::i;:::-;18997:2;18992:3;18988:12;18981:19;;18640:366;;;:::o;19012:419::-;19178:4;19216:2;19205:9;19201:18;19193:26;;19265:9;19259:4;19255:20;19251:1;19240:9;19236:17;19229:47;19293:131;19419:4;19293:131;:::i;:::-;19285:139;;19012:419;;;:::o;19437:180::-;19485:77;19482:1;19475:88;19582:4;19579:1;19572:15;19606:4;19603:1;19596:15;19623:191;19663:3;19682:20;19700:1;19682:20;:::i;:::-;19677:25;;19716:20;19734:1;19716:20;:::i;:::-;19711:25;;19759:1;19756;19752:9;19745:16;;19780:3;19777:1;19774:10;19771:36;;;19787:18;;:::i;:::-;19771:36;19623:191;;;;:::o;19820:233::-;19859:3;19882:24;19900:5;19882:24;:::i;:::-;19873:33;;19928:66;19921:5;19918:77;19915:103;;19998:18;;:::i;:::-;19915:103;20045:1;20038:5;20034:13;20027:20;;19820:233;;;:::o;20059:332::-;20180:4;20218:2;20207:9;20203:18;20195:26;;20231:71;20299:1;20288:9;20284:17;20275:6;20231:71;:::i;:::-;20312:72;20380:2;20369:9;20365:18;20356:6;20312:72;:::i;:::-;20059:332;;;;;:::o;20397:::-;20518:4;20556:2;20545:9;20541:18;20533:26;;20569:71;20637:1;20626:9;20622:17;20613:6;20569:71;:::i;:::-;20650:72;20718:2;20707:9;20703:18;20694:6;20650:72;:::i;:::-;20397:332;;;;;:::o;20735:180::-;20783:77;20780:1;20773:88;20880:4;20877:1;20870:15;20904:4;20901:1;20894:15;20921:178;21061:30;21057:1;21049:6;21045:14;21038:54;20921:178;:::o;21105:366::-;21247:3;21268:67;21332:2;21327:3;21268:67;:::i;:::-;21261:74;;21344:93;21433:3;21344:93;:::i;:::-;21462:2;21457:3;21453:12;21446:19;;21105:366;;;:::o;21477:419::-;21643:4;21681:2;21670:9;21666:18;21658:26;;21730:9;21724:4;21720:20;21716:1;21705:9;21701:17;21694:47;21758:131;21884:4;21758:131;:::i;:::-;21750:139;;21477:419;;;:::o;21902:194::-;21942:4;21962:20;21980:1;21962:20;:::i;:::-;21957:25;;21996:20;22014:1;21996:20;:::i;:::-;21991:25;;22040:1;22037;22033:9;22025:17;;22064:1;22058:4;22055:11;22052:37;;;22069:18;;:::i;:::-;22052:37;21902:194;;;;:::o;22102:553::-;22279:4;22317:3;22306:9;22302:19;22294:27;;22331:71;22399:1;22388:9;22384:17;22375:6;22331:71;:::i;:::-;22412:72;22480:2;22469:9;22465:18;22456:6;22412:72;:::i;:::-;22494;22562:2;22551:9;22547:18;22538:6;22494:72;:::i;:::-;22576;22644:2;22633:9;22629:18;22620:6;22576:72;:::i;:::-;22102:553;;;;;;;:::o;22661:634::-;22882:4;22920:2;22909:9;22905:18;22897:26;;22969:9;22963:4;22959:20;22955:1;22944:9;22940:17;22933:47;22997:108;23100:4;23091:6;22997:108;:::i;:::-;22989:116;;23152:9;23146:4;23142:20;23137:2;23126:9;23122:18;23115:48;23180:108;23283:4;23274:6;23180:108;:::i;:::-;23172:116;;22661:634;;;;;:::o;23301:98::-;23352:6;23386:5;23380:12;23370:22;;23301:98;;;:::o;23405:168::-;23488:11;23522:6;23517:3;23510:19;23562:4;23557:3;23553:14;23538:29;;23405:168;;;;:::o;23579:373::-;23665:3;23693:38;23725:5;23693:38;:::i;:::-;23747:70;23810:6;23805:3;23747:70;:::i;:::-;23740:77;;23826:65;23884:6;23879:3;23872:4;23865:5;23861:16;23826:65;:::i;:::-;23916:29;23938:6;23916:29;:::i;:::-;23911:3;23907:39;23900:46;;23669:283;23579:373;;;;:::o;23958:751::-;24181:4;24219:3;24208:9;24204:19;24196:27;;24233:71;24301:1;24290:9;24286:17;24277:6;24233:71;:::i;:::-;24314:72;24382:2;24371:9;24367:18;24358:6;24314:72;:::i;:::-;24396;24464:2;24453:9;24449:18;24440:6;24396:72;:::i;:::-;24478;24546:2;24535:9;24531:18;24522:6;24478:72;:::i;:::-;24598:9;24592:4;24588:20;24582:3;24571:9;24567:19;24560:49;24626:76;24697:4;24688:6;24626:76;:::i;:::-;24618:84;;23958:751;;;;;;;;:::o;24715:141::-;24771:5;24802:6;24796:13;24787:22;;24818:32;24844:5;24818:32;:::i;:::-;24715:141;;;;:::o;24862:349::-;24931:6;24980:2;24968:9;24959:7;24955:23;24951:32;24948:119;;;24986:79;;:::i;:::-;24948:119;25106:1;25131:63;25186:7;25177:6;25166:9;25162:22;25131:63;:::i;:::-;25121:73;;25077:127;24862:349;;;;:::o;25217:1053::-;25540:4;25578:3;25567:9;25563:19;25555:27;;25592:71;25660:1;25649:9;25645:17;25636:6;25592:71;:::i;:::-;25673:72;25741:2;25730:9;25726:18;25717:6;25673:72;:::i;:::-;25792:9;25786:4;25782:20;25777:2;25766:9;25762:18;25755:48;25820:108;25923:4;25914:6;25820:108;:::i;:::-;25812:116;;25975:9;25969:4;25965:20;25960:2;25949:9;25945:18;25938:48;26003:108;26106:4;26097:6;26003:108;:::i;:::-;25995:116;;26159:9;26153:4;26149:20;26143:3;26132:9;26128:19;26121:49;26187:76;26258:4;26249:6;26187:76;:::i;:::-;26179:84;;25217:1053;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1956400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"burn(address,uint256,uint256)": "infinite",
								"createToken(uint256)": "infinite",
								"currentTokenID()": "2514",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,uint256)": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "809",
								"tokenSupply(uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 177,
									"end": 1228,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 177,
									"end": 1228,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 177,
									"end": 1228,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 259,
									"end": 260,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 227,
									"end": 260,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 227,
									"end": 260,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 322,
									"end": 431,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 322,
									"end": 431,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 322,
									"end": 431,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 322,
									"end": 431,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 322,
									"end": 431,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 322,
									"end": 431,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 322,
									"end": 431,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 322,
									"end": 431,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 322,
									"end": 431,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 415,
									"end": 427,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH data",
									"source": 2,
									"value": "FD42E37E574D3160D6BF72B4767F7C9049458802DAE3537F42A2E54DD3E11AF5"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 322,
									"end": 431,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 177,
									"end": 1228,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 177,
									"end": 1228,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10355,
									"end": 10361,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10348,
									"end": 10361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10282,
									"end": 10368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1606,
									"end": 1612,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1640,
									"end": 1645,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1634,
									"end": 1646,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1554,
									"end": 1653,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1659,
									"end": 1839,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1659,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1707,
									"end": 1784,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1704,
									"end": 1705,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1697,
									"end": 1785,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1804,
									"end": 1808,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1801,
									"end": 1802,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1794,
									"end": 1809,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1828,
									"end": 1832,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1825,
									"end": 1826,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1818,
									"end": 1833,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1845,
									"end": 2025,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1845,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1893,
									"end": 1970,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1890,
									"end": 1891,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1883,
									"end": 1971,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1990,
									"end": 1994,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1987,
									"end": 1988,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1980,
									"end": 1995,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2014,
									"end": 2018,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2011,
									"end": 2012,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2004,
									"end": 2019,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2075,
									"end": 2081,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2112,
									"end": 2113,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 2106,
									"end": 2110,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2102,
									"end": 2114,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 2092,
									"end": 2114,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2092,
									"end": 2114,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2159,
									"end": 2160,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2153,
									"end": 2157,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2149,
									"end": 2161,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2180,
									"end": 2198,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2236,
									"end": 2240,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2224,
									"end": 2241,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2214,
									"end": 2241,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2214,
									"end": 2241,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2298,
									"end": 2300,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2287,
									"end": 2301,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2267,
									"end": 2285,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2264,
									"end": 2302,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 2317,
									"end": 2335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2082,
									"end": 2351,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2031,
									"end": 2351,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2432,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2421,
									"end": 2432,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2421,
									"end": 2432,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2452,
									"end": 2455,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2442,
									"end": 2456,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2486,
									"end": 2490,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2473,
									"end": 2491,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 2465,
									"end": 2491,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2465,
									"end": 2491,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2357,
									"end": 2498,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2588,
									"end": 2590,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2583,
									"end": 2585,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2576,
									"end": 2581,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2572,
									"end": 2586,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2568,
									"end": 2591,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 2558,
									"end": 2591,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2558,
									"end": 2591,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2597,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2647,
									"end": 2655,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2697,
									"end": 2702,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2691,
									"end": 2695,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 2703,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2666,
									"end": 2703,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2666,
									"end": 2703,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2603,
									"end": 2710,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2785,
									"end": 2791,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2835,
									"end": 2836,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 2823,
									"end": 2833,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2819,
									"end": 2837,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 2888,
									"end": 2954,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2877,
									"end": 2886,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 2858,
									"end": 2955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3006,
									"end": 3014,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2995,
									"end": 3004,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 2976,
									"end": 3015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2964,
									"end": 3015,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 2964,
									"end": 3015,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3048,
									"end": 3052,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3044,
									"end": 3053,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 3042,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3033,
									"end": 3054,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3024,
									"end": 3054,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 3024,
									"end": 3054,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3097,
									"end": 3101,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3087,
									"end": 3095,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3083,
									"end": 3102,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3076,
									"end": 3081,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3073,
									"end": 3103,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 3063,
									"end": 3103,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3063,
									"end": 3103,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2792,
									"end": 3109,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2792,
									"end": 3109,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3109,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3152,
									"end": 3159,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3181,
									"end": 3186,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3170,
									"end": 3186,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3170,
									"end": 3186,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3115,
									"end": 3192,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3226,
									"end": 3229,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3247,
									"end": 3252,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3240,
									"end": 3252,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3240,
									"end": 3252,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3198,
									"end": 3258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3314,
									"end": 3323,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 3392,
									"end": 3397,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 3374,
									"end": 3398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 3365,
									"end": 3399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 3347,
									"end": 3400,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3334,
									"end": 3400,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3334,
									"end": 3400,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3264,
									"end": 3406,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3455,
									"end": 3458,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3476,
									"end": 3481,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3469,
									"end": 3481,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3469,
									"end": 3481,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3412,
									"end": 3487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 3634,
									"end": 3641,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3603,
									"end": 3642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 3737,
									"end": 3753,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 3713,
									"end": 3754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3705,
									"end": 3711,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3698,
									"end": 3702,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3692,
									"end": 3703,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 3664,
									"end": 3755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "tag",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3658,
									"end": 3662,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3651,
									"end": 3756,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3569,
									"end": 3762,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3493,
									"end": 3762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3813,
									"end": 3816,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3768,
									"end": 3841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 3924,
									"end": 3956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 4023,
									"end": 4029,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4015,
									"end": 4021,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4009,
									"end": 4013,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 3965,
									"end": 4030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "tag",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3900,
									"end": 4036,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3847,
									"end": 4036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4119,
									"end": 4122,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4112,
									"end": 4117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4109,
									"end": 4123,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 4210,
									"end": 4211,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4203,
									"end": 4208,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 4173,
									"end": 4212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4146,
									"end": 4147,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4139,
									"end": 4144,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4135,
									"end": 4148,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4126,
									"end": 4148,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4126,
									"end": 4148,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4042,
									"end": 4228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 4337,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4330,
									"end": 4333,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4327,
									"end": 4338,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 4401,
									"end": 4406,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 4369,
									"end": 4407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "tag",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 4471,
									"end": 4481,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 4453,
									"end": 4482,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "tag",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4439,
									"end": 4483,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4636,
									"end": 4638,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4624,
									"end": 4634,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4621,
									"end": 4639,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4657,
									"end": 4665,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4642,
									"end": 4665,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4642,
									"end": 4665,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "tag",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 4754,
									"end": 4757,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 4736,
									"end": 4758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "tag",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4726,
									"end": 4734,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4722,
									"end": 4759,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4709,
									"end": 4720,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 4680,
									"end": 4760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "tag",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4339,
									"end": 4770,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4339,
									"end": 4770,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "tag",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4234,
									"end": 4777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4837,
									"end": 4845,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4887,
									"end": 4892,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4881,
									"end": 4885,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4877,
									"end": 4893,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 4856,
									"end": 4893,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4856,
									"end": 4893,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4783,
									"end": 4900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4956,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 5031,
									"end": 5032,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5027,
									"end": 5033,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5019,
									"end": 5024,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5016,
									"end": 5017,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 4983,
									"end": 5034,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "tag",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4979,
									"end": 5035,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5064,
									"end": 5068,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5058,
									"end": 5062,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5054,
									"end": 5069,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5044,
									"end": 5069,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5044,
									"end": 5069,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4957,
									"end": 5075,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4906,
									"end": 5075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5156,
									"end": 5160,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5327,
									"end": 5330,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5321,
									"end": 5325,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 5302,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "tag",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5294,
									"end": 5331,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5294,
									"end": 5331,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5364,
									"end": 5367,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5361,
									"end": 5362,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 5357,
									"end": 5368,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 5351,
									"end": 5355,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5348,
									"end": 5369,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 5340,
									"end": 5369,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5340,
									"end": 5369,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5080,
									"end": 5375,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 5530,
									"end": 5533,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 5497,
									"end": 5534,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "tag",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5599,
									"end": 5617,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5591,
									"end": 5597,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5588,
									"end": 5618,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 5621,
									"end": 5639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 5697,
									"end": 5701,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5691,
									"end": 5702,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 5665,
									"end": 5703,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "tag",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 5810,
									"end": 5816,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5802,
									"end": 5808,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5796,
									"end": 5800,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 5750,
									"end": 5817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "tag",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5844,
									"end": 5845,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5868,
									"end": 5872,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5855,
									"end": 5872,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5855,
									"end": 5872,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5900,
									"end": 5902,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5892,
									"end": 5898,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5889,
									"end": 5903,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5917,
									"end": 5918,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6574,
									"end": 6575,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6591,
									"end": 6597,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6640,
									"end": 6649,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6635,
									"end": 6638,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 6631,
									"end": 6650,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6625,
									"end": 6651,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6616,
									"end": 6651,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6616,
									"end": 6651,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 6751,
									"end": 6757,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6744,
									"end": 6749,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 6691,
									"end": 6758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "tag",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6685,
									"end": 6689,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 6678,
									"end": 6759,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6547,
									"end": 6769,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "tag",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5964,
									"end": 5968,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5960,
									"end": 5969,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5952,
									"end": 5958,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5948,
									"end": 5970,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 6030,
									"end": 6034,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 5998,
									"end": 6035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "tag",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6057,
									"end": 6058,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "tag",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6085,
									"end": 6092,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6082,
									"end": 6083,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6079,
									"end": 6093,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6164,
									"end": 6173,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6159,
									"end": 6162,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6155,
									"end": 6174,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6149,
									"end": 6175,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6141,
									"end": 6147,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6134,
									"end": 6176,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6215,
									"end": 6216,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6207,
									"end": 6213,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6203,
									"end": 6217,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6193,
									"end": 6217,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6193,
									"end": 6217,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6262,
									"end": 6264,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6251,
									"end": 6260,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6247,
									"end": 6265,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6234,
									"end": 6265,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 6234,
									"end": 6265,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6108,
									"end": 6112,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6105,
									"end": 6106,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6101,
									"end": 6113,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6096,
									"end": 6113,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6096,
									"end": 6113,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "tag",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6307,
									"end": 6313,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 6298,
									"end": 6305,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6295,
									"end": 6314,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6365,
									"end": 6374,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6360,
									"end": 6363,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6356,
									"end": 6375,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6350,
									"end": 6376,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 6450,
									"end": 6454,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 6442,
									"end": 6448,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6438,
									"end": 6455,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6427,
									"end": 6436,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 6408,
									"end": 6456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "tag",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6400,
									"end": 6406,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6393,
									"end": 6457,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6315,
									"end": 6471,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "tag",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6517,
									"end": 6518,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6513,
									"end": 6514,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 6505,
									"end": 6511,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 6501,
									"end": 6515,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 6497,
									"end": 6519,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6491,
									"end": 6495,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 6484,
									"end": 6520,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "tag",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5380,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 177,
									"end": 1228,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 177,
									"end": 1228,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 177,
									"end": 1228,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 1228,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 177,
									"end": 1228,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 1228,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 1228,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 177,
									"end": 1228,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 1228,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202fde6745a2b87497aff98210e40bbd18a820eda07f0606fb93a7317fb830dbd564736f6c63430008190033",
									".code": [
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "E985E9C5"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "E985E9C5"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "F242432A"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "F5298ACA"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "BB62115E"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "2693EBF2"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "2693EBF2"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "2D571CC4"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "2EB2C2D6"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "4E1273F4"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "FDD58E"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "E89341C"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "156E29F6"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 177,
											"end": 1228,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 734,
											"end": 973,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 734,
											"end": 973,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 734,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 734,
											"end": 973,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 734,
											"end": 973,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 973,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 734,
											"end": 973,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 734,
											"end": 973,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 734,
											"end": 973,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 734,
											"end": 973,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 734,
											"end": 973,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 734,
											"end": 973,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 734,
											"end": 973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 734,
											"end": 973,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 734,
											"end": 973,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 734,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 734,
											"end": 973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 734,
											"end": 973,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 734,
											"end": 973,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 734,
											"end": 973,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 267,
											"end": 313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 267,
											"end": 313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 267,
											"end": 313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 439,
											"end": 726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 439,
											"end": 726,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 439,
											"end": 726,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 439,
											"end": 726,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 439,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 439,
											"end": 726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 439,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 439,
											"end": 726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 726,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 439,
											"end": 726,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 439,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 439,
											"end": 726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 726,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 227,
											"end": 260,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 227,
											"end": 260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 227,
											"end": 260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 227,
											"end": 260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 227,
											"end": 260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 227,
											"end": 260,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 227,
											"end": 260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 227,
											"end": 260,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 260,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 227,
											"end": 260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 227,
											"end": 260,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 227,
											"end": 260,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 227,
											"end": 260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 227,
											"end": 260,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 227,
											"end": 260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 227,
											"end": 260,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 260,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 227,
											"end": 260,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 260,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 227,
											"end": 260,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 227,
											"end": 260,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 260,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 981,
											"end": 1225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 981,
											"end": 1225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1642,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 734,
											"end": 973,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 734,
											"end": 973,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 854,
											"end": 855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 831,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 850,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 831,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 831,
											"end": 851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 831,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 831,
											"end": 851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 831,
											"end": 851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 831,
											"end": 851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 831,
											"end": 851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 831,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 831,
											"end": 851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 831,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 851,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 831,
											"end": 851,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 831,
											"end": 855,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 823,
											"end": 883,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 823,
											"end": 883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 894,
											"end": 924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 900,
											"end": 902,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 904,
											"end": 911,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 913,
											"end": 919,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 894,
											"end": 924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 924,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 894,
											"end": 924,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 894,
											"end": 924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 924,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 894,
											"end": 924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 924,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 894,
											"end": 924,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 894,
											"end": 924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 894,
											"end": 924,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 894,
											"end": 924,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 894,
											"end": 899,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 894,
											"end": 924,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 894,
											"end": 924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 894,
											"end": 924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 959,
											"end": 965,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 935,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 935,
											"end": 955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 954,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 935,
											"end": 955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 935,
											"end": 955,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 935,
											"end": 955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 935,
											"end": 955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 935,
											"end": 955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 935,
											"end": 955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 935,
											"end": 955,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 935,
											"end": 955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 935,
											"end": 955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 935,
											"end": 955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 955,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 935,
											"end": 955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 965,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 935,
											"end": 965,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 935,
											"end": 965,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 935,
											"end": 965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 935,
											"end": 965,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 935,
											"end": 965,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 935,
											"end": 965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 935,
											"end": 965,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 935,
											"end": 965,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 935,
											"end": 965,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 935,
											"end": 965,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 935,
											"end": 965,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 935,
											"end": 965,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 935,
											"end": 965,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 935,
											"end": 965,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 935,
											"end": 965,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 935,
											"end": 965,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 734,
											"end": 973,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 734,
											"end": 973,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 734,
											"end": 973,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 734,
											"end": 973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 267,
											"end": 313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 439,
											"end": 726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 511,
											"end": 518,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 531,
											"end": 546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 549,
											"end": 563,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 531,
											"end": 563,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 531,
											"end": 563,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 574,
											"end": 588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 574,
											"end": 588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 590,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 574,
											"end": 590,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 574,
											"end": 590,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 574,
											"end": 590,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 574,
											"end": 590,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 574,
											"end": 590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 574,
											"end": 590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 574,
											"end": 590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 574,
											"end": 590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 574,
											"end": 590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 574,
											"end": 590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 574,
											"end": 590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 574,
											"end": 590,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 574,
											"end": 590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 574,
											"end": 590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 574,
											"end": 590,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 574,
											"end": 590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 601,
											"end": 646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 607,
											"end": 617,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 619,
											"end": 626,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 628,
											"end": 641,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 601,
											"end": 646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 646,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 601,
											"end": 646,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 601,
											"end": 646,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 601,
											"end": 646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 646,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 601,
											"end": 646,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 601,
											"end": 646,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 601,
											"end": 646,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 601,
											"end": 606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 601,
											"end": 646,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 601,
											"end": 646,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 601,
											"end": 646,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 680,
											"end": 693,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 657,
											"end": 668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 657,
											"end": 677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 676,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 657,
											"end": 677,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 657,
											"end": 677,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 657,
											"end": 677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 657,
											"end": 677,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 657,
											"end": 677,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 657,
											"end": 677,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 657,
											"end": 677,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 657,
											"end": 677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 657,
											"end": 677,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 657,
											"end": 677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 677,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 657,
											"end": 693,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 657,
											"end": 693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 657,
											"end": 693,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 657,
											"end": 693,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 711,
											"end": 718,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 704,
											"end": 718,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 704,
											"end": 718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 704,
											"end": 718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 439,
											"end": 726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4225,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4225,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4255,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4270,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4300,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4323,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4385,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4198,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2707,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2790,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2744,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2852,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3017,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2972,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2953,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3260,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3260,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3282,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3292,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3241,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 227,
											"end": 260,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 227,
											"end": 260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 227,
											"end": 260,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 260,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 227,
											"end": 260,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 227,
											"end": 260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3506,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3516,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3731,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3731,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3761,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3776,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3829,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 3891,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1098,
											"end": 1104,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1070,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1080,
											"end": 1084,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1086,
											"end": 1093,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1070,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 1070,
											"end": 1094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1070,
											"end": 1094,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1070,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1070,
											"end": 1104,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1070,
											"end": 1104,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1062,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1148,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1154,
											"end": 1158,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1160,
											"end": 1167,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1169,
											"end": 1175,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1148,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1148,
											"end": 1176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1148,
											"end": 1176,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1148,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1198,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1187,
											"end": 1207,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1206,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1207,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1207,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1207,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1207,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1207,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1207,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1207,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1207,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1207,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1207,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1207,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1207,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1217,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1217,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1217,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1187,
											"end": 1217,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1217,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 1187,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1217,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1187,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1217,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1217,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1217,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1217,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 981,
											"end": 1225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 981,
											"end": 1225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10912,
											"end": 10913,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 10881,
											"end": 10915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10958,
											"end": 10981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 11004,
											"end": 11006,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11008,
											"end": 11013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 10985,
											"end": 11014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 11059,
											"end": 11060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11065,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11067,
											"end": 11070,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11080,
											"end": 11084,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 11024,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9210,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 9247,
											"end": 9281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9309,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 9346,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 9425,
											"end": 9429,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 9398,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4290,
											"end": 4301,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4373,
											"end": 4376,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4383,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4360,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4353,
											"end": 4367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4343,
											"end": 4385,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13395,
											"end": 13396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13383,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13451,
											"end": 13452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "CED3E10000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 13420,
											"end": 13454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13512,
											"end": 13520,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13493,
											"end": 13498,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13508,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13557,
											"end": 13565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13550,
											"end": 13555,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13567,
											"end": 13575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 13535,
											"end": 13576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 8312,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8374,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 8411,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8536,
											"end": 8541,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 8513,
											"end": 8542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 8552,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12194,
											"end": 12195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12178,
											"end": 12182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12248,
											"end": 12249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 12219,
											"end": 12251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12292,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12294,
											"end": 12317,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 12340,
											"end": 12342,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12344,
											"end": 12349,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12321,
											"end": 12339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 12321,
											"end": 12350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 12387,
											"end": 12391,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12401,
											"end": 12402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12405,
											"end": 12408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12410,
											"end": 12416,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 12360,
											"end": 12421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12164,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12164,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16188,
											"end": 16211,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 16213,
											"end": 16236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16436,
											"end": 16442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16582,
											"end": 16590,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16567,
											"end": 16573,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16704,
											"end": 16708,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16696,
											"end": 16702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16737,
											"end": 16738,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16729,
											"end": 16735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16771,
											"end": 16775,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16763,
											"end": 16769,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16907,
											"end": 16911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16899,
											"end": 16905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 7205,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7251,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 7300,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 7300,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 7514,
											"end": 7522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7538,
											"end": 7543,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 7483,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 7625,
											"end": 7633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 7589,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7267,
											"end": 7688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5292,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5315,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 5407,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5407,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5559,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5604,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5672,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5715,
											"end": 5720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5784,
											"end": 5795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5797,
											"end": 5802,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5751,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5952,
											"end": 5954,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 6016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6080,
											"end": 6082,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 6070,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6182,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 6260,
											"end": 6261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6240,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6281,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 6362,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13985,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14377,
											"end": 14378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14360,
											"end": 14373,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14487,
											"end": 14489,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 14464,
											"end": 14490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14651,
											"end": 14664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14642,
											"end": 14648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14638,
											"end": 14640,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14634,
											"end": 14649,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14627,
											"end": 14665,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14273,
											"end": 14275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 14250,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14077,
											"end": 14309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15171,
											"end": 15172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15154,
											"end": 15156,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15172,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15209,
											"end": 15211,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 15236,
											"end": 15244,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15246,
											"end": 15250,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15257,
											"end": 15263,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15265,
											"end": 15269,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15606,
											"end": 15607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15589,
											"end": 15595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15589,
											"end": 15602,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15589,
											"end": 15607,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15716,
											"end": 15718,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 15693,
											"end": 15719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15886,
											"end": 15892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15880,
											"end": 15893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15871,
											"end": 15877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15867,
											"end": 15869,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15863,
											"end": 15878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15856,
											"end": 15894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15357,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 15504,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 15479,
											"end": 15505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15271,
											"end": 15538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 3327,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3548,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3917,
											"end": 3923,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3912,
											"end": 3915,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3910,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3901,
											"end": 3924,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 3958,
											"end": 3959,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3955,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3944,
											"end": 3947,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3933,
											"end": 3960,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4014,
											"end": 4020,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4067,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4061,
											"end": 4068,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4056,
											"end": 4058,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4054,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4045,
											"end": 4059,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4041,
											"end": 4069,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4031,
											"end": 4069,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4031,
											"end": 4069,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3973,
											"end": 4075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4169,
											"end": 4172,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 4230,
											"end": 4235,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4197,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 4197,
											"end": 4236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4197,
											"end": 4236,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 4197,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4252,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 4316,
											"end": 4322,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4311,
											"end": 4314,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4252,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 4252,
											"end": 4323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4252,
											"end": 4323,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 4252,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4245,
											"end": 4323,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4245,
											"end": 4323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 4390,
											"end": 4396,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4385,
											"end": 4388,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4371,
											"end": 4376,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 4332,
											"end": 4397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 4397,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 4332,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 4444,
											"end": 4450,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 4422,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4417,
											"end": 4420,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4413,
											"end": 4452,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4452,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4452,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4173,
											"end": 4458,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4577,
											"end": 4581,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4617,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4592,
											"end": 4618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4592,
											"end": 4618,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4664,
											"end": 4673,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4654,
											"end": 4674,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4650,
											"end": 4651,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4648,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4635,
											"end": 4652,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4628,
											"end": 4675,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4692,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4762,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4692,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 4692,
											"end": 4770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4692,
											"end": 4770,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 4692,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4684,
											"end": 4770,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4684,
											"end": 4770,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4464,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5525,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 5408,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5517,
											"end": 5518,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5515,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5507,
											"end": 5519,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5531,
											"end": 5711,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 5531,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5579,
											"end": 5656,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5576,
											"end": 5577,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5569,
											"end": 5657,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5680,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 5673,
											"end": 5674,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5666,
											"end": 5681,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5700,
											"end": 5704,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5697,
											"end": 5698,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5705,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5717,
											"end": 5998,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 5717,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 5822,
											"end": 5826,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 5800,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5827,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 5800,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5792,
											"end": 5798,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5788,
											"end": 5828,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5918,
											"end": 5928,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5882,
											"end": 5892,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5879,
											"end": 5913,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5876,
											"end": 5938,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5873,
											"end": 5961,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5873,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 5873,
											"end": 5961,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 5941,
											"end": 5959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5873,
											"end": 5961,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 5873,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5981,
											"end": 5991,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5977,
											"end": 5979,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5970,
											"end": 5992,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5760,
											"end": 5998,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5717,
											"end": 5998,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5717,
											"end": 5998,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5717,
											"end": 5998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6004,
											"end": 6133,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 6004,
											"end": 6133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6038,
											"end": 6044,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 6065,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 6065,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6065,
											"end": 6085,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 6065,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6055,
											"end": 6085,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6055,
											"end": 6085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 6122,
											"end": 6126,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6114,
											"end": 6120,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 6094,
											"end": 6127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6127,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 6094,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6004,
											"end": 6133,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6004,
											"end": 6133,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6004,
											"end": 6133,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6004,
											"end": 6133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6139,
											"end": 6450,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 6139,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6216,
											"end": 6220,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6306,
											"end": 6324,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6298,
											"end": 6304,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6295,
											"end": 6325,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6292,
											"end": 6348,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6292,
											"end": 6348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 6292,
											"end": 6348,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6328,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 6328,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 6328,
											"end": 6346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6328,
											"end": 6346,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 6328,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6292,
											"end": 6348,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 6292,
											"end": 6348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6378,
											"end": 6382,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6370,
											"end": 6376,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6383,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6383,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6438,
											"end": 6442,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6436,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6428,
											"end": 6443,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6420,
											"end": 6443,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6420,
											"end": 6443,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6139,
											"end": 6450,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6139,
											"end": 6450,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6139,
											"end": 6450,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6139,
											"end": 6450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6456,
											"end": 6573,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 6456,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6555,
											"end": 6567,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 7306,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 6596,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6692,
											"end": 6697,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6717,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 6733,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 6733,
											"end": 6797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6797,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 6733,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 6717,
											"end": 6798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6798,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 6717,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6708,
											"end": 6798,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6708,
											"end": 6798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6818,
											"end": 6823,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6847,
											"end": 6853,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6845,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6833,
											"end": 6854,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6881,
											"end": 6885,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6874,
											"end": 6879,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6870,
											"end": 6886,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6863,
											"end": 6886,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6863,
											"end": 6886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6926,
											"end": 6932,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6922,
											"end": 6939,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6914,
											"end": 6920,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6910,
											"end": 6940,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6963,
											"end": 6966,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6955,
											"end": 6961,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6952,
											"end": 6967,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7071,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 6949,
											"end": 7071,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6982,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 6982,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 6982,
											"end": 7061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6982,
											"end": 7061,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 6982,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7071,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 6949,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7097,
											"end": 7103,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7300,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 7080,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7114,
											"end": 7120,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7109,
											"end": 7112,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7106,
											"end": 7121,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7300,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 7080,
											"end": 7300,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7189,
											"end": 7192,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7218,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 7251,
											"end": 7254,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7239,
											"end": 7249,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7218,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 7218,
											"end": 7255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7218,
											"end": 7255,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 7218,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7213,
											"end": 7216,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7206,
											"end": 7256,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7285,
											"end": 7289,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7280,
											"end": 7283,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7276,
											"end": 7290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7269,
											"end": 7290,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7269,
											"end": 7290,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7140,
											"end": 7144,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7135,
											"end": 7138,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7145,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7124,
											"end": 7145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7124,
											"end": 7145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 7080,
											"end": 7300,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7300,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 7080,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7084,
											"end": 7105,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6698,
											"end": 7306,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6698,
											"end": 7306,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 7306,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 7306,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 7306,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 7306,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 7306,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 7306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7329,
											"end": 7699,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 7329,
											"end": 7699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7400,
											"end": 7405,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7442,
											"end": 7446,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 7434,
											"end": 7440,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7430,
											"end": 7447,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7426,
											"end": 7453,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7416,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 7416,
											"end": 7538,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7457,
											"end": 7536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 7457,
											"end": 7536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 7457,
											"end": 7536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7457,
											"end": 7536,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 7457,
											"end": 7536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7416,
											"end": 7538,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 7416,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7574,
											"end": 7580,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7561,
											"end": 7581,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7599,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 7689,
											"end": 7692,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7681,
											"end": 7687,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7674,
											"end": 7678,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7666,
											"end": 7672,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7662,
											"end": 7679,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7599,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 7599,
											"end": 7693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7599,
											"end": 7693,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 7599,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7590,
											"end": 7693,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7590,
											"end": 7693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7406,
											"end": 7699,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7329,
											"end": 7699,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7329,
											"end": 7699,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7329,
											"end": 7699,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7329,
											"end": 7699,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7329,
											"end": 7699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7705,
											"end": 7822,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 7705,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7814,
											"end": 7815,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7811,
											"end": 7812,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7804,
											"end": 7816,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7828,
											"end": 8135,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 7828,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7889,
											"end": 7893,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7979,
											"end": 7997,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7971,
											"end": 7977,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7968,
											"end": 7998,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7965,
											"end": 8021,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7965,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 7965,
											"end": 8021,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8001,
											"end": 8019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 8001,
											"end": 8019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 8001,
											"end": 8019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8001,
											"end": 8019,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 8001,
											"end": 8019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7965,
											"end": 8021,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 7965,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8039,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 8061,
											"end": 8067,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8039,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 8039,
											"end": 8068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8039,
											"end": 8068,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 8039,
											"end": 8068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8123,
											"end": 8127,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8117,
											"end": 8121,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8113,
											"end": 8128,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8105,
											"end": 8128,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8105,
											"end": 8128,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7828,
											"end": 8135,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7828,
											"end": 8135,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7828,
											"end": 8135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7828,
											"end": 8135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8141,
											"end": 8289,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 8141,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8239,
											"end": 8245,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8234,
											"end": 8237,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8229,
											"end": 8232,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8246,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8281,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8271,
											"end": 8277,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8266,
											"end": 8269,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8262,
											"end": 8278,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8255,
											"end": 8282,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8141,
											"end": 8289,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8141,
											"end": 8289,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8141,
											"end": 8289,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8141,
											"end": 8289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8718,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 8295,
											"end": 8718,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8372,
											"end": 8377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8397,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 8413,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 8454,
											"end": 8460,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8413,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 8413,
											"end": 8461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8413,
											"end": 8461,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 8413,
											"end": 8461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8397,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 8397,
											"end": 8462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8397,
											"end": 8462,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 8397,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8388,
											"end": 8462,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8388,
											"end": 8462,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8485,
											"end": 8491,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8478,
											"end": 8483,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8471,
											"end": 8492,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8523,
											"end": 8527,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8516,
											"end": 8521,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8512,
											"end": 8528,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8561,
											"end": 8564,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8552,
											"end": 8558,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8547,
											"end": 8550,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8543,
											"end": 8559,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8540,
											"end": 8565,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8537,
											"end": 8649,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8537,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 8537,
											"end": 8649,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 8568,
											"end": 8647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 8568,
											"end": 8647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8647,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 8568,
											"end": 8647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8537,
											"end": 8649,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 8537,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8658,
											"end": 8712,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 8705,
											"end": 8711,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8700,
											"end": 8703,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 8698,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8658,
											"end": 8712,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 8658,
											"end": 8712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8658,
											"end": 8712,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 8658,
											"end": 8712,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8378,
											"end": 8718,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8718,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8718,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8718,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8718,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8718,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8737,
											"end": 9075,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 8737,
											"end": 9075,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8792,
											"end": 8797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8841,
											"end": 8844,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8834,
											"end": 8838,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 8826,
											"end": 8832,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8839,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8818,
											"end": 8845,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8808,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 8808,
											"end": 8930,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8849,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 8849,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 8849,
											"end": 8928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8849,
											"end": 8928,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 8849,
											"end": 8928,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8808,
											"end": 8930,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 8808,
											"end": 8930,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8953,
											"end": 8973,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8991,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 9065,
											"end": 9068,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9057,
											"end": 9063,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9050,
											"end": 9054,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9042,
											"end": 9048,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9038,
											"end": 9055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8991,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 8991,
											"end": 9069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8991,
											"end": 9069,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 8991,
											"end": 9069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8982,
											"end": 9069,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8982,
											"end": 9069,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8798,
											"end": 9075,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8737,
											"end": 9075,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8737,
											"end": 9075,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8737,
											"end": 9075,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8737,
											"end": 9075,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8737,
											"end": 9075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9081,
											"end": 10590,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 9081,
											"end": 10590,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9235,
											"end": 9241,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9243,
											"end": 9249,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9251,
											"end": 9257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9259,
											"end": 9265,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9267,
											"end": 9273,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9316,
											"end": 9319,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 9304,
											"end": 9313,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9295,
											"end": 9302,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9291,
											"end": 9314,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9287,
											"end": 9320,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9284,
											"end": 9404,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9284,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 9284,
											"end": 9404,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9323,
											"end": 9402,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 9323,
											"end": 9402,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 9323,
											"end": 9402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9323,
											"end": 9402,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 9323,
											"end": 9402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9284,
											"end": 9404,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 9284,
											"end": 9404,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9443,
											"end": 9444,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9468,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 9513,
											"end": 9520,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9504,
											"end": 9510,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9493,
											"end": 9502,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 9489,
											"end": 9511,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9468,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 9468,
											"end": 9521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9468,
											"end": 9521,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 9468,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9458,
											"end": 9521,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 9458,
											"end": 9521,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9414,
											"end": 9531,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9570,
											"end": 9572,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9596,
											"end": 9649,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 9641,
											"end": 9648,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9632,
											"end": 9638,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9621,
											"end": 9630,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9639,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9596,
											"end": 9649,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 9596,
											"end": 9649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9596,
											"end": 9649,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 9596,
											"end": 9649,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9586,
											"end": 9649,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9586,
											"end": 9649,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9541,
											"end": 9659,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9726,
											"end": 9728,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9715,
											"end": 9724,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9711,
											"end": 9729,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9698,
											"end": 9730,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9757,
											"end": 9775,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9749,
											"end": 9755,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9746,
											"end": 9776,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9743,
											"end": 9860,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9743,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 9743,
											"end": 9860,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9779,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 9779,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 9779,
											"end": 9858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9779,
											"end": 9858,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 9779,
											"end": 9858,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9743,
											"end": 9860,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 9743,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9884,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 9954,
											"end": 9961,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9945,
											"end": 9951,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9934,
											"end": 9943,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9884,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 9884,
											"end": 9962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9884,
											"end": 9962,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 9884,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9874,
											"end": 9962,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9874,
											"end": 9962,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9669,
											"end": 9972,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10039,
											"end": 10041,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 10028,
											"end": 10037,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10024,
											"end": 10042,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10011,
											"end": 10043,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10070,
											"end": 10088,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10062,
											"end": 10068,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10059,
											"end": 10089,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10056,
											"end": 10173,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10056,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 10056,
											"end": 10173,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10092,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 10092,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 10092,
											"end": 10171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10092,
											"end": 10171,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 10092,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10056,
											"end": 10173,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 10056,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10197,
											"end": 10275,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 10267,
											"end": 10274,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10258,
											"end": 10264,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10247,
											"end": 10256,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 10243,
											"end": 10265,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10197,
											"end": 10275,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 10197,
											"end": 10275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10197,
											"end": 10275,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 10197,
											"end": 10275,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10187,
											"end": 10275,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10187,
											"end": 10275,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9982,
											"end": 10285,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10352,
											"end": 10355,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 10341,
											"end": 10350,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10337,
											"end": 10356,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10324,
											"end": 10357,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10376,
											"end": 10382,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10373,
											"end": 10403,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10370,
											"end": 10487,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10370,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 10370,
											"end": 10487,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10406,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 10406,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 10406,
											"end": 10485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10406,
											"end": 10485,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 10406,
											"end": 10485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10370,
											"end": 10487,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 10370,
											"end": 10487,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10511,
											"end": 10573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 10565,
											"end": 10572,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10556,
											"end": 10562,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10545,
											"end": 10554,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 10541,
											"end": 10563,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10511,
											"end": 10573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 10511,
											"end": 10573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10511,
											"end": 10573,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 10511,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10501,
											"end": 10573,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10501,
											"end": 10573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10295,
											"end": 10583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9081,
											"end": 10590,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9081,
											"end": 10590,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 9081,
											"end": 10590,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9081,
											"end": 10590,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9081,
											"end": 10590,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 9081,
											"end": 10590,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9081,
											"end": 10590,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9081,
											"end": 10590,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9081,
											"end": 10590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10596,
											"end": 10907,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 10596,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10673,
											"end": 10677,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10763,
											"end": 10781,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10755,
											"end": 10761,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10752,
											"end": 10782,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10749,
											"end": 10805,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10749,
											"end": 10805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 10749,
											"end": 10805,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 10785,
											"end": 10803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 10785,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10749,
											"end": 10805,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 10749,
											"end": 10805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10839,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10827,
											"end": 10833,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10823,
											"end": 10840,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 10815,
											"end": 10840,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10815,
											"end": 10840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10895,
											"end": 10899,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10889,
											"end": 10893,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10885,
											"end": 10900,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 10900,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 10900,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10596,
											"end": 10907,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10596,
											"end": 10907,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10596,
											"end": 10907,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10596,
											"end": 10907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10930,
											"end": 11640,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 10930,
											"end": 11640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11026,
											"end": 11031,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11051,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 11067,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11067,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 11067,
											"end": 11131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11067,
											"end": 11131,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 11067,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11051,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 11051,
											"end": 11132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11051,
											"end": 11132,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 11051,
											"end": 11132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11042,
											"end": 11132,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11042,
											"end": 11132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11152,
											"end": 11157,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11181,
											"end": 11187,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11174,
											"end": 11179,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11167,
											"end": 11188,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11215,
											"end": 11219,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11208,
											"end": 11213,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11204,
											"end": 11220,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11197,
											"end": 11220,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11268,
											"end": 11272,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11260,
											"end": 11266,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11256,
											"end": 11273,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 11248,
											"end": 11254,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11244,
											"end": 11274,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11297,
											"end": 11300,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11295,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11286,
											"end": 11301,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11283,
											"end": 11405,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11283,
											"end": 11405,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 11283,
											"end": 11405,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11316,
											"end": 11395,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 11316,
											"end": 11395,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 11316,
											"end": 11395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11316,
											"end": 11395,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 11316,
											"end": 11395,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11283,
											"end": 11405,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 11283,
											"end": 11405,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11431,
											"end": 11437,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11414,
											"end": 11634,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 11414,
											"end": 11634,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11448,
											"end": 11454,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11443,
											"end": 11446,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11440,
											"end": 11455,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 11414,
											"end": 11634,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11414,
											"end": 11634,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 11414,
											"end": 11634,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11523,
											"end": 11526,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11552,
											"end": 11589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 11585,
											"end": 11588,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11573,
											"end": 11583,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11552,
											"end": 11589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 11552,
											"end": 11589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11552,
											"end": 11589,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 11552,
											"end": 11589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11547,
											"end": 11550,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11590,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11619,
											"end": 11623,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11614,
											"end": 11617,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11610,
											"end": 11624,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11603,
											"end": 11624,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11603,
											"end": 11624,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11490,
											"end": 11634,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11474,
											"end": 11478,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11469,
											"end": 11472,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11465,
											"end": 11479,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11458,
											"end": 11479,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11458,
											"end": 11479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11414,
											"end": 11634,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 11414,
											"end": 11634,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11414,
											"end": 11634,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 11414,
											"end": 11634,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11418,
											"end": 11439,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11032,
											"end": 11640,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11032,
											"end": 11640,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10930,
											"end": 11640,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10930,
											"end": 11640,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10930,
											"end": 11640,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10930,
											"end": 11640,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10930,
											"end": 11640,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10930,
											"end": 11640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11663,
											"end": 12033,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 11663,
											"end": 12033,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11734,
											"end": 11739,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11783,
											"end": 11786,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11776,
											"end": 11780,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11768,
											"end": 11774,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11764,
											"end": 11781,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11760,
											"end": 11787,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11750,
											"end": 11872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 11750,
											"end": 11872,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11791,
											"end": 11870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 11791,
											"end": 11870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 11791,
											"end": 11870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11791,
											"end": 11870,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 11791,
											"end": 11870,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11750,
											"end": 11872,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 11750,
											"end": 11872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11908,
											"end": 11914,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11895,
											"end": 11915,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11933,
											"end": 12027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 12023,
											"end": 12026,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12015,
											"end": 12021,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12008,
											"end": 12012,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12000,
											"end": 12006,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11996,
											"end": 12013,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11933,
											"end": 12027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 11933,
											"end": 12027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11933,
											"end": 12027,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 11933,
											"end": 12027,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11924,
											"end": 12027,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11924,
											"end": 12027,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11740,
											"end": 12033,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11663,
											"end": 12033,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11663,
											"end": 12033,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11663,
											"end": 12033,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11663,
											"end": 12033,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11663,
											"end": 12033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12039,
											"end": 12933,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 12039,
											"end": 12933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12157,
											"end": 12163,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12165,
											"end": 12171,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12214,
											"end": 12216,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12202,
											"end": 12211,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12193,
											"end": 12200,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12189,
											"end": 12212,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12185,
											"end": 12217,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12182,
											"end": 12301,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12182,
											"end": 12301,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 12182,
											"end": 12301,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12220,
											"end": 12299,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 12220,
											"end": 12299,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 12220,
											"end": 12299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12220,
											"end": 12299,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 12220,
											"end": 12299,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12182,
											"end": 12301,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 12182,
											"end": 12301,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12368,
											"end": 12369,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12353,
											"end": 12370,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12340,
											"end": 12371,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 12398,
											"end": 12416,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12390,
											"end": 12396,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12387,
											"end": 12417,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12384,
											"end": 12501,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12384,
											"end": 12501,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 12384,
											"end": 12501,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12420,
											"end": 12499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 12420,
											"end": 12499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 12420,
											"end": 12499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12420,
											"end": 12499,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 12420,
											"end": 12499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12384,
											"end": 12501,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 12384,
											"end": 12501,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12525,
											"end": 12603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 12595,
											"end": 12602,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12586,
											"end": 12592,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12575,
											"end": 12584,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12571,
											"end": 12593,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12525,
											"end": 12603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 12525,
											"end": 12603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12525,
											"end": 12603,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 12525,
											"end": 12603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12515,
											"end": 12603,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12515,
											"end": 12603,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12311,
											"end": 12613,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12680,
											"end": 12682,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12669,
											"end": 12678,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12665,
											"end": 12683,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12652,
											"end": 12684,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 12711,
											"end": 12729,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12703,
											"end": 12709,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12700,
											"end": 12730,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12697,
											"end": 12814,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12697,
											"end": 12814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 12697,
											"end": 12814,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12733,
											"end": 12812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 12733,
											"end": 12812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 12733,
											"end": 12812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12733,
											"end": 12812,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 12733,
											"end": 12812,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12697,
											"end": 12814,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 12697,
											"end": 12814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12838,
											"end": 12916,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 12908,
											"end": 12915,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12899,
											"end": 12905,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12888,
											"end": 12897,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12884,
											"end": 12906,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12838,
											"end": 12916,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 12838,
											"end": 12916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12838,
											"end": 12916,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 12838,
											"end": 12916,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12828,
											"end": 12916,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12828,
											"end": 12916,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12623,
											"end": 12926,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12039,
											"end": 12933,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12039,
											"end": 12933,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12039,
											"end": 12933,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12039,
											"end": 12933,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12039,
											"end": 12933,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12039,
											"end": 12933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12939,
											"end": 13053,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 12939,
											"end": 13053,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13006,
											"end": 13012,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13040,
											"end": 13045,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13034,
											"end": 13046,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13024,
											"end": 13046,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13024,
											"end": 13046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12939,
											"end": 13053,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12939,
											"end": 13053,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12939,
											"end": 13053,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12939,
											"end": 13053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13059,
											"end": 13243,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 13059,
											"end": 13243,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13158,
											"end": 13169,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13192,
											"end": 13198,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13187,
											"end": 13190,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13180,
											"end": 13199,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13232,
											"end": 13236,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13227,
											"end": 13230,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13223,
											"end": 13237,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13208,
											"end": 13237,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13208,
											"end": 13237,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13059,
											"end": 13243,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13059,
											"end": 13243,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13059,
											"end": 13243,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13059,
											"end": 13243,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13059,
											"end": 13243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13249,
											"end": 13381,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 13249,
											"end": 13381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13316,
											"end": 13320,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13339,
											"end": 13342,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13369,
											"end": 13373,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13364,
											"end": 13367,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13360,
											"end": 13374,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13352,
											"end": 13374,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13352,
											"end": 13374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13249,
											"end": 13381,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13249,
											"end": 13381,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13249,
											"end": 13381,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13249,
											"end": 13381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13387,
											"end": 13495,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 13387,
											"end": 13495,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13464,
											"end": 13488,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 13482,
											"end": 13487,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13464,
											"end": 13488,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 13464,
											"end": 13488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13464,
											"end": 13488,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 13464,
											"end": 13488,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13459,
											"end": 13462,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13452,
											"end": 13489,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13387,
											"end": 13495,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13387,
											"end": 13495,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13387,
											"end": 13495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13501,
											"end": 13680,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 13501,
											"end": 13680,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13570,
											"end": 13580,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13591,
											"end": 13637,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 13633,
											"end": 13636,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13625,
											"end": 13631,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13591,
											"end": 13637,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 13591,
											"end": 13637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13591,
											"end": 13637,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 13591,
											"end": 13637,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13669,
											"end": 13673,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13664,
											"end": 13667,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13660,
											"end": 13674,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13646,
											"end": 13674,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13646,
											"end": 13674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13501,
											"end": 13680,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13501,
											"end": 13680,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13501,
											"end": 13680,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13501,
											"end": 13680,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13501,
											"end": 13680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13686,
											"end": 13799,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 13686,
											"end": 13799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13756,
											"end": 13760,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13788,
											"end": 13792,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13783,
											"end": 13786,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13779,
											"end": 13793,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13771,
											"end": 13793,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13771,
											"end": 13793,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13686,
											"end": 13799,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13686,
											"end": 13799,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13686,
											"end": 13799,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13686,
											"end": 13799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13835,
											"end": 14567,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 13835,
											"end": 14567,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13954,
											"end": 13957,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13983,
											"end": 14037,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 14031,
											"end": 14036,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13983,
											"end": 14037,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 13983,
											"end": 14037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13983,
											"end": 14037,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 13983,
											"end": 14037,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14053,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 14132,
											"end": 14138,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14127,
											"end": 14130,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14053,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 14053,
											"end": 14139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14053,
											"end": 14139,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 14053,
											"end": 14139,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14046,
											"end": 14139,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14046,
											"end": 14139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14163,
											"end": 14219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 14213,
											"end": 14218,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14163,
											"end": 14219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 14163,
											"end": 14219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14163,
											"end": 14219,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 14163,
											"end": 14219,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14242,
											"end": 14249,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14273,
											"end": 14274,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14258,
											"end": 14542,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 14258,
											"end": 14542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14283,
											"end": 14289,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14280,
											"end": 14281,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14277,
											"end": 14290,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14542,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 14258,
											"end": 14542,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14359,
											"end": 14365,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14353,
											"end": 14366,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14386,
											"end": 14449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 14445,
											"end": 14448,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 14430,
											"end": 14443,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14386,
											"end": 14449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 14386,
											"end": 14449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14386,
											"end": 14449,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 14386,
											"end": 14449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14379,
											"end": 14449,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 14379,
											"end": 14449,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14472,
											"end": 14532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 14525,
											"end": 14531,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14472,
											"end": 14532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 14472,
											"end": 14532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14472,
											"end": 14532,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 14472,
											"end": 14532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14462,
											"end": 14532,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14462,
											"end": 14532,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14318,
											"end": 14542,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14305,
											"end": 14306,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 14302,
											"end": 14303,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14298,
											"end": 14307,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14293,
											"end": 14307,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14293,
											"end": 14307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 14258,
											"end": 14542,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14542,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 14258,
											"end": 14542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14262,
											"end": 14276,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14558,
											"end": 14561,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14551,
											"end": 14561,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14551,
											"end": 14561,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13959,
											"end": 14567,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13959,
											"end": 14567,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13959,
											"end": 14567,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13835,
											"end": 14567,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13835,
											"end": 14567,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13835,
											"end": 14567,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13835,
											"end": 14567,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13835,
											"end": 14567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14573,
											"end": 14946,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 14573,
											"end": 14946,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14716,
											"end": 14720,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14754,
											"end": 14756,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14743,
											"end": 14752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14739,
											"end": 14757,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14731,
											"end": 14757,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14731,
											"end": 14757,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14803,
											"end": 14812,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14797,
											"end": 14801,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14793,
											"end": 14813,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14789,
											"end": 14790,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14778,
											"end": 14787,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14774,
											"end": 14791,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14767,
											"end": 14814,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14831,
											"end": 14939,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 14934,
											"end": 14938,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14925,
											"end": 14931,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14831,
											"end": 14939,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 14831,
											"end": 14939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14831,
											"end": 14939,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 14831,
											"end": 14939,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14823,
											"end": 14939,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14823,
											"end": 14939,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14573,
											"end": 14946,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14573,
											"end": 14946,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14573,
											"end": 14946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14573,
											"end": 14946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14573,
											"end": 14946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14952,
											"end": 15070,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 14952,
											"end": 15070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15039,
											"end": 15063,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 15057,
											"end": 15062,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15039,
											"end": 15063,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 15039,
											"end": 15063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15039,
											"end": 15063,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 15039,
											"end": 15063,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15034,
											"end": 15037,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15027,
											"end": 15064,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14952,
											"end": 15070,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14952,
											"end": 15070,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14952,
											"end": 15070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15076,
											"end": 15298,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 15076,
											"end": 15298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15169,
											"end": 15173,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15207,
											"end": 15209,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15196,
											"end": 15205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15192,
											"end": 15210,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15184,
											"end": 15210,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15184,
											"end": 15210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15220,
											"end": 15291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 15288,
											"end": 15289,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15277,
											"end": 15286,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15273,
											"end": 15290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15264,
											"end": 15270,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15220,
											"end": 15291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 15220,
											"end": 15291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15220,
											"end": 15291,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 15220,
											"end": 15291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15076,
											"end": 15298,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15076,
											"end": 15298,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15076,
											"end": 15298,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15076,
											"end": 15298,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15076,
											"end": 15298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15304,
											"end": 15420,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 15304,
											"end": 15420,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15374,
											"end": 15395,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 15389,
											"end": 15394,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15374,
											"end": 15395,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 15374,
											"end": 15395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15374,
											"end": 15395,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 15374,
											"end": 15395,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15367,
											"end": 15372,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15364,
											"end": 15396,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 15354,
											"end": 15414,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 15354,
											"end": 15414,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15410,
											"end": 15411,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15407,
											"end": 15408,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15400,
											"end": 15412,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 15354,
											"end": 15414,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 15354,
											"end": 15414,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15304,
											"end": 15420,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15304,
											"end": 15420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15426,
											"end": 15559,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 15426,
											"end": 15559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15469,
											"end": 15474,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15507,
											"end": 15513,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15494,
											"end": 15514,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 15485,
											"end": 15514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15485,
											"end": 15514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15523,
											"end": 15553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 15547,
											"end": 15552,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15523,
											"end": 15553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 15523,
											"end": 15553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15523,
											"end": 15553,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 15523,
											"end": 15553,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15426,
											"end": 15559,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15426,
											"end": 15559,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15426,
											"end": 15559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15426,
											"end": 15559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15426,
											"end": 15559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15565,
											"end": 16033,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 15565,
											"end": 16033,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15630,
											"end": 15636,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15638,
											"end": 15644,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15687,
											"end": 15689,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15675,
											"end": 15684,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15666,
											"end": 15673,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15662,
											"end": 15685,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15658,
											"end": 15690,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 15655,
											"end": 15774,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15655,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 15655,
											"end": 15774,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15693,
											"end": 15772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 15693,
											"end": 15772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 15693,
											"end": 15772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15693,
											"end": 15772,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 15693,
											"end": 15772,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15655,
											"end": 15774,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 15655,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15813,
											"end": 15814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15838,
											"end": 15891,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 15883,
											"end": 15890,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15874,
											"end": 15880,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15863,
											"end": 15872,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15859,
											"end": 15881,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15838,
											"end": 15891,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 15838,
											"end": 15891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15838,
											"end": 15891,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 15838,
											"end": 15891,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15828,
											"end": 15891,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15828,
											"end": 15891,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15784,
											"end": 15901,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15940,
											"end": 15942,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15966,
											"end": 16016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 16008,
											"end": 16015,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15999,
											"end": 16005,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15988,
											"end": 15997,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15984,
											"end": 16006,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15966,
											"end": 16016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 15966,
											"end": 16016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15966,
											"end": 16016,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 15966,
											"end": 16016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15956,
											"end": 16016,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15956,
											"end": 16016,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15911,
											"end": 16026,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15565,
											"end": 16033,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15565,
											"end": 16033,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15565,
											"end": 16033,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15565,
											"end": 16033,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15565,
											"end": 16033,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15565,
											"end": 16033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16039,
											"end": 16513,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 16039,
											"end": 16513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16107,
											"end": 16113,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16115,
											"end": 16121,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16164,
											"end": 16166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16152,
											"end": 16161,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16143,
											"end": 16150,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16139,
											"end": 16162,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16135,
											"end": 16167,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 16132,
											"end": 16251,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16132,
											"end": 16251,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 16132,
											"end": 16251,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 16170,
											"end": 16249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 16170,
											"end": 16249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16249,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 16170,
											"end": 16249,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16132,
											"end": 16251,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 16132,
											"end": 16251,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16290,
											"end": 16291,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16315,
											"end": 16368,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 16360,
											"end": 16367,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16351,
											"end": 16357,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16340,
											"end": 16349,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16336,
											"end": 16358,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16315,
											"end": 16368,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 16315,
											"end": 16368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16315,
											"end": 16368,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 16315,
											"end": 16368,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16305,
											"end": 16368,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16305,
											"end": 16368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16261,
											"end": 16378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16417,
											"end": 16419,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16443,
											"end": 16496,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 16488,
											"end": 16495,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16479,
											"end": 16485,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16468,
											"end": 16477,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16464,
											"end": 16486,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16443,
											"end": 16496,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 16443,
											"end": 16496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16443,
											"end": 16496,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 16443,
											"end": 16496,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16433,
											"end": 16496,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16433,
											"end": 16496,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16388,
											"end": 16506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16039,
											"end": 16513,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16039,
											"end": 16513,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16039,
											"end": 16513,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16039,
											"end": 16513,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16039,
											"end": 16513,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16039,
											"end": 16513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16519,
											"end": 17608,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 16519,
											"end": 17608,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16623,
											"end": 16629,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16631,
											"end": 16637,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16639,
											"end": 16645,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16647,
											"end": 16653,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16655,
											"end": 16661,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16704,
											"end": 16707,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 16692,
											"end": 16701,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16683,
											"end": 16690,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 16679,
											"end": 16702,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16675,
											"end": 16708,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 16672,
											"end": 16792,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16672,
											"end": 16792,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 16672,
											"end": 16792,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16711,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 16711,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 16711,
											"end": 16790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16711,
											"end": 16790,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 16711,
											"end": 16790,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16672,
											"end": 16792,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 16672,
											"end": 16792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16831,
											"end": 16832,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16856,
											"end": 16909,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 16901,
											"end": 16908,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 16892,
											"end": 16898,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16881,
											"end": 16890,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 16877,
											"end": 16899,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16856,
											"end": 16909,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 16856,
											"end": 16909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16856,
											"end": 16909,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 16856,
											"end": 16909,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16846,
											"end": 16909,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 16846,
											"end": 16909,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16802,
											"end": 16919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16958,
											"end": 16960,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16984,
											"end": 17037,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 17029,
											"end": 17036,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 17020,
											"end": 17026,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17009,
											"end": 17018,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 17005,
											"end": 17027,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16984,
											"end": 17037,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 16984,
											"end": 17037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16984,
											"end": 17037,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 16984,
											"end": 17037,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16974,
											"end": 17037,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 16974,
											"end": 17037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16929,
											"end": 17047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17086,
											"end": 17088,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17112,
											"end": 17165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 17157,
											"end": 17164,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 17148,
											"end": 17154,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17137,
											"end": 17146,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 17133,
											"end": 17155,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17112,
											"end": 17165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 17112,
											"end": 17165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17112,
											"end": 17165,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 17112,
											"end": 17165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17102,
											"end": 17165,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 17102,
											"end": 17165,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17057,
											"end": 17175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17214,
											"end": 17216,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 17240,
											"end": 17293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 17285,
											"end": 17292,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 17276,
											"end": 17282,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17265,
											"end": 17274,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 17261,
											"end": 17283,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17240,
											"end": 17293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 17240,
											"end": 17293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17240,
											"end": 17293,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 17240,
											"end": 17293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17230,
											"end": 17293,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17230,
											"end": 17293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17185,
											"end": 17303,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17370,
											"end": 17373,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 17359,
											"end": 17368,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17355,
											"end": 17374,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17342,
											"end": 17375,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 17402,
											"end": 17420,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17394,
											"end": 17400,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17391,
											"end": 17421,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 17388,
											"end": 17505,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17388,
											"end": 17505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 17388,
											"end": 17505,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17424,
											"end": 17503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 17424,
											"end": 17503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 17424,
											"end": 17503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17424,
											"end": 17503,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 17424,
											"end": 17503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17388,
											"end": 17505,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 17388,
											"end": 17505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17529,
											"end": 17591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 17583,
											"end": 17590,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 17574,
											"end": 17580,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17563,
											"end": 17572,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 17559,
											"end": 17581,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17529,
											"end": 17591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 17529,
											"end": 17591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17529,
											"end": 17591,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 17529,
											"end": 17591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17519,
											"end": 17591,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17519,
											"end": 17591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17313,
											"end": 17601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16519,
											"end": 17608,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16519,
											"end": 17608,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 16519,
											"end": 17608,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16519,
											"end": 17608,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16519,
											"end": 17608,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 16519,
											"end": 17608,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16519,
											"end": 17608,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16519,
											"end": 17608,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16519,
											"end": 17608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17614,
											"end": 17943,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 17614,
											"end": 17943,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17673,
											"end": 17679,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17722,
											"end": 17724,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17710,
											"end": 17719,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17701,
											"end": 17708,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17697,
											"end": 17720,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17693,
											"end": 17725,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 17690,
											"end": 17809,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17690,
											"end": 17809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 17690,
											"end": 17809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17728,
											"end": 17807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 17728,
											"end": 17807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 17728,
											"end": 17807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17728,
											"end": 17807,
											"name": "tag",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 17728,
											"end": 17807,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17690,
											"end": 17809,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 17690,
											"end": 17809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17848,
											"end": 17849,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17873,
											"end": 17926,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 17918,
											"end": 17925,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17909,
											"end": 17915,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17898,
											"end": 17907,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17894,
											"end": 17916,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17873,
											"end": 17926,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 17873,
											"end": 17926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17873,
											"end": 17926,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 17873,
											"end": 17926,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17863,
											"end": 17926,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17863,
											"end": 17926,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17819,
											"end": 17936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17614,
											"end": 17943,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17614,
											"end": 17943,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17614,
											"end": 17943,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17614,
											"end": 17943,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17614,
											"end": 17943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17949,
											"end": 18129,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 17949,
											"end": 18129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17997,
											"end": 18074,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17994,
											"end": 17995,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17987,
											"end": 18075,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18094,
											"end": 18098,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 18091,
											"end": 18092,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 18084,
											"end": 18099,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18118,
											"end": 18122,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 18115,
											"end": 18116,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18108,
											"end": 18123,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18135,
											"end": 18455,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 18135,
											"end": 18455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18179,
											"end": 18185,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18216,
											"end": 18217,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 18210,
											"end": 18214,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18206,
											"end": 18218,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 18196,
											"end": 18218,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18196,
											"end": 18218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18263,
											"end": 18264,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 18257,
											"end": 18261,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18253,
											"end": 18265,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 18284,
											"end": 18302,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18274,
											"end": 18355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 18274,
											"end": 18355,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18340,
											"end": 18344,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 18332,
											"end": 18338,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18328,
											"end": 18345,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 18318,
											"end": 18345,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18318,
											"end": 18345,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18274,
											"end": 18355,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 18274,
											"end": 18355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18402,
											"end": 18404,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18394,
											"end": 18400,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18391,
											"end": 18405,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 18371,
											"end": 18389,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18368,
											"end": 18406,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18365,
											"end": 18449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 18365,
											"end": 18449,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18421,
											"end": 18439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 18421,
											"end": 18439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 18421,
											"end": 18439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18421,
											"end": 18439,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 18421,
											"end": 18439,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18365,
											"end": 18449,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 18365,
											"end": 18449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18186,
											"end": 18455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18135,
											"end": 18455,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18135,
											"end": 18455,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18135,
											"end": 18455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18135,
											"end": 18455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18461,
											"end": 18634,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 18461,
											"end": 18634,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18601,
											"end": 18626,
											"name": "PUSH",
											"source": 13,
											"value": "546F6B656E20494420646F6573206E6F74206578697374000000000000000000"
										},
										{
											"begin": 18597,
											"end": 18598,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18589,
											"end": 18595,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18585,
											"end": 18599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18578,
											"end": 18627,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18461,
											"end": 18634,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18461,
											"end": 18634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18640,
											"end": 19006,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 18640,
											"end": 19006,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18782,
											"end": 18785,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18803,
											"end": 18870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 18867,
											"end": 18869,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 18862,
											"end": 18865,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18803,
											"end": 18870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 18803,
											"end": 18870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18803,
											"end": 18870,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 18803,
											"end": 18870,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18796,
											"end": 18870,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18796,
											"end": 18870,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18879,
											"end": 18972,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 18968,
											"end": 18971,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18879,
											"end": 18972,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 18879,
											"end": 18972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18879,
											"end": 18972,
											"name": "tag",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 18879,
											"end": 18972,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18997,
											"end": 18999,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18992,
											"end": 18995,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18988,
											"end": 19000,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18981,
											"end": 19000,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18981,
											"end": 19000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18640,
											"end": 19006,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18640,
											"end": 19006,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18640,
											"end": 19006,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18640,
											"end": 19006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19012,
											"end": 19431,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 19012,
											"end": 19431,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19178,
											"end": 19182,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19216,
											"end": 19218,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19205,
											"end": 19214,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19201,
											"end": 19219,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19193,
											"end": 19219,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19193,
											"end": 19219,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19265,
											"end": 19274,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19259,
											"end": 19263,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19255,
											"end": 19275,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19251,
											"end": 19252,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19240,
											"end": 19249,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19236,
											"end": 19253,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19229,
											"end": 19276,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19293,
											"end": 19424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 19419,
											"end": 19423,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19293,
											"end": 19424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 19293,
											"end": 19424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19293,
											"end": 19424,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 19293,
											"end": 19424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19285,
											"end": 19424,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19285,
											"end": 19424,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19012,
											"end": 19431,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19012,
											"end": 19431,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19012,
											"end": 19431,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19012,
											"end": 19431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19437,
											"end": 19617,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 19437,
											"end": 19617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19485,
											"end": 19562,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19482,
											"end": 19483,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19475,
											"end": 19563,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19582,
											"end": 19586,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 19579,
											"end": 19580,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 19572,
											"end": 19587,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19606,
											"end": 19610,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 19603,
											"end": 19604,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19596,
											"end": 19611,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 19623,
											"end": 19814,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 19623,
											"end": 19814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19663,
											"end": 19666,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19682,
											"end": 19702,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 19700,
											"end": 19701,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19682,
											"end": 19702,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 19682,
											"end": 19702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19682,
											"end": 19702,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 19682,
											"end": 19702,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19677,
											"end": 19702,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19677,
											"end": 19702,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19716,
											"end": 19736,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 19734,
											"end": 19735,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19716,
											"end": 19736,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 19716,
											"end": 19736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19716,
											"end": 19736,
											"name": "tag",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 19716,
											"end": 19736,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19711,
											"end": 19736,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19711,
											"end": 19736,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19759,
											"end": 19760,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19756,
											"end": 19757,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19752,
											"end": 19761,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19745,
											"end": 19761,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19745,
											"end": 19761,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19780,
											"end": 19783,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19777,
											"end": 19778,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19774,
											"end": 19784,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 19771,
											"end": 19807,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19771,
											"end": 19807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 19771,
											"end": 19807,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19787,
											"end": 19805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 19787,
											"end": 19805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 19787,
											"end": 19805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19787,
											"end": 19805,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 19787,
											"end": 19805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19771,
											"end": 19807,
											"name": "tag",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 19771,
											"end": 19807,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19623,
											"end": 19814,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19623,
											"end": 19814,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19623,
											"end": 19814,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19623,
											"end": 19814,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19623,
											"end": 19814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19820,
											"end": 20053,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 19820,
											"end": 20053,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19859,
											"end": 19862,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19882,
											"end": 19906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 19900,
											"end": 19905,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19882,
											"end": 19906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 19882,
											"end": 19906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19882,
											"end": 19906,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 19882,
											"end": 19906,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19873,
											"end": 19906,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19873,
											"end": 19906,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19928,
											"end": 19994,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19921,
											"end": 19926,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19918,
											"end": 19995,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19915,
											"end": 20018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 19915,
											"end": 20018,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19998,
											"end": 20016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 19998,
											"end": 20016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 19998,
											"end": 20016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19998,
											"end": 20016,
											"name": "tag",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 19998,
											"end": 20016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19915,
											"end": 20018,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 19915,
											"end": 20018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20045,
											"end": 20046,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 20038,
											"end": 20043,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20034,
											"end": 20047,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20027,
											"end": 20047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20027,
											"end": 20047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19820,
											"end": 20053,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19820,
											"end": 20053,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19820,
											"end": 20053,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19820,
											"end": 20053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20059,
											"end": 20391,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 20059,
											"end": 20391,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20180,
											"end": 20184,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20218,
											"end": 20220,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 20207,
											"end": 20216,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20203,
											"end": 20221,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20195,
											"end": 20221,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20195,
											"end": 20221,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20231,
											"end": 20302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 20299,
											"end": 20300,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20288,
											"end": 20297,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20284,
											"end": 20301,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20275,
											"end": 20281,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20231,
											"end": 20302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 20231,
											"end": 20302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20231,
											"end": 20302,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 20231,
											"end": 20302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20312,
											"end": 20384,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 20380,
											"end": 20382,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20369,
											"end": 20378,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20365,
											"end": 20383,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20356,
											"end": 20362,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20312,
											"end": 20384,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 20312,
											"end": 20384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20312,
											"end": 20384,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 20312,
											"end": 20384,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20059,
											"end": 20391,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 20059,
											"end": 20391,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20059,
											"end": 20391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20059,
											"end": 20391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20059,
											"end": 20391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20059,
											"end": 20391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20397,
											"end": 20729,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 20397,
											"end": 20729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20518,
											"end": 20522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20556,
											"end": 20558,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 20545,
											"end": 20554,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20541,
											"end": 20559,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20533,
											"end": 20559,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20533,
											"end": 20559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20569,
											"end": 20640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 20637,
											"end": 20638,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20626,
											"end": 20635,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20622,
											"end": 20639,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20613,
											"end": 20619,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20569,
											"end": 20640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 20569,
											"end": 20640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20569,
											"end": 20640,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 20569,
											"end": 20640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20650,
											"end": 20722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 20718,
											"end": 20720,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20707,
											"end": 20716,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20703,
											"end": 20721,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20694,
											"end": 20700,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20650,
											"end": 20722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 20650,
											"end": 20722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20650,
											"end": 20722,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 20650,
											"end": 20722,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20397,
											"end": 20729,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 20397,
											"end": 20729,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20397,
											"end": 20729,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20397,
											"end": 20729,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20397,
											"end": 20729,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20397,
											"end": 20729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20735,
											"end": 20915,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 20735,
											"end": 20915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20783,
											"end": 20860,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20780,
											"end": 20781,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20773,
											"end": 20861,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20880,
											"end": 20884,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 20877,
											"end": 20878,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 20870,
											"end": 20885,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20904,
											"end": 20908,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 20901,
											"end": 20902,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20894,
											"end": 20909,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 20921,
											"end": 21099,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 20921,
											"end": 21099,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21061,
											"end": 21091,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E742062616C616E636520746F206275726E00000000"
										},
										{
											"begin": 21057,
											"end": 21058,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21049,
											"end": 21055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21045,
											"end": 21059,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21038,
											"end": 21092,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20921,
											"end": 21099,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20921,
											"end": 21099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21105,
											"end": 21471,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 21105,
											"end": 21471,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21247,
											"end": 21250,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21268,
											"end": 21335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 21332,
											"end": 21334,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 21327,
											"end": 21330,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21268,
											"end": 21335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 21268,
											"end": 21335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21268,
											"end": 21335,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 21268,
											"end": 21335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21261,
											"end": 21335,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21261,
											"end": 21335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21344,
											"end": 21437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 21433,
											"end": 21436,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21344,
											"end": 21437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 21344,
											"end": 21437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21344,
											"end": 21437,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 21344,
											"end": 21437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21462,
											"end": 21464,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21457,
											"end": 21460,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21453,
											"end": 21465,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21446,
											"end": 21465,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21446,
											"end": 21465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21105,
											"end": 21471,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21105,
											"end": 21471,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21105,
											"end": 21471,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21105,
											"end": 21471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21477,
											"end": 21896,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 21477,
											"end": 21896,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21643,
											"end": 21647,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21681,
											"end": 21683,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21670,
											"end": 21679,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21666,
											"end": 21684,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21658,
											"end": 21684,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21658,
											"end": 21684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21730,
											"end": 21739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21724,
											"end": 21728,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21720,
											"end": 21740,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21716,
											"end": 21717,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21705,
											"end": 21714,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21701,
											"end": 21718,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21694,
											"end": 21741,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21758,
											"end": 21889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 21884,
											"end": 21888,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21758,
											"end": 21889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 21758,
											"end": 21889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21758,
											"end": 21889,
											"name": "tag",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 21758,
											"end": 21889,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21750,
											"end": 21889,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21750,
											"end": 21889,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21477,
											"end": 21896,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21477,
											"end": 21896,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21477,
											"end": 21896,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21477,
											"end": 21896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21902,
											"end": 22096,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 21902,
											"end": 22096,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21942,
											"end": 21946,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21962,
											"end": 21982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 21980,
											"end": 21981,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21962,
											"end": 21982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 21962,
											"end": 21982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21962,
											"end": 21982,
											"name": "tag",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 21962,
											"end": 21982,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21957,
											"end": 21982,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21957,
											"end": 21982,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21996,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 22014,
											"end": 22015,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21996,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 21996,
											"end": 22016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21996,
											"end": 22016,
											"name": "tag",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 21996,
											"end": 22016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21991,
											"end": 22016,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21991,
											"end": 22016,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22040,
											"end": 22041,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22037,
											"end": 22038,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22033,
											"end": 22042,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 22025,
											"end": 22042,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22025,
											"end": 22042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22064,
											"end": 22065,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22058,
											"end": 22062,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22055,
											"end": 22066,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 22052,
											"end": 22089,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 22052,
											"end": 22089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 22052,
											"end": 22089,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 22069,
											"end": 22087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 22069,
											"end": 22087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 22069,
											"end": 22087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22069,
											"end": 22087,
											"name": "tag",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 22069,
											"end": 22087,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22052,
											"end": 22089,
											"name": "tag",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 22052,
											"end": 22089,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21902,
											"end": 22096,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21902,
											"end": 22096,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21902,
											"end": 22096,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21902,
											"end": 22096,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21902,
											"end": 22096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22102,
											"end": 22655,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 22102,
											"end": 22655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22279,
											"end": 22283,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22317,
											"end": 22320,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 22306,
											"end": 22315,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22302,
											"end": 22321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22294,
											"end": 22321,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22294,
											"end": 22321,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22331,
											"end": 22402,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 22399,
											"end": 22400,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22388,
											"end": 22397,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22384,
											"end": 22401,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22375,
											"end": 22381,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 22331,
											"end": 22402,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 22331,
											"end": 22402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22331,
											"end": 22402,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 22331,
											"end": 22402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22412,
											"end": 22484,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 22480,
											"end": 22482,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22469,
											"end": 22478,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22465,
											"end": 22483,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22456,
											"end": 22462,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 22412,
											"end": 22484,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 22412,
											"end": 22484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22412,
											"end": 22484,
											"name": "tag",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 22412,
											"end": 22484,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22494,
											"end": 22566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 22562,
											"end": 22564,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 22551,
											"end": 22560,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22547,
											"end": 22565,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22538,
											"end": 22544,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22494,
											"end": 22566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 22494,
											"end": 22566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22494,
											"end": 22566,
											"name": "tag",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 22494,
											"end": 22566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22576,
											"end": 22648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 22644,
											"end": 22646,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 22633,
											"end": 22642,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22629,
											"end": 22647,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22620,
											"end": 22626,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22576,
											"end": 22648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 22576,
											"end": 22648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22576,
											"end": 22648,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 22576,
											"end": 22648,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22102,
											"end": 22655,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 22102,
											"end": 22655,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 22102,
											"end": 22655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22102,
											"end": 22655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22102,
											"end": 22655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22102,
											"end": 22655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22102,
											"end": 22655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22102,
											"end": 22655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22661,
											"end": 23295,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 22661,
											"end": 23295,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22882,
											"end": 22886,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22920,
											"end": 22922,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 22909,
											"end": 22918,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22905,
											"end": 22923,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22897,
											"end": 22923,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22897,
											"end": 22923,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22969,
											"end": 22978,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22963,
											"end": 22967,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22959,
											"end": 22979,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 22955,
											"end": 22956,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22944,
											"end": 22953,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22940,
											"end": 22957,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22933,
											"end": 22980,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22997,
											"end": 23105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 23100,
											"end": 23104,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23091,
											"end": 23097,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22997,
											"end": 23105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 22997,
											"end": 23105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22997,
											"end": 23105,
											"name": "tag",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 22997,
											"end": 23105,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22989,
											"end": 23105,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22989,
											"end": 23105,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23152,
											"end": 23161,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23146,
											"end": 23150,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23142,
											"end": 23162,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23137,
											"end": 23139,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23126,
											"end": 23135,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23122,
											"end": 23140,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23115,
											"end": 23163,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23180,
											"end": 23288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 23283,
											"end": 23287,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23274,
											"end": 23280,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23180,
											"end": 23288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 23180,
											"end": 23288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23180,
											"end": 23288,
											"name": "tag",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 23180,
											"end": 23288,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23172,
											"end": 23288,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23172,
											"end": 23288,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22661,
											"end": 23295,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 22661,
											"end": 23295,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22661,
											"end": 23295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22661,
											"end": 23295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22661,
											"end": 23295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22661,
											"end": 23295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23301,
											"end": 23399,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 23301,
											"end": 23399,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23352,
											"end": 23358,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23386,
											"end": 23391,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23380,
											"end": 23392,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 23370,
											"end": 23392,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23370,
											"end": 23392,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23301,
											"end": 23399,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23301,
											"end": 23399,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23301,
											"end": 23399,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23301,
											"end": 23399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23405,
											"end": 23573,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 23405,
											"end": 23573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23488,
											"end": 23499,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23522,
											"end": 23528,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23517,
											"end": 23520,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23510,
											"end": 23529,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23562,
											"end": 23566,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23557,
											"end": 23560,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23553,
											"end": 23567,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23538,
											"end": 23567,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23538,
											"end": 23567,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23405,
											"end": 23573,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23405,
											"end": 23573,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23405,
											"end": 23573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23405,
											"end": 23573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23405,
											"end": 23573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23579,
											"end": 23952,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 23579,
											"end": 23952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23665,
											"end": 23668,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23693,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 23725,
											"end": 23730,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23693,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 23693,
											"end": 23731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23693,
											"end": 23731,
											"name": "tag",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 23693,
											"end": 23731,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23747,
											"end": 23817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 23810,
											"end": 23816,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23805,
											"end": 23808,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23747,
											"end": 23817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 23747,
											"end": 23817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23747,
											"end": 23817,
											"name": "tag",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 23747,
											"end": 23817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23740,
											"end": 23817,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 23740,
											"end": 23817,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23826,
											"end": 23891,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 23884,
											"end": 23890,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23879,
											"end": 23882,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23872,
											"end": 23876,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23865,
											"end": 23870,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 23861,
											"end": 23877,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23826,
											"end": 23891,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 23826,
											"end": 23891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23826,
											"end": 23891,
											"name": "tag",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 23826,
											"end": 23891,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23916,
											"end": 23945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 23938,
											"end": 23944,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23916,
											"end": 23945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 23916,
											"end": 23945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23916,
											"end": 23945,
											"name": "tag",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 23916,
											"end": 23945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23911,
											"end": 23914,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23907,
											"end": 23946,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23900,
											"end": 23946,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23900,
											"end": 23946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23669,
											"end": 23952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23579,
											"end": 23952,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23579,
											"end": 23952,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23579,
											"end": 23952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23579,
											"end": 23952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23579,
											"end": 23952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23958,
											"end": 24709,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 23958,
											"end": 24709,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24181,
											"end": 24185,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24219,
											"end": 24222,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 24208,
											"end": 24217,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24204,
											"end": 24223,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24196,
											"end": 24223,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24196,
											"end": 24223,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24233,
											"end": 24304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 24301,
											"end": 24302,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24290,
											"end": 24299,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24286,
											"end": 24303,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24277,
											"end": 24283,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 24233,
											"end": 24304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 24233,
											"end": 24304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24233,
											"end": 24304,
											"name": "tag",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 24233,
											"end": 24304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24314,
											"end": 24386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 24382,
											"end": 24384,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24371,
											"end": 24380,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24367,
											"end": 24385,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24358,
											"end": 24364,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 24314,
											"end": 24386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 24314,
											"end": 24386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24314,
											"end": 24386,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 24314,
											"end": 24386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24396,
											"end": 24468,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 24464,
											"end": 24466,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 24453,
											"end": 24462,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24449,
											"end": 24467,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24440,
											"end": 24446,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 24396,
											"end": 24468,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 24396,
											"end": 24468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24396,
											"end": 24468,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 24396,
											"end": 24468,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24478,
											"end": 24550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 24546,
											"end": 24548,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 24535,
											"end": 24544,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24531,
											"end": 24549,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24522,
											"end": 24528,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24478,
											"end": 24550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 24478,
											"end": 24550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24478,
											"end": 24550,
											"name": "tag",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 24478,
											"end": 24550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24598,
											"end": 24607,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24592,
											"end": 24596,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24588,
											"end": 24608,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 24582,
											"end": 24585,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 24571,
											"end": 24580,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24567,
											"end": 24586,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24560,
											"end": 24609,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24626,
											"end": 24702,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 24697,
											"end": 24701,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24688,
											"end": 24694,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24626,
											"end": 24702,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 24626,
											"end": 24702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24626,
											"end": 24702,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 24626,
											"end": 24702,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24618,
											"end": 24702,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24618,
											"end": 24702,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23958,
											"end": 24709,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 23958,
											"end": 24709,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 23958,
											"end": 24709,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23958,
											"end": 24709,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23958,
											"end": 24709,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23958,
											"end": 24709,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23958,
											"end": 24709,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23958,
											"end": 24709,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23958,
											"end": 24709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24715,
											"end": 24856,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 24715,
											"end": 24856,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24771,
											"end": 24776,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24802,
											"end": 24808,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24796,
											"end": 24809,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 24787,
											"end": 24809,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24787,
											"end": 24809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24818,
											"end": 24850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 24844,
											"end": 24849,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24818,
											"end": 24850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 24818,
											"end": 24850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24818,
											"end": 24850,
											"name": "tag",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 24818,
											"end": 24850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24715,
											"end": 24856,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 24715,
											"end": 24856,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24715,
											"end": 24856,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24715,
											"end": 24856,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24715,
											"end": 24856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24862,
											"end": 25211,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 24862,
											"end": 25211,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24931,
											"end": 24937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24980,
											"end": 24982,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24968,
											"end": 24977,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24959,
											"end": 24966,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24955,
											"end": 24978,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 24951,
											"end": 24983,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 24948,
											"end": 25067,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 24948,
											"end": 25067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 24948,
											"end": 25067,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 24986,
											"end": 25065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 24986,
											"end": 25065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 24986,
											"end": 25065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24986,
											"end": 25065,
											"name": "tag",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 24986,
											"end": 25065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24948,
											"end": 25067,
											"name": "tag",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 24948,
											"end": 25067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25106,
											"end": 25107,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25131,
											"end": 25194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 25186,
											"end": 25193,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 25177,
											"end": 25183,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25166,
											"end": 25175,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 25162,
											"end": 25184,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25131,
											"end": 25194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 25131,
											"end": 25194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25131,
											"end": 25194,
											"name": "tag",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 25131,
											"end": 25194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25121,
											"end": 25194,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25121,
											"end": 25194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25077,
											"end": 25204,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24862,
											"end": 25211,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 24862,
											"end": 25211,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24862,
											"end": 25211,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24862,
											"end": 25211,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24862,
											"end": 25211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25217,
											"end": 26270,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 25217,
											"end": 26270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25540,
											"end": 25544,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25578,
											"end": 25581,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 25567,
											"end": 25576,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25563,
											"end": 25582,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25555,
											"end": 25582,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25555,
											"end": 25582,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25592,
											"end": 25663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 25660,
											"end": 25661,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25649,
											"end": 25658,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25645,
											"end": 25662,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25636,
											"end": 25642,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 25592,
											"end": 25663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 25592,
											"end": 25663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25592,
											"end": 25663,
											"name": "tag",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 25592,
											"end": 25663,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25673,
											"end": 25745,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 25741,
											"end": 25743,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 25730,
											"end": 25739,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25726,
											"end": 25744,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25717,
											"end": 25723,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 25673,
											"end": 25745,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 25673,
											"end": 25745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25673,
											"end": 25745,
											"name": "tag",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 25673,
											"end": 25745,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25792,
											"end": 25801,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25786,
											"end": 25790,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25782,
											"end": 25802,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 25777,
											"end": 25779,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 25766,
											"end": 25775,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25762,
											"end": 25780,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25755,
											"end": 25803,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 25820,
											"end": 25928,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 25923,
											"end": 25927,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25914,
											"end": 25920,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 25820,
											"end": 25928,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 25820,
											"end": 25928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25820,
											"end": 25928,
											"name": "tag",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 25820,
											"end": 25928,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25812,
											"end": 25928,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25812,
											"end": 25928,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25975,
											"end": 25984,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25969,
											"end": 25973,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25965,
											"end": 25985,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 25960,
											"end": 25962,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 25949,
											"end": 25958,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25945,
											"end": 25963,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25938,
											"end": 25986,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26003,
											"end": 26111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 26106,
											"end": 26110,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26097,
											"end": 26103,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 26003,
											"end": 26111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 26003,
											"end": 26111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26003,
											"end": 26111,
											"name": "tag",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 26003,
											"end": 26111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25995,
											"end": 26111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25995,
											"end": 26111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26159,
											"end": 26168,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26153,
											"end": 26157,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26149,
											"end": 26169,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 26143,
											"end": 26146,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 26132,
											"end": 26141,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26128,
											"end": 26147,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26121,
											"end": 26170,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26187,
											"end": 26263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 26258,
											"end": 26262,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26249,
											"end": 26255,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 26187,
											"end": 26263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 26187,
											"end": 26263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26187,
											"end": 26263,
											"name": "tag",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 26187,
											"end": 26263,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26179,
											"end": 26263,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26179,
											"end": 26263,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25217,
											"end": 26270,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 25217,
											"end": 26270,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 25217,
											"end": 26270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25217,
											"end": 26270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25217,
											"end": 26270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25217,
											"end": 26270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25217,
											"end": 26270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25217,
											"end": 26270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25217,
											"end": 26270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								},
								"FD42E37E574D3160D6BF72B4767F7C9049458802DAE3537F42A2E54DD3E11AF5": "68747470733a2f2f6d79746f6b656e2e636f6d2f6170692f746f6b656e2f7b69647d2e6a736f6e"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/NftMint.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"createToken(uint256)": "2d571cc4",
							"currentTokenID()": "bb62115e",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256)": "156e29f6",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenSupply(uint256)": "2693ebf2",
							"transferOwnership(address)": "f2fde38b",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"name\":\"createToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTokenID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NftMint.sol\":\"FractionalNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/NftMint.sol\":{\"keccak256\":\"0x795f5d941d5c6a75dcfb5700d746805a7081c79045a9670a5c9469919f3673c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba006a1a8e2464ae4a1d21af8b0041f5615cb0e35a479c3eb2b84a783a30c6d6\",\"dweb:/ipfs/QmRLSL7iYuPG3TsfgdzrMFddVjQy4VPKrYUkRnvBHENH6D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "contracts/NftMint.sol:FractionalNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "contracts/NftMint.sol:FractionalNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "contracts/NftMint.sol:FractionalNFT",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/NftMint.sol:FractionalNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 2940,
								"contract": "contracts/NftMint.sol:FractionalNFT",
								"label": "currentTokenID",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 2944,
								"contract": "contracts/NftMint.sol:FractionalNFT",
								"label": "tokenSupply",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1729
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1730,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1729,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1729,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1729
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1711,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1699
						],
						"Context": [
							1729
						],
						"ERC1155": [
							1335
						],
						"ERC165": [
							1863
						],
						"IERC1155": [
							1458
						],
						"IERC1155Errors": [
							284
						],
						"IERC1155MetadataURI": [
							1516
						],
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1875
						]
					},
					"id": 1336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1459,
							"src": "135:40:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1458,
										"src": "143:8:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1501,
							"src": "176:56:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1500,
										"src": "184:16:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1517,
							"src": "233:73:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1516,
										"src": "241:19:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1730,
							"src": "307:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1729,
										"src": "315:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1864,
							"src": "356:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1875,
										"src": "364:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 296,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1863,
										"src": "373:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1700,
							"src": "426:46:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 298,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1699,
										"src": "434:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 285,
							"src": "473:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 284,
										"src": "481:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 303,
										"name": "Context",
										"nameLocations": [
											"756:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1729,
										"src": "756:7:2"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "756:7:2"
								},
								{
									"baseName": {
										"id": 305,
										"name": "ERC165",
										"nameLocations": [
											"765:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1863,
										"src": "765:6:2"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "765:6:2"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC1155",
										"nameLocations": [
											"773:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1458,
										"src": "773:8:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "773:8:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"783:19:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1516,
										"src": "783:19:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "783:19:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC1155Errors",
										"nameLocations": [
											"804:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 284,
										"src": "804:14:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "804:14:2"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "542:184:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1335,
							"linearizedBaseContracts": [
								1335,
								284,
								1516,
								1458,
								1863,
								1875,
								1729
							],
							"name": "ERC1155",
							"nameLocation": "745:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 316,
									"libraryName": {
										"id": 313,
										"name": "Arrays",
										"nameLocations": [
											"831:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1699,
										"src": "831:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "825:27:2",
									"typeName": {
										"baseType": {
											"id": 314,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 315,
										"nodeType": "ArrayTypeName",
										"src": "842:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 320,
									"libraryName": {
										"id": 317,
										"name": "Arrays",
										"nameLocations": [
											"863:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1699,
										"src": "863:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "857:27:2",
									"typeName": {
										"baseType": {
											"id": 318,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 319,
										"nodeType": "ArrayTypeName",
										"src": "874:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 326,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "957:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "890:76:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 325,
										"keyName": "id",
										"keyNameLocation": "906:2:2",
										"keyType": {
											"id": 321,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "890:58:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 324,
											"keyName": "account",
											"keyNameLocation": "928:7:2",
											"keyType": {
												"id": 322,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "912:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 323,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1043:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "973:88:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 331,
										"keyName": "account",
										"keyNameLocation": "989:7:2",
										"keyType": {
											"id": 327,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "973:61:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 330,
											"keyName": "operator",
											"keyNameLocation": "1016:8:2",
											"keyType": {
												"id": 328,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1000:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 329,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1028:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1197:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "1182:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 333,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1182:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1283:30:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 341,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "1301:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 340,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "1293:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "1293:13:2"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "1208:38:2",
										"text": " @dev See {_setURI}."
									},
									"id": 345,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1277:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1263:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:2"
									},
									"scope": 1335,
									"src": "1251:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1862,
										1874
									],
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "1488:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 356,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1517:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 358,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "1537:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1458_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1458_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 357,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1532:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1532:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1458",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1547:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1532:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1517:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 362,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1574:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 364,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1516,
																			"src": "1594:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1516_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1516_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 363,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1589:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1589:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1516",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1615:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1589:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1574:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1517:109:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1666:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 369,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1642:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1335_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1648:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1862,
															"src": "1642:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:161:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 355,
												"id": 374,
												"nodeType": "Return",
												"src": "1498:180:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1319:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1389:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 352,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 350,
												"name": "ERC165",
												"nameLocations": [
													"1456:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1863,
												"src": "1456:6:2"
											},
											{
												"id": 351,
												"name": "IERC165",
												"nameLocations": [
													"1464:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1875,
												"src": "1464:7:2"
											}
										],
										"src": "1447:25:2"
									},
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1414:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1407:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 347,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1407:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:20:2"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1482:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:6:2"
									},
									"scope": 1335,
									"src": "1380:305:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1515
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "2159:28:2",
										"statements": [
											{
												"expression": {
													"id": 384,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "2176:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 383,
												"id": 385,
												"nodeType": "Return",
												"src": "2169:11:2"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "1691:388:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2093:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2097:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:2"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2144:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:2"
									},
									"scope": 1335,
									"src": "2084:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1396
									],
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "2333:46:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 397,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "2350:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 399,
														"indexExpression": {
															"id": 398,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2360:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2350:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 401,
													"indexExpression": {
														"id": 400,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "2364:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2350:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 396,
												"id": 402,
												"nodeType": "Return",
												"src": "2343:29:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "2193:49:2",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2266:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2291:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2283:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:29:2"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2324:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:2"
									},
									"scope": 1335,
									"src": "2247:132:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1409
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "2678:410:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 417,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2692:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2701:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2692:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 419,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "2711:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2715:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 430,
												"nodeType": "IfStatement",
												"src": "2688:121:2",
												"trueBody": {
													"id": 429,
													"nodeType": "Block",
													"src": "2723:86:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 423,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "2770:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2774:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2770:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 425,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 408,
																			"src": "2782:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2791:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2782:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 422,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "2744:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:54:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 428,
															"nodeType": "RevertStatement",
															"src": "2737:61:2"
														}
													]
												}
											},
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2836:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "2819:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 433,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2819:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 434,
															"nodeType": "ArrayTypeName",
															"src": "2819:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 439,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "2866:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2875:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2866:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2852:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 436,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2856:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 437,
															"nodeType": "ArrayTypeName",
															"src": "2856:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2819:63:2"
											},
											{
												"body": {
													"id": 469,
													"nodeType": "Block",
													"src": "2939:112:2",
													"statements": [
														{
															"expression": {
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 454,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "2953:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 456,
																	"indexExpression": {
																		"id": 455,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "2967:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2953:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 460,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "3010:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 458,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 408,
																					"src": "2982:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2991:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1698,
																				"src": "2982:27:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2982:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 464,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "3037:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 462,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 411,
																					"src": "3014:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3018:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1685,
																				"src": "3014:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3014:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 457,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "2972:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2972:68:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:87:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 468,
															"nodeType": "ExpressionStatement",
															"src": "2953:87:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2913:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 448,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2917:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2917:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2913:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 470,
												"initializationExpression": {
													"assignments": [
														444
													],
													"declarations": [
														{
															"constant": false,
															"id": 444,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2906:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 470,
															"src": "2898:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 443,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2898:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 446,
													"initialValue": {
														"hexValue": "30",
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2910:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2898:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2934:3:2",
														"subExpression": {
															"id": 451,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2936:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 453,
													"nodeType": "ExpressionStatement",
													"src": "2934:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2893:158:2"
											},
											{
												"expression": {
													"id": 471,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 435,
													"src": "3068:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 416,
												"id": 472,
												"nodeType": "Return",
												"src": "3061:20:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "2385:146:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2545:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2586:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2569:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 406,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2569:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 407,
													"nodeType": "ArrayTypeName",
													"src": "2569:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2621:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2604:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2604:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ArrayTypeName",
													"src": "2604:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2559:71:2"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2660:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 413,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 414,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:18:2"
									},
									"scope": 1335,
									"src": "2536:552:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1417
									],
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "3231:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 483,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "3260:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3274:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3284:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 482,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "3241:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "3241:52:2"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3094:57:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3165:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3191:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3183:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3206:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3201:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3201:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:33:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:2"
									},
									"scope": 1335,
									"src": "3156:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1427
									],
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "3463:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 500,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "3480:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 502,
														"indexExpression": {
															"id": 501,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "3499:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3480:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 504,
													"indexExpression": {
														"id": 503,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "3508:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3480:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 499,
												"id": 505,
												"nodeType": "Return",
												"src": "3473:44:2"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "3306:56:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3376:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3401:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3393:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3418:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3410:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:35:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3457:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3457:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:6:2"
									},
									"scope": 1335,
									"src": "3367:157:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "3704:238:2",
										"statements": [
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3722:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "3714:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 521,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3714:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 523,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "3731:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3714:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 526,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3757:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 527,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "3765:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3757:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3775:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 530,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "3793:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 531,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "3799:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 529,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "3776:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3776:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3757:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "3753:129:2",
												"trueBody": {
													"id": 540,
													"nodeType": "Block",
													"src": "3808:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 536,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "3858:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 537,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "3866:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 535,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "3829:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3829:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 539,
															"nodeType": "RevertStatement",
															"src": "3822:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3909:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "3915:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "3919:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 546,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "3923:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 547,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "3930:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "3891:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "3891:44:2"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "3530:56:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3600:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3625:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3617:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3639:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3631:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3651:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3643:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3670:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 517,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3670:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:72:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:2"
									},
									"scope": 1335,
									"src": "3591:351:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1457
									],
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "4198:245:2",
										"statements": [
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4216:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 596,
														"src": "4208:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 567,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4208:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 571,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 569,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "4225:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4251:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 573,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "4259:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4251:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4269:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 576,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "4287:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 577,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "4293:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 575,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "4270:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4270:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4251:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "4247:129:2",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "4302:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "4352:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 583,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "4360:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 581,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "4323:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 585,
															"nodeType": "RevertStatement",
															"src": "4316:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 589,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4408:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "4414:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "4418:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 592,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4423:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 593,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "4431:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 588,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "4385:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4385:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "4385:51:2"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "3948:61:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4023:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4062:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4054:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4084:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4076:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4113:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4096:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 557,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4096:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 558,
													"nodeType": "ArrayTypeName",
													"src": "4096:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4143:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4126:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 560,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4126:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 561,
													"nodeType": "ArrayTypeName",
													"src": "4126:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4172:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4159:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4159:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:138:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:0:2"
									},
									"scope": 1335,
									"src": "4014:429:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "5251:1174:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 611,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5265:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5265:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 613,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5279:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5279:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5265:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 624,
												"nodeType": "IfStatement",
												"src": "5261:117:2",
												"trueBody": {
													"id": 623,
													"nodeType": "Block",
													"src": "5294:84:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 617,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 605,
																			"src": "5341:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5345:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5341:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 619,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 608,
																			"src": "5353:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5360:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5353:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 616,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "5315:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:52:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 622,
															"nodeType": "RevertStatement",
															"src": "5308:59:2"
														}
													]
												}
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5396:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 749,
														"src": "5388:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 625,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5388:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 627,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "5407:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5388:31:2"
											},
											{
												"body": {
													"id": 710,
													"nodeType": "Block",
													"src": "5471:650:2",
													"statements": [
														{
															"assignments": [
																642
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 642,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5493:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 710,
																	"src": "5485:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 641,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5485:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 647,
															"initialValue": {
																"arguments": [
																	{
																		"id": 645,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5521:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 643,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "5498:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5502:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "5498:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5485:38:2"
														},
														{
															"assignments": [
																649
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 649,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5545:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 710,
																	"src": "5537:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 648,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5537:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 654,
															"initialValue": {
																"arguments": [
																	{
																		"id": 652,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5579:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 650,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "5553:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5560:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "5553:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5553:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5537:44:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 655,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "5600:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5616:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5608:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 656,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5608:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5608:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5600:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 693,
															"nodeType": "IfStatement",
															"src": "5596:420:2",
															"trueBody": {
																"id": 692,
																"nodeType": "Block",
																"src": "5620:396:2",
																"statements": [
																	{
																		"assignments": [
																			662
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 662,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5646:11:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 692,
																				"src": "5638:19:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5638:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 668,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 663,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 326,
																					"src": "5660:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 665,
																				"indexExpression": {
																					"id": 664,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "5670:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5660:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 667,
																			"indexExpression": {
																				"id": 666,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 600,
																				"src": "5674:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5660:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5638:41:2"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 669,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "5701:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 670,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "5715:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5701:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 680,
																		"nodeType": "IfStatement",
																		"src": "5697:129:2",
																		"trueBody": {
																			"id": 679,
																			"nodeType": "Block",
																			"src": "5722:104:2",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 673,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 600,
																								"src": "5778:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 674,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 662,
																								"src": "5784:11:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 675,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 649,
																								"src": "5797:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 676,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "5804:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 672,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 249,
																							"src": "5751:26:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 677,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5751:56:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 678,
																					"nodeType": "RevertStatement",
																					"src": "5744:63:2"
																				}
																			]
																		}
																	},
																	{
																		"id": 691,
																		"nodeType": "UncheckedBlock",
																		"src": "5843:159:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 689,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 681,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 326,
																								"src": "5942:9:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 684,
																							"indexExpression": {
																								"id": 682,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "5952:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5942:13:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 685,
																						"indexExpression": {
																							"id": 683,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 600,
																							"src": "5956:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5942:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 688,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 686,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 662,
																							"src": "5964:11:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 687,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 649,
																							"src": "5978:5:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5964:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5942:41:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 690,
																				"nodeType": "ExpressionStatement",
																				"src": "5942:41:2"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 694,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "6034:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6048:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6040:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 695,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6040:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6040:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6034:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 709,
															"nodeType": "IfStatement",
															"src": "6030:81:2",
															"trueBody": {
																"id": 708,
																"nodeType": "Block",
																"src": "6052:59:2",
																"statements": [
																	{
																		"expression": {
																			"id": 706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 700,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 326,
																						"src": "6070:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 703,
																					"indexExpression": {
																						"id": 701,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 642,
																						"src": "6080:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6070:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 704,
																				"indexExpression": {
																					"id": 702,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 602,
																					"src": "6084:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6070:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 705,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "6091:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6070:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 707,
																		"nodeType": "ExpressionStatement",
																		"src": "6070:26:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 634,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "5450:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 635,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5454:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5458:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5454:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5450:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 711,
												"initializationExpression": {
													"assignments": [
														631
													],
													"declarations": [
														{
															"constant": false,
															"id": 631,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5443:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 711,
															"src": "5435:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 630,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5435:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 633,
													"initialValue": {
														"hexValue": "30",
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5447:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5435:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5466:3:2",
														"subExpression": {
															"id": 638,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "5468:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 640,
													"nodeType": "ExpressionStatement",
													"src": "5466:3:2"
												},
												"nodeType": "ForStatement",
												"src": "5430:691:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 712,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "6135:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6139:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6135:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6149:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6135:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "6343:76:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 740,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6376:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 741,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "6386:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 742,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "6392:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6396:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 744,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "6401:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 739,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "6362:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6362:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "6357:51:2"
														}
													]
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "6131:288:2",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "6152:185:2",
													"statements": [
														{
															"assignments": [
																717
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 717,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6174:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 738,
																	"src": "6166:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 716,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6166:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 722,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6202:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 718,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6179:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6183:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "6179:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6166:38:2"
														},
														{
															"assignments": [
																724
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 724,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6226:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 738,
																	"src": "6218:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 729,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6260:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 725,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "6234:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6241:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "6234:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6234:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6218:44:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 731,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6296:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 732,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "6306:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 733,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "6312:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 734,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "6316:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 735,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "6320:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 730,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "6281:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6281:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 737,
															"nodeType": "EmitStatement",
															"src": "6276:50:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "4449:690:2",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5153:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5169:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5161:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5183:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5175:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5204:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5187:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 603,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5187:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 604,
													"nodeType": "ArrayTypeName",
													"src": "5187:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5226:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5209:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 606,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5209:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 607,
													"nodeType": "ArrayTypeName",
													"src": "5209:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:73:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5251:0:2"
									},
									"scope": 1335,
									"src": "5144:1281:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "7195:499:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 767,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "7213:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "7219:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "7223:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 770,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "7228:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 766,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "7205:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7205:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "7205:30:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "7249:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7263:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7255:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 774,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7255:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7255:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7249:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "7245:443:2",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "7267:421:2",
													"statements": [
														{
															"assignments": [
																780
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 780,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7289:8:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 823,
																	"src": "7281:16:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 783,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 781,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1711,
																	"src": "7300:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7300:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7281:31:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 784,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "7330:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7334:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7330:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7344:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7330:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 821,
																"nodeType": "Block",
																"src": "7571:107:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 813,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "7625:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 814,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "7635:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 815,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "7641:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 816,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "7645:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 817,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "7650:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 818,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "7658:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 812,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "7589:35:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7589:74:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 820,
																		"nodeType": "ExpressionStatement",
																		"src": "7589:74:2"
																	}
																]
															},
															"id": 822,
															"nodeType": "IfStatement",
															"src": "7326:352:2",
															"trueBody": {
																"id": 811,
																"nodeType": "Block",
																"src": "7347:218:2",
																"statements": [
																	{
																		"assignments": [
																			789
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 789,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7373:2:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "7365:10:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 788,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7365:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 794,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 792,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7401:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 790,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "7378:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7382:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1685,
																				"src": "7378:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7378:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7365:38:2"
																	},
																	{
																		"assignments": [
																			796
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 796,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7429:5:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "7421:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 795,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7421:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 801,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 799,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7463:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 797,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "7437:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7444:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1685,
																				"src": "7437:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7437:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7421:44:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 803,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "7514:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 804,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "7524:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 805,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "7530:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 806,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 789,
																					"src": "7534:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 807,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 796,
																					"src": "7538:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 808,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "7545:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 802,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1248,
																				"src": "7483:30:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7483:67:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 810,
																		"nodeType": "ExpressionStatement",
																		"src": "7483:67:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "6431:568:2",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7013:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7057:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7049:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7079:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7071:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7071:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7108:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7091:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 756,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7091:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 757,
													"nodeType": "ArrayTypeName",
													"src": "7091:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7138:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7121:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 759,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 760,
													"nodeType": "ArrayTypeName",
													"src": "7121:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7167:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7154:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 762,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7154:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:138:2"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:0:2"
									},
									"scope": 1335,
									"src": "7004:690:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "8259:355:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 840,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "8273:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8287:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 841,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8273:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "8269:88:2",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "8291:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8343:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8335:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 847,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8335:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8335:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 846,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "8312:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 852,
															"nodeType": "RevertStatement",
															"src": "8305:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 855,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "8370:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8386:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 856,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8378:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8378:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8370:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"nodeType": "IfStatement",
												"src": "8366:88:2",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "8390:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8440:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8432:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 862,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8432:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8432:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 861,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "8411:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8411:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 867,
															"nodeType": "RevertStatement",
															"src": "8404:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													874,
													877
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8481:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "8464:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 872,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8464:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 873,
															"nodeType": "ArrayTypeName",
															"src": "8464:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 877,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8503:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "8486:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 875,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8486:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 876,
															"nodeType": "ArrayTypeName",
															"src": "8486:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 882,
												"initialValue": {
													"arguments": [
														{
															"id": 879,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8532:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 880,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "8536:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 878,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "8513:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8463:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 884,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "8579:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "8585:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 886,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "8589:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 887,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "8594:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 888,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "8602:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 883,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "8552:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8552:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "8552:55:2"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "7700:446:2",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8160:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8186:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8178:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8200:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8192:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8212:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8204:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8224:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8216:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8244:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8231:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 836,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8231:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:72:2"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8259:0:2"
									},
									"scope": 1335,
									"src": "8151:463:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "9194:266:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 908,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "9208:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9222:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9214:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 909,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9214:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9214:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9208:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 922,
												"nodeType": "IfStatement",
												"src": "9204:88:2",
												"trueBody": {
													"id": 921,
													"nodeType": "Block",
													"src": "9226:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9278:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9270:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 915,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9270:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9270:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 914,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "9247:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9247:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 920,
															"nodeType": "RevertStatement",
															"src": "9240:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 923,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "9305:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9321:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9313:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 924,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9313:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9313:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9305:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "9301:88:2",
												"trueBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "9325:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9375:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9367:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 930,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9367:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9367:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 929,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "9346:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 935,
															"nodeType": "RevertStatement",
															"src": "9339:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "9425:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "9431:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "9435:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 942,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "9440:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 943,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "9448:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 938,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "9398:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9398:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "9398:55:2"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "8620:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9024:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9064:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9056:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9086:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9078:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9115:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9098:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 898,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 899,
													"nodeType": "ArrayTypeName",
													"src": "9098:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9145:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9128:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 901,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9128:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 902,
													"nodeType": "ArrayTypeName",
													"src": "9128:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9174:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9161:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9161:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9046:138:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9194:0:2"
									},
									"scope": 1335,
									"src": "9015:445:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "10338:30:2",
										"statements": [
											{
												"expression": {
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 953,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "10348:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 954,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "10355:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10348:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "10348:13:2"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "9466:811:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10291:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10313:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "10299:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 949,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10299:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10298:22:2"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:2"
									},
									"scope": 1335,
									"src": "10282:86:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "10828:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 970,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "10842:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10856:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10848:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 971,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10848:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10848:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10842:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "10838:88:2",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "10860:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10912:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10904:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 977,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10904:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10904:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 976,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "10881:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10881:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 982,
															"nodeType": "RevertStatement",
															"src": "10874:41:2"
														}
													]
												}
											},
											{
												"assignments": [
													989,
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 989,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10953:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10936:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 987,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10936:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 988,
															"nodeType": "ArrayTypeName",
															"src": "10936:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10975:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10958:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 990,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10958:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 991,
															"nodeType": "ArrayTypeName",
															"src": "10958:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "11004:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 995,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "11008:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "10985:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10985:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10935:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11059:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11051:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 999,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11051:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11051:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "11063:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "11067:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1005,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "11072:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1006,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "11080:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 998,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "11024:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11024:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "11024:61:2"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "10374:367:2",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10755:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10769:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10761:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10781:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10773:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10773:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10793:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10785:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10785:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10813:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10800:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10800:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:58:2"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10828:0:2"
									},
									"scope": 1335,
									"src": "10746:346:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "11630:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "11644:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11658:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11650:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11650:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11650:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11644:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1038,
												"nodeType": "IfStatement",
												"src": "11640:88:2",
												"trueBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "11662:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11714:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11706:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1031,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11706:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11706:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1030,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "11683:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1036,
															"nodeType": "RevertStatement",
															"src": "11676:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11764:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1040,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11764:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11764:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "11776:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "11780:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1046,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "11785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1047,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "11793:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1039,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "11737:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11737:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "11737:61:2"
											}
										]
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "11098:420:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11532:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11551:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11543:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11543:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11572:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11555:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1014,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11555:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1015,
													"nodeType": "ArrayTypeName",
													"src": "11555:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11594:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11577:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1017,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11577:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1018,
													"nodeType": "ArrayTypeName",
													"src": "11577:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11615:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11602:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11602:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11542:78:2"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:2"
									},
									"scope": 1335,
									"src": "11523:282:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "12164:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1061,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "12178:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12194:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12186:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1062,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12186:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12186:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12178:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"nodeType": "IfStatement",
												"src": "12174:88:2",
												"trueBody": {
													"id": 1074,
													"nodeType": "Block",
													"src": "12198:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12248:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12240:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1068,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12240:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12240:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1067,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "12219:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12219:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1073,
															"nodeType": "RevertStatement",
															"src": "12212:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													1080,
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1080,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12289:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "12272:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1078,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12272:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1079,
															"nodeType": "ArrayTypeName",
															"src": "12272:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12311:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "12294:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1081,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1082,
															"nodeType": "ArrayTypeName",
															"src": "12294:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"arguments": [
														{
															"id": 1085,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "12340:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1086,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "12344:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "12321:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12321:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12271:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "12387:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12401:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12393:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1091,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12393:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12393:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "12405:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1096,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "12410:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12418:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1089,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "12360:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "12360:61:2"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "11811:283:2",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12108:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12122:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12114:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12136:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12128:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12128:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12148:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12140:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12113:41:2"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12164:0:2"
									},
									"scope": 1335,
									"src": "12099:329:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "12874:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1113,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "12888:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12904:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12896:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1114,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12896:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12896:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12888:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "12884:88:2",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "12908:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12950:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1120,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12950:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12950:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1119,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "12929:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12929:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "RevertStatement",
															"src": "12922:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1129,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "13008:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13022:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13014:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1130,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13014:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13014:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "13026:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1135,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "13031:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13039:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1128,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "12981:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12981:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "12981:61:2"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "12434:345:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12793:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12812:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12804:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12804:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12835:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12818:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1105,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12818:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1106,
													"nodeType": "ArrayTypeName",
													"src": "12818:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12857:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12840:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1108,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12840:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1109,
													"nodeType": "ArrayTypeName",
													"src": "12840:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12803:61:2"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12874:0:2"
									},
									"scope": 1335,
									"src": "12784:265:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "13361:222:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1150,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "13375:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13395:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13387:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1151,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13387:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13387:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13375:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1164,
												"nodeType": "IfStatement",
												"src": "13371:94:2",
												"trueBody": {
													"id": 1163,
													"nodeType": "Block",
													"src": "13399:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13451:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13443:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1157,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13443:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13443:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1156,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "13420:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1162,
															"nodeType": "RevertStatement",
															"src": "13413:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1165,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "13474:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1168,
															"indexExpression": {
																"id": 1166,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "13493:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13474:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1169,
														"indexExpression": {
															"id": 1167,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13500:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13474:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1170,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "13512:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13474:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "13474:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1174,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "13550:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1175,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13557:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "13567:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1173,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "13535:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13535:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "EmitStatement",
												"src": "13530:46:2"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "13055:208:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13277:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13304:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13296:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13296:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13319:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13311:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13334:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13329:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13329:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13295:48:2"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13361:0:2"
									},
									"scope": 1335,
									"src": "13268:315:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "13953:782:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1196,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "13967:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13970:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13967:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13975:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13967:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13984:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13967:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1246,
												"nodeType": "IfStatement",
												"src": "13963:766:2",
												"trueBody": {
													"id": 1245,
													"nodeType": "Block",
													"src": "13987:742:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1225,
																		"nodeType": "Block",
																		"src": "14103:206:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1218,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1214,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1212,
																						"src": "14125:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1215,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1500,
																								"src": "14137:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1216,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14154:17:2",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1481,
																							"src": "14137:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1217,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14172:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14137:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14125:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1224,
																				"nodeType": "IfStatement",
																				"src": "14121:174:2",
																				"trueBody": {
																					"id": 1223,
																					"nodeType": "Block",
																					"src": "14182:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1220,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1187,
																										"src": "14273:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1219,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "14250:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1221,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14250:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1222,
																							"nodeType": "RevertStatement",
																							"src": "14243:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1226,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1213,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1212,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14093:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1226,
																				"src": "14086:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1211,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14086:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14085:17:2"
																	},
																	"src": "14077:232:2"
																},
																{
																	"block": {
																		"id": 1242,
																		"nodeType": "Block",
																		"src": "14338:381:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1233,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1230,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1228,
																							"src": "14360:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14367:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14360:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1232,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14377:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14360:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1240,
																					"nodeType": "Block",
																					"src": "14515:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14601:86:2",
																								"nodeType": "YulBlock",
																								"src": "14601:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14638:2:2",
																															"nodeType": "YulLiteral",
																															"src": "14638:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14642:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "14642:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14634:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "14634:3:2"
																													},
																													"nativeSrc": "14634:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "14634:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14657:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "14657:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14651:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "14651:5:2"
																													},
																													"nativeSrc": "14651:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "14651:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14627:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "14627:6:2"
																											},
																											"nativeSrc": "14627:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "14627:38:2"
																										},
																										"nativeSrc": "14627:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "14627:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1228,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14642:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1228,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14657:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1239,
																							"nodeType": "InlineAssembly",
																							"src": "14592:95:2"
																						}
																					]
																				},
																				"id": 1241,
																				"nodeType": "IfStatement",
																				"src": "14356:349:2",
																				"trueBody": {
																					"id": 1238,
																					"nodeType": "Block",
																					"src": "14380:129:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1235,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1187,
																										"src": "14487:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1234,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "14464:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1236,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14464:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1237,
																							"nodeType": "RevertStatement",
																							"src": "14457:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1243,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1229,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1228,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14330:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1243,
																				"src": "14317:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1227,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14317:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14316:21:2"
																	},
																	"src": "14310:409:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1205,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "14044:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1206,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "14054:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1207,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "14060:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1208,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "14064:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1209,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "14071:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1202,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "14022:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1201,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "14005:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14005:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1500",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14026:17:2",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1481,
																	"src": "14005:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14005:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1244,
															"nodeType": "TryStatement",
															"src": "14001:718:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "13589:167:2",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13770:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13818:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13810:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13844:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13836:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13866:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13858:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13886:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13878:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13906:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13898:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13934:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13921:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13921:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:144:2"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13953:0:2"
									},
									"scope": 1335,
									"src": "13761:974:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "15140:824:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1266,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "15154:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15157:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15154:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15162:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15154:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15171:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15154:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "15150:808:2",
												"trueBody": {
													"id": 1315,
													"nodeType": "Block",
													"src": "15174:784:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1295,
																		"nodeType": "Block",
																		"src": "15327:211:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1284,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1282,
																						"src": "15349:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1285,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1500,
																								"src": "15361:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1286,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15378:22:2",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1499,
																							"src": "15361:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1287,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15401:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15361:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15349:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1294,
																				"nodeType": "IfStatement",
																				"src": "15345:179:2",
																				"trueBody": {
																					"id": 1293,
																					"nodeType": "Block",
																					"src": "15411:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1290,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "15502:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1289,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "15479:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1291,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15479:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1292,
																							"nodeType": "RevertStatement",
																							"src": "15472:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1296,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1283,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1282,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15304:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1296,
																				"src": "15297:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1281,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15297:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15279:47:2"
																	},
																	"src": "15271:267:2"
																},
																{
																	"block": {
																		"id": 1312,
																		"nodeType": "Block",
																		"src": "15567:381:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1300,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1298,
																							"src": "15589:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1301,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15596:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15589:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15606:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15589:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1310,
																					"nodeType": "Block",
																					"src": "15744:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "15830:86:2",
																								"nodeType": "YulBlock",
																								"src": "15830:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "15867:2:2",
																															"nodeType": "YulLiteral",
																															"src": "15867:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "15871:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "15871:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "15863:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "15863:3:2"
																													},
																													"nativeSrc": "15863:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "15863:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "15886:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "15886:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "15880:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "15880:5:2"
																													},
																													"nativeSrc": "15880:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "15880:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "15856:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "15856:6:2"
																											},
																											"nativeSrc": "15856:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "15856:38:2"
																										},
																										"nativeSrc": "15856:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "15856:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1298,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15871:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1298,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15886:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1309,
																							"nodeType": "InlineAssembly",
																							"src": "15821:95:2"
																						}
																					]
																				},
																				"id": 1311,
																				"nodeType": "IfStatement",
																				"src": "15585:349:2",
																				"trueBody": {
																					"id": 1308,
																					"nodeType": "Block",
																					"src": "15609:129:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1305,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "15716:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1304,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "15693:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1306,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15693:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1307,
																							"nodeType": "RevertStatement",
																							"src": "15686:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1313,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1299,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1298,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15559:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1313,
																				"src": "15546:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1297,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15546:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15545:21:2"
																	},
																	"src": "15539:409:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1275,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "15236:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1276,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "15246:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1277,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "15252:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1278,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "15257:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1279,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "15265:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1272,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "15209:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1271,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "15192:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15192:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1500",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15213:22:2",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1499,
																	"src": "15192:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15192:78:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1314,
															"nodeType": "TryStatement",
															"src": "15188:760:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "14741:177:2",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14932:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14985:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "14977:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14977:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15011:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15003:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15003:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15033:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15062:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15045:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1256,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15045:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1257,
													"nodeType": "ArrayTypeName",
													"src": "15045:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15092:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15075:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1259,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15075:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1260,
													"nodeType": "ArrayTypeName",
													"src": "15075:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15121:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15108:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15108:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14967:164:2"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15140:0:2"
									},
									"scope": 1335,
									"src": "14923:1041:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "16238:691:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16300:623:2",
													"nodeType": "YulBlock",
													"src": "16300:623:2",
													"statements": [
														{
															"nativeSrc": "16358:21:2",
															"nodeType": "YulAssignment",
															"src": "16358:21:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16374:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16374:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16368:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "16368:5:2"
																},
																"nativeSrc": "16368:11:2",
																"nodeType": "YulFunctionCall",
																"src": "16368:11:2"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nativeSrc": "16358:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16358:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16436:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16436:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16444:1:2",
																		"nodeType": "YulLiteral",
																		"src": "16444:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16429:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16429:6:2"
																},
																"nativeSrc": "16429:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16429:17:2"
															},
															"nativeSrc": "16429:17:2",
															"nodeType": "YulExpressionStatement",
															"src": "16429:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nativeSrc": "16567:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16567:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16575:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16575:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16563:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16563:3:2"
																		},
																		"nativeSrc": "16563:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16563:17:2"
																	},
																	{
																		"name": "element1",
																		"nativeSrc": "16582:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "16582:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16556:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16556:6:2"
																},
																"nativeSrc": "16556:35:2",
																"nodeType": "YulFunctionCall",
																"src": "16556:35:2"
															},
															"nativeSrc": "16556:35:2",
															"nodeType": "YulExpressionStatement",
															"src": "16556:35:2"
														},
														{
															"nativeSrc": "16682:27:2",
															"nodeType": "YulAssignment",
															"src": "16682:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16696:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16696:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16704:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16704:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16692:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "16692:3:2"
																},
																"nativeSrc": "16692:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16692:17:2"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nativeSrc": "16682:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16682:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nativeSrc": "16729:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16729:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16737:1:2",
																		"nodeType": "YulLiteral",
																		"src": "16737:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16722:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16722:6:2"
																},
																"nativeSrc": "16722:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16722:17:2"
															},
															"nativeSrc": "16722:17:2",
															"nodeType": "YulExpressionStatement",
															"src": "16722:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16763:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16763:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16771:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16771:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16759:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:2"
																		},
																		"nativeSrc": "16759:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16759:17:2"
																	},
																	{
																		"name": "element2",
																		"nativeSrc": "16778:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "16778:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16752:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16752:6:2"
																},
																"nativeSrc": "16752:35:2",
																"nodeType": "YulFunctionCall",
																"src": "16752:35:2"
															},
															"nativeSrc": "16752:35:2",
															"nodeType": "YulExpressionStatement",
															"src": "16752:35:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16889:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16889:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16899:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16899:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16907:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16907:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16895:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16895:3:2"
																		},
																		"nativeSrc": "16895:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16895:17:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16882:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16882:6:2"
																},
																"nativeSrc": "16882:31:2",
																"nodeType": "YulFunctionCall",
																"src": "16882:31:2"
															},
															"nativeSrc": "16882:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "16882:31:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16358:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16436:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16567:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16696:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16682:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16729:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16763:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16899:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1321,
														"isOffset": false,
														"isSlot": false,
														"src": "16582:8:2",
														"valueSize": 1
													},
													{
														"declaration": 1323,
														"isOffset": false,
														"isSlot": false,
														"src": "16778:8:2",
														"valueSize": 1
													}
												],
												"id": 1332,
												"nodeType": "InlineAssembly",
												"src": "16291:632:2"
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "15970:105:2",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "16089:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "16125:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16117:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16117:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "16151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16107:58:2"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "16205:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16188:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1325,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16188:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1326,
													"nodeType": "ArrayTypeName",
													"src": "16188:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "16230:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16213:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1328,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16213:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1329,
													"nodeType": "ArrayTypeName",
													"src": "16213:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16187:50:2"
									},
									"scope": 1335,
									"src": "16080:849:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1336,
							"src": "727:16204:2",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "109:16823:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1458
						],
						"IERC165": [
							1875
						]
					},
					"id": 1459,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1459,
							"sourceUnit": 1876,
							"src": "136:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1338,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1875,
										"src": "144:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1341,
										"name": "IERC165",
										"nameLocations": [
											"358:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1875,
										"src": "358:7:3"
									},
									"id": 1342,
									"nodeType": "InheritanceSpecifier",
									"src": "358:7:3"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1340,
								"nodeType": "StructuredDocumentation",
								"src": "200:135:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 1458,
							"linearizedBaseContracts": [
								1458,
								1875
							],
							"name": "IERC1155",
							"nameLocation": "346:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "372:125:3",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1355,
									"name": "TransferSingle",
									"nameLocation": "508:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "539:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "523:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "565:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "549:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "587:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "571:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "599:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "591:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "611:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "603:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:95:3"
									},
									"src": "502:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "624:144:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1370,
									"name": "TransferBatch",
									"nameLocation": "779:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "818:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "802:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "852:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "836:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "866:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "904:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "894:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1363,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "894:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"nodeType": "ArrayTypeName",
													"src": "894:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "927:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "917:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1366,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "917:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1367,
													"nodeType": "ArrayTypeName",
													"src": "917:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:147:3"
									},
									"src": "773:167:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "946:147:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1379,
									"name": "ApprovalForAll",
									"nameLocation": "1104:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1135:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1119:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1160:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1144:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1175:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1170:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:66:3"
									},
									"src": "1098:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "1191:343:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1386,
									"name": "URI",
									"nameLocation": "1545:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1556:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1549:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1549:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1579:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1563:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:34:3"
									},
									"src": "1539:44:3"
								},
								{
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "1589:172:3",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1775:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1793:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1785:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1810:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1802:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:29:3"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1837:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:9:3"
									},
									"scope": 1458,
									"src": "1766:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "1852:188:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2054:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2097:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2078:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1398,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2078:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1399,
													"nodeType": "ArrayTypeName",
													"src": "2078:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2134:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2115:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1401,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2115:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1402,
													"nodeType": "ArrayTypeName",
													"src": "2115:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:75:3"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2167:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1405,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2167:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1406,
													"nodeType": "ArrayTypeName",
													"src": "2167:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:18:3"
									},
									"scope": 1458,
									"src": "2045:140:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "2191:248:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2453:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2479:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2471:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2494:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2489:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2489:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:33:3"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:3"
									},
									"scope": 1458,
									"src": "2444:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "2519:135:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2668:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2693:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2685:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2710:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2702:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:35:3"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2743:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2743:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:6:3"
									},
									"scope": 1458,
									"src": "2659:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "2755:910:3",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3679:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3704:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3696:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3718:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3710:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3730:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3722:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3742:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3734:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3764:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3749:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3749:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:74:3"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3778:0:3"
									},
									"scope": 1458,
									"src": "3670:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "3785:814:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4613:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4652:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4644:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4674:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4666:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4705:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4686:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1447,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4686:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1448,
													"nodeType": "ArrayTypeName",
													"src": "4686:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4737:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4718:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1450,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4718:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1451,
													"nodeType": "ArrayTypeName",
													"src": "4718:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4753:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4753:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4634:144:3"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4787:0:3"
									},
									"scope": 1458,
									"src": "4604:184:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1459,
							"src": "336:4454:3",
							"usedErrors": [],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "110:4681:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1875
						]
					},
					"id": 1501,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1460,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1501,
							"sourceUnit": 1876,
							"src": "144:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1461,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1875,
										"src": "152:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1464,
										"name": "IERC165",
										"nameLocations": [
											"357:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1875,
										"src": "357:7:4"
									},
									"id": 1465,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:4"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1463,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:4",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1500,
							"linearizedBaseContracts": [
								1500,
								1875
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "371:826:4",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1211:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1246:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1238:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1272:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1264:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1294:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1286:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1314:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1306:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1344:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1329:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1329:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:126:4"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1373:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1478,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:8:4"
									},
									"scope": 1500,
									"src": "1202:179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "1387:994:4",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2395:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2435:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2427:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2461:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2453:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2494:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2475:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1487,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2475:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1488,
													"nodeType": "ArrayTypeName",
													"src": "2475:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2526:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2507:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1490,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2507:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1491,
													"nodeType": "ArrayTypeName",
													"src": "2507:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2557:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2542:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2542:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:150:4"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2586:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2586:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:8:4"
									},
									"scope": 1500,
									"src": "2386:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1501,
							"src": "327:2269:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2479:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1458
						],
						"IERC1155MetadataURI": [
							1516
						]
					},
					"id": 1517,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1502,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1504,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1517,
							"sourceUnit": 1459,
							"src": "158:41:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1503,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1458,
										"src": "166:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1506,
										"name": "IERC1155",
										"nameLocations": [
											"399:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1458,
										"src": "399:8:5"
									},
									"id": 1507,
									"nodeType": "InheritanceSpecifier",
									"src": "399:8:5"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1505,
								"nodeType": "StructuredDocumentation",
								"src": "201:164:5",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 1516,
							"linearizedBaseContracts": [
								1516,
								1458,
								1875
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "376:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "414:192:5",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "620:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "624:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:12:5"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "659:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "659:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:15:5"
									},
									"scope": 1516,
									"src": "611:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1517,
							"src": "366:310:5",
							"usedErrors": [],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "132:545:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							1699
						],
						"Math": [
							2929
						],
						"StorageSlot": [
							1839
						]
					},
					"id": 1700,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1518,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1520,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1700,
							"sourceUnit": 1840,
							"src": "126:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1519,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1839,
										"src": "134:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1522,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1700,
							"sourceUnit": 2930,
							"src": "173:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1521,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2929,
										"src": "181:4:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1523,
								"nodeType": "StructuredDocumentation",
								"src": "212:63:6",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1699,
							"linearizedBaseContracts": [
								1699
							],
							"name": "Arrays",
							"nameLocation": "284:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1526,
									"libraryName": {
										"id": 1524,
										"name": "StorageSlot",
										"nameLocations": [
											"303:11:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1839,
										"src": "303:11:6"
									},
									"nodeType": "UsingForDirective",
									"src": "297:30:6",
									"typeName": {
										"id": 1525,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "843:834:6",
										"statements": [
											{
												"assignments": [
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "861:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "853:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1540,
												"initialValue": {
													"hexValue": "30",
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "867:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "853:15:6"
											},
											{
												"assignments": [
													1542
												],
												"declarations": [
													{
														"constant": false,
														"id": 1542,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "886:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "878:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1541,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "878:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1545,
												"initialValue": {
													"expression": {
														"id": 1543,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "893:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "899:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "893:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:27:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1546,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "920:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "928:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "920:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1552,
												"nodeType": "IfStatement",
												"src": "916:48:6",
												"trueBody": {
													"id": 1551,
													"nodeType": "Block",
													"src": "931:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "952:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1536,
															"id": 1550,
															"nodeType": "Return",
															"src": "945:8:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 1584,
													"nodeType": "Block",
													"src": "993:423:6",
													"statements": [
														{
															"assignments": [
																1557
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1557,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "1015:3:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1584,
																	"src": "1007:11:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1556,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1007:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1563,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1560,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1538,
																		"src": "1034:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1561,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1542,
																		"src": "1039:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1558,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2929,
																		"src": "1021:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2929_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1026:7:6",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2103,
																	"src": "1021:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1007:37:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1565,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1530,
																				"src": "1282:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1566,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1557,
																				"src": "1289:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1564,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1630,
																				1651,
																				1672
																			],
																			"referencedDeclaration": 1672,
																			"src": "1269:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1744_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:24:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1294:5:6",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1743,
																	"src": "1269:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1569,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "1302:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1269:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1582,
																"nodeType": "Block",
																"src": "1360:46:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1576,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1538,
																				"src": "1378:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1579,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1577,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1557,
																					"src": "1384:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1578,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1390:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1384:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1378:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1581,
																		"nodeType": "ExpressionStatement",
																		"src": "1378:13:6"
																	}
																]
															},
															"id": 1583,
															"nodeType": "IfStatement",
															"src": "1265:141:6",
															"trueBody": {
																"id": 1575,
																"nodeType": "Block",
																"src": "1311:43:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1571,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "1329:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1572,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1557,
																				"src": "1336:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1329:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1574,
																		"nodeType": "ExpressionStatement",
																		"src": "1329:10:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1553,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "981:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1554,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "987:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "981:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1585,
												"nodeType": "WhileStatement",
												"src": "974:442:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1586,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "1533:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1533:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1590,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1530,
																		"src": "1557:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1591,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "1564:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1570:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1564:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1589,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1630,
																		1651,
																		1672
																	],
																	"referencedDeclaration": 1672,
																	"src": "1544:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1744_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1544:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1743,
															"src": "1544:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1596,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "1582:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1544:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1533:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1606,
													"nodeType": "Block",
													"src": "1636:35:6",
													"statements": [
														{
															"expression": {
																"id": 1604,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "1657:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1536,
															"id": 1605,
															"nodeType": "Return",
															"src": "1650:10:6"
														}
													]
												},
												"id": 1607,
												"nodeType": "IfStatement",
												"src": "1529:142:6",
												"trueBody": {
													"id": 1603,
													"nodeType": "Block",
													"src": "1591:39:6",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1599,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "1612:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1612:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1536,
															"id": 1602,
															"nodeType": "Return",
															"src": "1605:14:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "333:407:6",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "754:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "787:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "769:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1528,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1529,
													"nodeType": "ArrayTypeName",
													"src": "769:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "802:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "794:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:42:6"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "834:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:9:6"
									},
									"scope": 1699,
									"src": "745:932:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "1993:459:6",
										"statements": [
											{
												"assignments": [
													1622
												],
												"declarations": [
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2011:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1629,
														"src": "2003:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1621,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:12:6"
											},
											{
												"AST": {
													"nativeSrc": "2316:92:6",
													"nodeType": "YulBlock",
													"src": "2316:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2337:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2337:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "2340:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "2340:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2330:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:6"
																},
																"nativeSrc": "2330:19:6",
																"nodeType": "YulFunctionCall",
																"src": "2330:19:6"
															},
															"nativeSrc": "2330:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "2330:19:6"
														},
														{
															"nativeSrc": "2362:36:6",
															"nodeType": "YulAssignment",
															"src": "2362:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2384:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2384:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2387:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "2374:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "2374:9:6"
																		},
																		"nativeSrc": "2374:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2394:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2394:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2370:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:6"
																},
																"nativeSrc": "2370:28:6",
																"nodeType": "YulFunctionCall",
																"src": "2370:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "2362:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1613,
														"isOffset": false,
														"isSlot": true,
														"src": "2340:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1615,
														"isOffset": false,
														"isSlot": false,
														"src": "2394:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1622,
														"isOffset": false,
														"isSlot": false,
														"src": "2362:4:6",
														"valueSize": 1
													}
												],
												"id": 1624,
												"nodeType": "InlineAssembly",
												"src": "2307:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1625,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "2424:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2429:14:6",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1761,
														"src": "2424:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1735_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1735_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1620,
												"id": 1628,
												"nodeType": "Return",
												"src": "2417:28:6"
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "1683:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1888:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1919:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1901:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1611,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1901:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1612,
													"nodeType": "ArrayTypeName",
													"src": "1901:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1932:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1924:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:36:6"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1960:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1735_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1618,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1617,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1960:11:6",
															"1972:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1735,
														"src": "1960:23:6"
													},
													"referencedDeclaration": 1735,
													"src": "1960:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1735_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:33:6"
									},
									"scope": 1699,
									"src": "1879:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "2768:459:6",
										"statements": [
											{
												"assignments": [
													1643
												],
												"declarations": [
													{
														"constant": false,
														"id": 1643,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2786:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1650,
														"src": "2778:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1642,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2778:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1644,
												"nodeType": "VariableDeclarationStatement",
												"src": "2778:12:6"
											},
											{
												"AST": {
													"nativeSrc": "3091:92:6",
													"nodeType": "YulBlock",
													"src": "3091:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3112:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3112:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3115:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3115:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3105:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:6"
																},
																"nativeSrc": "3105:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3105:19:6"
															},
															"nativeSrc": "3105:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3105:19:6"
														},
														{
															"nativeSrc": "3137:36:6",
															"nodeType": "YulAssignment",
															"src": "3137:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3159:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3159:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3162:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3162:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3149:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "3149:9:6"
																		},
																		"nativeSrc": "3149:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3169:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3169:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3145:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:6"
																},
																"nativeSrc": "3145:28:6",
																"nodeType": "YulFunctionCall",
																"src": "3145:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3137:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3137:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1634,
														"isOffset": false,
														"isSlot": true,
														"src": "3115:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1636,
														"isOffset": false,
														"isSlot": false,
														"src": "3169:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1643,
														"isOffset": false,
														"isSlot": false,
														"src": "3137:4:6",
														"valueSize": 1
													}
												],
												"id": 1645,
												"nodeType": "InlineAssembly",
												"src": "3082:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1646,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "3199:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3204:14:6",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1783,
														"src": "3199:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1741_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1741_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1641,
												"id": 1649,
												"nodeType": "Return",
												"src": "3192:28:6"
											}
										]
									},
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "2458:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2663:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2694:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "2676:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1632,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2676:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1633,
													"nodeType": "ArrayTypeName",
													"src": "2676:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2707:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "2699:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:36:6"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "2735:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1741_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1639,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1638,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2735:11:6",
															"2747:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1741,
														"src": "2735:23:6"
													},
													"referencedDeclaration": 1741,
													"src": "2735:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1741_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:33:6"
									},
									"scope": 1699,
									"src": "2654:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "3543:459:6",
										"statements": [
											{
												"assignments": [
													1664
												],
												"declarations": [
													{
														"constant": false,
														"id": 1664,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3561:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1671,
														"src": "3553:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1663,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1665,
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:12:6"
											},
											{
												"AST": {
													"nativeSrc": "3866:92:6",
													"nodeType": "YulBlock",
													"src": "3866:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3887:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3887:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3890:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3890:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3880:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:6"
																},
																"nativeSrc": "3880:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3880:19:6"
															},
															"nativeSrc": "3880:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3880:19:6"
														},
														{
															"nativeSrc": "3912:36:6",
															"nodeType": "YulAssignment",
															"src": "3912:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3934:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3937:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3937:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3924:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "3924:9:6"
																		},
																		"nativeSrc": "3924:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3944:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:6"
																},
																"nativeSrc": "3920:28:6",
																"nodeType": "YulFunctionCall",
																"src": "3920:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3912:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1655,
														"isOffset": false,
														"isSlot": true,
														"src": "3890:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1657,
														"isOffset": false,
														"isSlot": false,
														"src": "3944:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1664,
														"isOffset": false,
														"isSlot": false,
														"src": "3912:4:6",
														"valueSize": 1
													}
												],
												"id": 1666,
												"nodeType": "InlineAssembly",
												"src": "3857:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1667,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3974:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:14:6",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1794,
														"src": "3974:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1744_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1662,
												"id": 1670,
												"nodeType": "Return",
												"src": "3967:28:6"
											}
										]
									},
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "3233:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3438:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3469:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "3451:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1653,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3451:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1654,
													"nodeType": "ArrayTypeName",
													"src": "3451:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3482:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "3474:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:36:6"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "3510:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1660,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1659,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3510:11:6",
															"3522:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1744,
														"src": "3510:23:6"
													},
													"referencedDeclaration": 1744,
													"src": "3510:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:33:6"
									},
									"scope": 1699,
									"src": "3429:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "4303:98:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4322:73:6",
													"nodeType": "YulBlock",
													"src": "4322:73:6",
													"statements": [
														{
															"nativeSrc": "4336:49:6",
															"nodeType": "YulAssignment",
															"src": "4336:49:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4357:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4357:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4362:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4362:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4353:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4353:3:6"
																				},
																				"nativeSrc": "4353:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4353:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4373:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4373:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4378:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4378:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4369:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4369:3:6"
																				},
																				"nativeSrc": "4369:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4369:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:6"
																		},
																		"nativeSrc": "4349:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:35:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4343:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4343:5:6"
																},
																"nativeSrc": "4343:42:6",
																"nodeType": "YulFunctionCall",
																"src": "4343:42:6"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4336:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1676,
														"isOffset": false,
														"isSlot": false,
														"src": "4357:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1678,
														"isOffset": false,
														"isSlot": false,
														"src": "4373:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1681,
														"isOffset": false,
														"isSlot": false,
														"src": "4336:3:6",
														"valueSize": 1
													}
												],
												"id": 1683,
												"nodeType": "InlineAssembly",
												"src": "4313:82:6"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "4008:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4213:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4249:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "4232:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1674,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4232:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1675,
													"nodeType": "ArrayTypeName",
													"src": "4232:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4262:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "4254:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:35:6"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4298:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "4290:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:13:6"
									},
									"scope": 1699,
									"src": "4204:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "4702:98:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4721:73:6",
													"nodeType": "YulBlock",
													"src": "4721:73:6",
													"statements": [
														{
															"nativeSrc": "4735:49:6",
															"nodeType": "YulAssignment",
															"src": "4735:49:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4756:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4761:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4761:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4752:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4752:3:6"
																				},
																				"nativeSrc": "4752:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4752:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4772:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4772:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4777:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4777:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4768:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4768:3:6"
																				},
																				"nativeSrc": "4768:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4768:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4748:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:6"
																		},
																		"nativeSrc": "4748:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4748:35:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4742:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4742:5:6"
																},
																"nativeSrc": "4742:42:6",
																"nodeType": "YulFunctionCall",
																"src": "4742:42:6"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4735:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1689,
														"isOffset": false,
														"isSlot": false,
														"src": "4756:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1691,
														"isOffset": false,
														"isSlot": false,
														"src": "4772:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1694,
														"isOffset": false,
														"isSlot": false,
														"src": "4735:3:6",
														"valueSize": 1
													}
												],
												"id": 1696,
												"nodeType": "InlineAssembly",
												"src": "4712:82:6"
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "4407:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4612:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4648:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4631:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1687,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4631:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1688,
													"nodeType": "ArrayTypeName",
													"src": "4631:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4661:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4653:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:35:6"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4697:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4689:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:13:6"
									},
									"scope": 1699,
									"src": "4603:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1700,
							"src": "276:4526:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:4703:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1729
						]
					},
					"id": 1730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1701,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1702,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1729,
							"linearizedBaseContracts": [
								1729
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1707,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1706,
												"id": 1709,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1729,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1716,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1715,
												"id": 1718,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1729,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1727,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1724,
												"id": 1726,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1729,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1730,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1839
						]
					},
					"id": 1840,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1732,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:8",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1839,
							"linearizedBaseContracts": [
								1839
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1735,
									"members": [
										{
											"constant": false,
											"id": 1734,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1735,
											"src": "1300:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1733,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1271:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1738,
									"members": [
										{
											"constant": false,
											"id": 1737,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "1355:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1736,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1326:46:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1741,
									"members": [
										{
											"constant": false,
											"id": 1740,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1741,
											"src": "1407:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1739,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1378:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1744,
									"members": [
										{
											"constant": false,
											"id": 1743,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1744,
											"src": "1462:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1742,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1433:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1747,
									"members": [
										{
											"constant": false,
											"id": 1746,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1747,
											"src": "1516:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1745,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1488:47:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1750,
									"members": [
										{
											"constant": false,
											"id": 1749,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1750,
											"src": "1568:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1748,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1541:45:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "1768:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:8",
													"nodeType": "YulBlock",
													"src": "1830:38:8",
													"statements": [
														{
															"nativeSrc": "1844:14:8",
															"nodeType": "YulAssignment",
															"src": "1844:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:8",
																"nodeType": "YulIdentifier",
																"src": "1854:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1757,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1753,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:8",
														"valueSize": 1
													}
												],
												"id": 1759,
												"nodeType": "InlineAssembly",
												"src": "1821:47:8"
											}
										]
									},
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:8",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "1708:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1752,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:8"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "1745:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1735_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1756,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1755,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1735,
														"src": "1745:11:8"
													},
													"referencedDeclaration": 1735,
													"src": "1745:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1735_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:8"
									},
									"scope": 1839,
									"src": "1684:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1771,
										"nodeType": "Block",
										"src": "2056:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:8",
													"nodeType": "YulBlock",
													"src": "2118:38:8",
													"statements": [
														{
															"nativeSrc": "2132:14:8",
															"nodeType": "YulAssignment",
															"src": "2132:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:8",
																"nodeType": "YulIdentifier",
																"src": "2142:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1768,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1764,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:8",
														"valueSize": 1
													}
												],
												"id": 1770,
												"nodeType": "InlineAssembly",
												"src": "2109:47:8"
											}
										]
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:8",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "1996:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1763,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:8"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "2033:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1738_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1767,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1766,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1738,
														"src": "2033:11:8"
													},
													"referencedDeclaration": 1738,
													"src": "2033:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1738_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:8"
									},
									"scope": 1839,
									"src": "1972:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "2344:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:8",
													"nodeType": "YulBlock",
													"src": "2406:38:8",
													"statements": [
														{
															"nativeSrc": "2420:14:8",
															"nodeType": "YulAssignment",
															"src": "2420:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:8",
																"nodeType": "YulIdentifier",
																"src": "2430:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1779,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1775,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:8",
														"valueSize": 1
													}
												],
												"id": 1781,
												"nodeType": "InlineAssembly",
												"src": "2397:47:8"
											}
										]
									},
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:8",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "2284:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1774,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:8"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "2321:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1741_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1778,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1777,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1741,
														"src": "2321:11:8"
													},
													"referencedDeclaration": 1741,
													"src": "2321:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1741_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:8"
									},
									"scope": 1839,
									"src": "2260:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "2632:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:8",
													"nodeType": "YulBlock",
													"src": "2694:38:8",
													"statements": [
														{
															"nativeSrc": "2708:14:8",
															"nodeType": "YulAssignment",
															"src": "2708:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:8",
																"nodeType": "YulIdentifier",
																"src": "2718:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1790,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1786,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:8",
														"valueSize": 1
													}
												],
												"id": 1792,
												"nodeType": "InlineAssembly",
												"src": "2685:47:8"
											}
										]
									},
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:8",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "2572:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1785,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:8"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "2609:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1789,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1788,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1744,
														"src": "2609:11:8"
													},
													"referencedDeclaration": 1744,
													"src": "2609:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:8"
									},
									"scope": 1839,
									"src": "2548:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "2917:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:8",
													"nodeType": "YulBlock",
													"src": "2979:38:8",
													"statements": [
														{
															"nativeSrc": "2993:14:8",
															"nodeType": "YulAssignment",
															"src": "2993:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:8",
																"nodeType": "YulIdentifier",
																"src": "3003:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1801,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1797,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:8",
														"valueSize": 1
													}
												],
												"id": 1803,
												"nodeType": "InlineAssembly",
												"src": "2970:47:8"
											}
										]
									},
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:8",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "2858:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1796,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:8"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "2895:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1747_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1800,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1799,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1747,
														"src": "2895:10:8"
													},
													"referencedDeclaration": 1747,
													"src": "2895:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1747_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:8"
									},
									"scope": 1839,
									"src": "2835:188:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1815,
										"nodeType": "Block",
										"src": "3225:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:8",
													"nodeType": "YulBlock",
													"src": "3287:44:8",
													"statements": [
														{
															"nativeSrc": "3301:20:8",
															"nodeType": "YulAssignment",
															"src": "3301:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:8",
																"nodeType": "YulIdentifier",
																"src": "3311:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1812,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1808,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1814,
												"nodeType": "InlineAssembly",
												"src": "3278:53:8"
											}
										]
									},
									"documentation": {
										"id": 1806,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:8",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "3158:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1807,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:8"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "3203:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1747_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1811,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1810,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1747,
														"src": "3203:10:8"
													},
													"referencedDeclaration": 1747,
													"src": "3203:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1747_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:8"
									},
									"scope": 1839,
									"src": "3135:202:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "3513:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:8",
													"nodeType": "YulBlock",
													"src": "3575:38:8",
													"statements": [
														{
															"nativeSrc": "3589:14:8",
															"nodeType": "YulAssignment",
															"src": "3589:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:8",
																"nodeType": "YulIdentifier",
																"src": "3599:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1823,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:8",
														"valueSize": 1
													}
												],
												"id": 1825,
												"nodeType": "InlineAssembly",
												"src": "3566:47:8"
											}
										]
									},
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:8",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "3455:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1818,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:8"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "3492:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1750_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1822,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1821,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1750,
														"src": "3492:9:8"
													},
													"referencedDeclaration": 1750,
													"src": "3492:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1750_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:8"
									},
									"scope": 1839,
									"src": "3433:186:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1837,
										"nodeType": "Block",
										"src": "3816:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:8",
													"nodeType": "YulBlock",
													"src": "3878:44:8",
													"statements": [
														{
															"nativeSrc": "3892:20:8",
															"nodeType": "YulAssignment",
															"src": "3892:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:8",
																"nodeType": "YulIdentifier",
																"src": "3902:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1834,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1830,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1836,
												"nodeType": "InlineAssembly",
												"src": "3869:53:8"
											}
										]
									},
									"documentation": {
										"id": 1828,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:8",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "3751:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:8"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "3795:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1750_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1833,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1832,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1750,
														"src": "3795:9:8"
													},
													"referencedDeclaration": 1750,
													"src": "3795:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1750_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:8"
									},
									"scope": 1839,
									"src": "3729:199:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1840,
							"src": "1245:2685:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1863
						],
						"IERC165": [
							1875
						]
					},
					"id": 1864,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1841,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1843,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1864,
							"sourceUnit": 1876,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1842,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1875,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1845,
										"name": "IERC165",
										"nameLocations": [
											"687:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1875,
										"src": "687:7:9"
									},
									"id": 1846,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1844,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1863,
							"linearizedBaseContracts": [
								1863,
								1875
							],
							"name": "ERC165",
							"nameLocation": "677:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1874
									],
									"body": {
										"id": 1861,
										"nodeType": "Block",
										"src": "844:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1854,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1849,
														"src": "861:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1856,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1875,
																	"src": "881:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1875_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1875_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1855,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1875",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1858,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1853,
												"id": 1860,
												"nodeType": "Return",
												"src": "854:47:9"
											}
										]
									},
									"documentation": {
										"id": 1847,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "789:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1848,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:9"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "838:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:9"
									},
									"scope": 1863,
									"src": "762:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1864,
							"src": "659:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1875
						]
					},
					"id": 1876,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1865,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1866,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1875,
							"linearizedBaseContracts": [
								1875
							],
							"name": "IERC165",
							"nameLocation": "431:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1867,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1874,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "817:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1868,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:10"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "860:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:10"
									},
									"scope": 1875,
									"src": "790:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1876,
							"src": "421:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2929
						]
					},
					"id": 2930,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1877,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1878,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:11",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2929,
							"linearizedBaseContracts": [
								2929
							],
							"name": "Math",
							"nameLocation": "211:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:11",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1881,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:11"
									},
									"src": "277:29:11"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1886,
									"members": [
										{
											"id": 1882,
											"name": "Floor",
											"nameLocation": "336:5:11",
											"nodeType": "EnumValue",
											"src": "336:5:11"
										},
										{
											"id": 1883,
											"name": "Ceil",
											"nameLocation": "379:4:11",
											"nodeType": "EnumValue",
											"src": "379:4:11"
										},
										{
											"id": 1884,
											"name": "Trunc",
											"nameLocation": "421:5:11",
											"nodeType": "EnumValue",
											"src": "421:5:11"
										},
										{
											"id": 1885,
											"name": "Expand",
											"nameLocation": "451:6:11",
											"nodeType": "EnumValue",
											"src": "451:6:11"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:11",
									"nodeType": "EnumDefinition",
									"src": "312:169:11"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "661:140:11",
										"statements": [
											{
												"id": 1916,
												"nodeType": "UncheckedBlock",
												"src": "671:124:11",
												"statements": [
													{
														"assignments": [
															1899
														],
														"declarations": [
															{
																"constant": false,
																"id": 1899,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1916,
																"src": "695:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1898,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1903,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1900,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "707:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1901,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1891,
																"src": "711:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1904,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1899,
																"src": "730:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1905,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "734:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1911,
														"nodeType": "IfStatement",
														"src": "726:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1909,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1897,
															"id": 1910,
															"nodeType": "Return",
															"src": "737:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1913,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1899,
																	"src": "782:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1914,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1897,
														"id": 1915,
														"nodeType": "Return",
														"src": "768:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:11",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "612:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:11"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "646:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "652:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:11"
									},
									"scope": 2929,
									"src": "585:216:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1945,
										"nodeType": "Block",
										"src": "984:113:11",
										"statements": [
											{
												"id": 1944,
												"nodeType": "UncheckedBlock",
												"src": "994:97:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1930,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "1022:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1931,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "1026:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1937,
														"nodeType": "IfStatement",
														"src": "1018:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1935,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1929,
															"id": 1936,
															"nodeType": "Return",
															"src": "1029:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1939,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1921,
																		"src": "1074:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1940,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1923,
																		"src": "1078:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1942,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1929,
														"id": 1943,
														"nodeType": "Return",
														"src": "1060:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:11",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "924:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "935:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:11"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "969:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "975:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:11"
									},
									"scope": 2929,
									"src": "908:189:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1987,
										"nodeType": "Block",
										"src": "1283:417:11",
										"statements": [
											{
												"id": 1986,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1958,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1949,
																"src": "1551:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1965,
														"nodeType": "IfStatement",
														"src": "1547:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1963,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1957,
															"id": 1964,
															"nodeType": "Return",
															"src": "1559:16:11"
														}
													},
													{
														"assignments": [
															1967
														],
														"declarations": [
															{
																"constant": false,
																"id": 1967,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1986,
																"src": "1589:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1966,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1971,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1968,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1949,
																"src": "1601:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1969,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "1605:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1972,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1967,
																	"src": "1624:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1973,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1949,
																	"src": "1628:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1975,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "1633:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1981,
														"nodeType": "IfStatement",
														"src": "1620:33:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1979,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1957,
															"id": 1980,
															"nodeType": "Return",
															"src": "1636:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1983,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1967,
																	"src": "1681:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1984,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1957,
														"id": 1985,
														"nodeType": "Return",
														"src": "1667:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:11",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1223:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1234:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:11"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1268:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1953,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1274:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:11"
									},
									"scope": 2929,
									"src": "1207:493:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2015,
										"nodeType": "Block",
										"src": "1887:114:11",
										"statements": [
											{
												"id": 2014,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2000,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1993,
																"src": "1925:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2007,
														"nodeType": "IfStatement",
														"src": "1921:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2005,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1999,
															"id": 2006,
															"nodeType": "Return",
															"src": "1933:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2009,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1991,
																		"src": "1978:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2010,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1993,
																		"src": "1982:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2012,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1999,
														"id": 2013,
														"nodeType": "Return",
														"src": "1964:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:11",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1827:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1838:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:11"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1872:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1995,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1878:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:11"
									},
									"scope": 2929,
									"src": "1811:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "2198:114:11",
										"statements": [
											{
												"id": 2042,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2028,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2021,
																"src": "2236:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2035,
														"nodeType": "IfStatement",
														"src": "2232:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2033,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2027,
															"id": 2034,
															"nodeType": "Return",
															"src": "2244:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2037,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2019,
																		"src": "2289:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2038,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2021,
																		"src": "2293:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2040,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2027,
														"id": 2041,
														"nodeType": "Return",
														"src": "2275:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2017,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2138:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2149:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:11"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2183:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2023,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2189:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:11"
									},
									"scope": 2929,
									"src": "2122:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2061,
										"nodeType": "Block",
										"src": "2449:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2054,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2047,
															"src": "2466:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2055,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "2470:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2058,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2049,
														"src": "2478:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:11",
													"trueExpression": {
														"id": 2057,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2047,
														"src": "2474:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2053,
												"id": 2060,
												"nodeType": "Return",
												"src": "2459:20:11"
											}
										]
									},
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:11",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "2395:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "2406:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:11"
									},
									"returnParameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "2440:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:11"
									},
									"scope": 2929,
									"src": "2382:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2079,
										"nodeType": "Block",
										"src": "2624:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2072,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2065,
															"src": "2641:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2073,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "2645:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2076,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2067,
														"src": "2653:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:11",
													"trueExpression": {
														"id": 2075,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2065,
														"src": "2649:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2071,
												"id": 2078,
												"nodeType": "Return",
												"src": "2634:20:11"
											}
										]
									},
									"documentation": {
										"id": 2063,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:11",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "2570:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "2581:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:11"
									},
									"returnParameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "2615:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:11"
									},
									"scope": 2929,
									"src": "2557:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2102,
										"nodeType": "Block",
										"src": "2845:82:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2090,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "2900:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2091,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2085,
																	"src": "2904:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2093,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2094,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2083,
																		"src": "2910:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2095,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2085,
																		"src": "2914:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2097,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2089,
												"id": 2101,
												"nodeType": "Return",
												"src": "2892:28:11"
											}
										]
									},
									"documentation": {
										"id": 2081,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:11",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "2791:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "2802:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:11"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "2836:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:11"
									},
									"scope": 2929,
									"src": "2774:153:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2136,
										"nodeType": "Block",
										"src": "3219:260:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2113,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2108,
														"src": "3233:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2121,
												"nodeType": "IfStatement",
												"src": "3229:127:11",
												"trueBody": {
													"id": 2120,
													"nodeType": "Block",
													"src": "3241:115:11",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2116,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2106,
																	"src": "3340:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2117,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2108,
																	"src": "3344:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2112,
															"id": 2119,
															"nodeType": "Return",
															"src": "3333:12:11"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2122,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2106,
															"src": "3444:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2126,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2106,
																			"src": "3458:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2130,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2108,
																"src": "3467:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:11",
													"trueExpression": {
														"hexValue": "30",
														"id": 2125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2112,
												"id": 2135,
												"nodeType": "Return",
												"src": "3437:35:11"
											}
										]
									},
									"documentation": {
										"id": 2104,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:11",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "3165:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "3176:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:11"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "3210:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:11"
									},
									"scope": 2929,
									"src": "3148:331:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "3901:4018:11",
										"statements": [
											{
												"id": 2261,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:11",
												"statements": [
													{
														"assignments": [
															2150
														],
														"declarations": [
															{
																"constant": false,
																"id": 2150,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2261,
																"src": "4232:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2149,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2154,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2151,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "4248:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2152,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "4252:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:11"
													},
													{
														"assignments": [
															2156
														],
														"declarations": [
															{
																"constant": false,
																"id": 2156,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2261,
																"src": "4312:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2155,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2157,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:11"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:11",
															"nodeType": "YulBlock",
															"src": "4392:122:11",
															"statements": [
																{
																	"nativeSrc": "4410:30:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:11"
																				},
																				"nativeSrc": "4433:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:11"
																		},
																		"nativeSrc": "4420:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:11"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:11",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:11",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:11"
																				},
																				"nativeSrc": "4470:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:11"
																				},
																				"nativeSrc": "4486:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:11"
																		},
																		"nativeSrc": "4466:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2156,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:11",
																"valueSize": 1
															}
														],
														"id": 2158,
														"nodeType": "InlineAssembly",
														"src": "4383:131:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2159,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2156,
																"src": "4595:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2167,
														"nodeType": "IfStatement",
														"src": "4591:368:11",
														"trueBody": {
															"id": 2166,
															"nodeType": "Block",
															"src": "4607:352:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2162,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2150,
																			"src": "4925:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2163,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "4933:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2148,
																	"id": 2165,
																	"nodeType": "Return",
																	"src": "4918:26:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2168,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "5065:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2169,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2156,
																"src": "5080:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2175,
														"nodeType": "IfStatement",
														"src": "5061:88:11",
														"trueBody": {
															"id": 2174,
															"nodeType": "Block",
															"src": "5087:62:11",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2171,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1881,
																			"src": "5112:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2173,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:11"
																}
															]
														}
													},
													{
														"assignments": [
															2177
														],
														"declarations": [
															{
																"constant": false,
																"id": 2177,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 2261,
																"src": "5404:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2176,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2178,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:11"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:11",
															"nodeType": "YulBlock",
															"src": "5444:291:11",
															"statements": [
																{
																	"nativeSrc": "5513:38:11",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:11"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:11"
																		},
																		"nativeSrc": "5526:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:11"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:11",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:11",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:11"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:11"
																				},
																				"nativeSrc": "5653:20:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:11"
																		},
																		"nativeSrc": "5642:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:11",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:11"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:11"
																		},
																		"nativeSrc": "5700:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2156,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2156,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2177,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2177,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2177,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:11",
																"valueSize": 1
															}
														],
														"id": 2179,
														"nodeType": "InlineAssembly",
														"src": "5435:300:11"
													},
													{
														"assignments": [
															2181
														],
														"declarations": [
															{
																"constant": false,
																"id": 2181,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:11",
																"nodeType": "VariableDeclaration",
																"scope": 2261,
																"src": "5939:12:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2180,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2188,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2182,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "5954:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2184,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "5973:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:11"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:11",
															"nodeType": "YulBlock",
															"src": "6008:362:11",
															"statements": [
																{
																	"nativeSrc": "6073:37:11",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:11"
																		},
																		"nativeSrc": "6088:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:11"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:11",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:11"
																		},
																		"nativeSrc": "6186:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:11",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:11",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:11",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:11"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:11"
																						},
																						"nativeSrc": "6333:12:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:11"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:11"
																				},
																				"nativeSrc": "6329:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:11"
																		},
																		"nativeSrc": "6325:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:11"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:11",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2181,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2181,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2181,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2181,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2181,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:11",
																"valueSize": 1
															}
														],
														"id": 2189,
														"nodeType": "InlineAssembly",
														"src": "5999:371:11"
													},
													{
														"expression": {
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2190,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2150,
																"src": "6436:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2191,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2156,
																	"src": "6445:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2192,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2181,
																	"src": "6453:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2195,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:11"
													},
													{
														"assignments": [
															2197
														],
														"declarations": [
															{
																"constant": false,
																"id": 2197,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:11",
																"nodeType": "VariableDeclaration",
																"scope": 2261,
																"src": "6775:15:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2196,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2204,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2199,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "6798:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2201,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:11"
													},
													{
														"expression": {
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2205,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7031:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2207,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7046:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2208,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7060:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2212,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:11"
													},
													{
														"expression": {
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2213,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7100:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2215,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7115:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2216,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7129:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2220,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:11"
													},
													{
														"expression": {
															"id": 2227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2221,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7170:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2223,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7185:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2224,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7199:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2228,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:11"
													},
													{
														"expression": {
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2229,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7240:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2231,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7255:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2232,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7269:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2236,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:11"
													},
													{
														"expression": {
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2237,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7310:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2239,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7325:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2240,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7339:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2244,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:11"
													},
													{
														"expression": {
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2245,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7381:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2247,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7396:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2248,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7410:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2252,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:11"
													},
													{
														"expression": {
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2253,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2147,
																"src": "7851:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2254,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2150,
																	"src": "7860:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2255,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2197,
																	"src": "7868:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2258,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:11"
													},
													{
														"expression": {
															"id": 2259,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2147,
															"src": "7896:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2148,
														"id": 2260,
														"nodeType": "Return",
														"src": "7889:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2138,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:11",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3819:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3830:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3841:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:11"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3885:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:11"
									},
									"scope": 2929,
									"src": "3803:4116:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2305,
										"nodeType": "Block",
										"src": "8161:192:11",
										"statements": [
											{
												"assignments": [
													2279
												],
												"declarations": [
													{
														"constant": false,
														"id": 2279,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2305,
														"src": "8171:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2278,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2285,
												"initialValue": {
													"arguments": [
														{
															"id": 2281,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2266,
															"src": "8195:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2282,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2268,
															"src": "8198:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2283,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2270,
															"src": "8201:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2280,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2263,
															2306
														],
														"referencedDeclaration": 2263,
														"src": "8188:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2287,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2273,
																"src": "8244:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1886",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1886",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2286,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2928,
															"src": "8227:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1886_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2290,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "8264:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2291,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2268,
																	"src": "8267:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2292,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2270,
																	"src": "8270:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2289,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2302,
												"nodeType": "IfStatement",
												"src": "8223:101:11",
												"trueBody": {
													"id": 2301,
													"nodeType": "Block",
													"src": "8288:36:11",
													"statements": [
														{
															"expression": {
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2297,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2279,
																	"src": "8302:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2300,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2303,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2279,
													"src": "8340:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2277,
												"id": 2304,
												"nodeType": "Return",
												"src": "8333:13:11"
											}
										]
									},
									"documentation": {
										"id": 2264,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:11",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "8067:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "8078:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "8089:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "8110:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2272,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2271,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "8110:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "8110:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:11"
									},
									"returnParameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "8152:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:11"
									},
									"scope": 2929,
									"src": "8051:302:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2417,
										"nodeType": "Block",
										"src": "8644:1585:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2314,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2309,
														"src": "8658:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2320,
												"nodeType": "IfStatement",
												"src": "8654:45:11",
												"trueBody": {
													"id": 2319,
													"nodeType": "Block",
													"src": "8666:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2313,
															"id": 2318,
															"nodeType": "Return",
															"src": "8680:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2322
												],
												"declarations": [
													{
														"constant": false,
														"id": 2322,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2417,
														"src": "9378:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2321,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2331,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2325,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2309,
																			"src": "9406:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2324,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2585,
																			2620
																		],
																		"referencedDeclaration": 2585,
																		"src": "9401:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2329,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:11"
											},
											{
												"id": 2416,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:11",
												"statements": [
													{
														"expression": {
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2332,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "9839:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2333,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "9849:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2334,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "9858:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2335,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "9862:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2338,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2342,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:11"
													},
													{
														"expression": {
															"id": 2352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2343,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "9888:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2344,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "9898:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2347,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2345,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "9907:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2346,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "9911:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2349,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2353,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:11"
													},
													{
														"expression": {
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2354,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "9937:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2355,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "9947:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2356,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "9956:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2357,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "9960:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2360,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2364,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:11"
													},
													{
														"expression": {
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2365,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "9986:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2366,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "9996:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2367,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "10005:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2368,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "10009:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2371,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2375,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:11"
													},
													{
														"expression": {
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2376,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "10035:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2377,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "10045:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2378,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "10054:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2379,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "10058:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2386,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:11"
													},
													{
														"expression": {
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2387,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "10084:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2388,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "10094:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2389,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "10103:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2390,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "10107:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2393,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2397,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:11"
													},
													{
														"expression": {
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2398,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "10133:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2399,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "10143:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2400,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "10152:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2401,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "10156:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2404,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2408,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2410,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2322,
																	"src": "10193:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2411,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2309,
																		"src": "10201:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2412,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2322,
																		"src": "10205:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2409,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2080,
																"src": "10189:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2313,
														"id": 2415,
														"nodeType": "Return",
														"src": "10182:30:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2307,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:11",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "8601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:11"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "8635:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:11"
									},
									"scope": 2929,
									"src": "8587:1642:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2452,
										"nodeType": "Block",
										"src": "10405:164:11",
										"statements": [
											{
												"id": 2451,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:11",
												"statements": [
													{
														"assignments": [
															2430
														],
														"declarations": [
															{
																"constant": false,
																"id": 2430,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2451,
																"src": "10439:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2429,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2434,
														"initialValue": {
															"arguments": [
																{
																	"id": 2432,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2421,
																	"src": "10461:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2431,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2418,
																	2453
																],
																"referencedDeclaration": 2418,
																"src": "10456:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2435,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2430,
																"src": "10484:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2437,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2424,
																						"src": "10511:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2436,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2928,
																					"src": "10494:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1886_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2441,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2439,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2430,
																						"src": "10524:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2440,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2430,
																						"src": "10533:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2442,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2421,
																					"src": "10542:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2448,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2428,
														"id": 2450,
														"nodeType": "Return",
														"src": "10477:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2419,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:11",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "10343:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "10354:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2423,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2422,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "10354:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "10354:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:11"
									},
									"returnParameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "10396:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:11"
									},
									"scope": 2929,
									"src": "10329:240:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2584,
										"nodeType": "Block",
										"src": "10760:922:11",
										"statements": [
											{
												"assignments": [
													2462
												],
												"declarations": [
													{
														"constant": false,
														"id": 2462,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2584,
														"src": "10770:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2461,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2464,
												"initialValue": {
													"hexValue": "30",
													"id": 2463,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:11"
											},
											{
												"id": 2581,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2465,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "10826:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2479,
														"nodeType": "IfStatement",
														"src": "10822:99:11",
														"trueBody": {
															"id": 2478,
															"nodeType": "Block",
															"src": "10844:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "10862:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2473,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:11"
																},
																{
																	"expression": {
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2474,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "10893:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2477,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2480,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "10938:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2494,
														"nodeType": "IfStatement",
														"src": "10934:96:11",
														"trueBody": {
															"id": 2493,
															"nodeType": "Block",
															"src": "10955:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2485,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "10973:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2488,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:11"
																},
																{
																	"expression": {
																		"id": 2491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2489,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11003:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2492,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2495,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11047:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2509,
														"nodeType": "IfStatement",
														"src": "11043:96:11",
														"trueBody": {
															"id": 2508,
															"nodeType": "Block",
															"src": "11064:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2500,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "11082:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2503,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:11"
																},
																{
																	"expression": {
																		"id": 2506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2504,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11112:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2507,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2510,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11156:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2524,
														"nodeType": "IfStatement",
														"src": "11152:96:11",
														"trueBody": {
															"id": 2523,
															"nodeType": "Block",
															"src": "11173:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2515,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "11191:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2518,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:11"
																},
																{
																	"expression": {
																		"id": 2521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2519,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11221:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2522,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2525,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11265:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2539,
														"nodeType": "IfStatement",
														"src": "11261:93:11",
														"trueBody": {
															"id": 2538,
															"nodeType": "Block",
															"src": "11281:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2530,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "11299:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2533,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:11"
																},
																{
																	"expression": {
																		"id": 2536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2534,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11328:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2537,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2540,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11371:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2554,
														"nodeType": "IfStatement",
														"src": "11367:93:11",
														"trueBody": {
															"id": 2553,
															"nodeType": "Block",
															"src": "11387:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2545,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "11405:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2548,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:11"
																},
																{
																	"expression": {
																		"id": 2551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2549,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11434:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2552,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11477:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2569,
														"nodeType": "IfStatement",
														"src": "11473:93:11",
														"trueBody": {
															"id": 2568,
															"nodeType": "Block",
															"src": "11493:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2560,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "11511:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2563,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:11"
																},
																{
																	"expression": {
																		"id": 2566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2564,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11540:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2567,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2570,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11583:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2580,
														"nodeType": "IfStatement",
														"src": "11579:64:11",
														"trueBody": {
															"id": 2579,
															"nodeType": "Block",
															"src": "11599:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2575,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11617:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2578,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2582,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2462,
													"src": "11669:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2460,
												"id": 2583,
												"nodeType": "Return",
												"src": "11662:13:11"
											}
										]
									},
									"documentation": {
										"id": 2454,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:11",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "10713:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:11"
									},
									"returnParameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "10751:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:11"
									},
									"scope": 2929,
									"src": "10699:983:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2619,
										"nodeType": "Block",
										"src": "11915:168:11",
										"statements": [
											{
												"id": 2618,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:11",
												"statements": [
													{
														"assignments": [
															2597
														],
														"declarations": [
															{
																"constant": false,
																"id": 2597,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2618,
																"src": "11949:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2596,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2601,
														"initialValue": {
															"arguments": [
																{
																	"id": 2599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2588,
																	"src": "11971:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2598,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2585,
																	2620
																],
																"referencedDeclaration": 2585,
																"src": "11966:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2602,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2597,
																"src": "11998:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2604,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2591,
																						"src": "12025:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2603,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2928,
																					"src": "12008:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1886_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2610,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2608,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2606,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2607,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2597,
																						"src": "12043:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2609,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2588,
																					"src": "12052:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2615,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2595,
														"id": 2617,
														"nodeType": "Return",
														"src": "11991:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2586,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:11",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "11849:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "11864:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2590,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2589,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "11864:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "11864:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:11"
									},
									"returnParameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "11906:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:11"
									},
									"scope": 2929,
									"src": "11835:248:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2748,
										"nodeType": "Block",
										"src": "12276:854:11",
										"statements": [
											{
												"assignments": [
													2629
												],
												"declarations": [
													{
														"constant": false,
														"id": 2629,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2748,
														"src": "12286:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2628,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2631,
												"initialValue": {
													"hexValue": "30",
													"id": 2630,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:11"
											},
											{
												"id": 2745,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2632,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12342:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2648,
														"nodeType": "IfStatement",
														"src": "12338:103:11",
														"trueBody": {
															"id": 2647,
															"nodeType": "Block",
															"src": "12361:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2637,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12379:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2638,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2639,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2642,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:11"
																},
																{
																	"expression": {
																		"id": 2645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2643,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12414:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2646,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2649,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12458:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2665,
														"nodeType": "IfStatement",
														"src": "12454:103:11",
														"trueBody": {
															"id": 2664,
															"nodeType": "Block",
															"src": "12477:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2654,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12495:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2659,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:11"
																},
																{
																	"expression": {
																		"id": 2662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2660,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12530:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2663,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2666,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12574:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2682,
														"nodeType": "IfStatement",
														"src": "12570:103:11",
														"trueBody": {
															"id": 2681,
															"nodeType": "Block",
															"src": "12593:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2671,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12611:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2672,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2676,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:11"
																},
																{
																	"expression": {
																		"id": 2679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2677,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12646:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2680,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2683,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12690:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2699,
														"nodeType": "IfStatement",
														"src": "12686:100:11",
														"trueBody": {
															"id": 2698,
															"nodeType": "Block",
															"src": "12708:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2688,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12726:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2693,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:11"
																},
																{
																	"expression": {
																		"id": 2696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2694,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12760:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2697,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2700,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12803:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2716,
														"nodeType": "IfStatement",
														"src": "12799:100:11",
														"trueBody": {
															"id": 2715,
															"nodeType": "Block",
															"src": "12821:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2705,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12839:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2706,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2710,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:11"
																},
																{
																	"expression": {
																		"id": 2713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2711,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12873:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2714,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2717,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12916:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2733,
														"nodeType": "IfStatement",
														"src": "12912:100:11",
														"trueBody": {
															"id": 2732,
															"nodeType": "Block",
															"src": "12934:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2722,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12952:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2724,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2727,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:11"
																},
																{
																	"expression": {
																		"id": 2730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2728,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12986:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2731,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2734,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "13029:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2744,
														"nodeType": "IfStatement",
														"src": "13025:66:11",
														"trueBody": {
															"id": 2743,
															"nodeType": "Block",
															"src": "13047:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2739,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "13065:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2742,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2746,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2629,
													"src": "13117:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2627,
												"id": 2747,
												"nodeType": "Return",
												"src": "13110:13:11"
											}
										]
									},
									"documentation": {
										"id": 2621,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:11",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2749,
												"src": "12229:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:11"
									},
									"returnParameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2749,
												"src": "12267:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:11"
									},
									"scope": 2929,
									"src": "12214:916:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2783,
										"nodeType": "Block",
										"src": "13365:170:11",
										"statements": [
											{
												"id": 2782,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:11",
												"statements": [
													{
														"assignments": [
															2761
														],
														"declarations": [
															{
																"constant": false,
																"id": 2761,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2782,
																"src": "13399:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2760,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2765,
														"initialValue": {
															"arguments": [
																{
																	"id": 2763,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2752,
																	"src": "13422:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2762,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2749,
																	2784
																],
																"referencedDeclaration": 2749,
																"src": "13416:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2766,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2761,
																"src": "13449:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2768,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2755,
																						"src": "13476:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2767,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2928,
																					"src": "13459:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1886_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2772,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2770,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2771,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2761,
																						"src": "13495:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2773,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2752,
																					"src": "13504:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2779,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2759,
														"id": 2781,
														"nodeType": "Return",
														"src": "13442:76:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2750,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "13299:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "13314:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2754,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2753,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "13314:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "13314:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:11"
									},
									"returnParameters": {
										"id": 2759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "13356:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:11"
									},
									"scope": 2929,
									"src": "13284:251:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2870,
										"nodeType": "Block",
										"src": "13855:600:11",
										"statements": [
											{
												"assignments": [
													2793
												],
												"declarations": [
													{
														"constant": false,
														"id": 2793,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2870,
														"src": "13865:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2792,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2795,
												"initialValue": {
													"hexValue": "30",
													"id": 2794,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:11"
											},
											{
												"id": 2867,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2796,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "13921:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2810,
														"nodeType": "IfStatement",
														"src": "13917:98:11",
														"trueBody": {
															"id": 2809,
															"nodeType": "Block",
															"src": "13939:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2801,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2787,
																			"src": "13957:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2804,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:11"
																},
																{
																	"expression": {
																		"id": 2807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2805,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "13988:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2808,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2811,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "14032:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2825,
														"nodeType": "IfStatement",
														"src": "14028:95:11",
														"trueBody": {
															"id": 2824,
															"nodeType": "Block",
															"src": "14049:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2816,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2787,
																			"src": "14067:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2819,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:11"
																},
																{
																	"expression": {
																		"id": 2822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2820,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "14097:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2823,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2826,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "14140:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2840,
														"nodeType": "IfStatement",
														"src": "14136:95:11",
														"trueBody": {
															"id": 2839,
															"nodeType": "Block",
															"src": "14157:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2831,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2787,
																			"src": "14175:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2834,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:11"
																},
																{
																	"expression": {
																		"id": 2837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2835,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "14205:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2838,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2841,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "14248:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2855,
														"nodeType": "IfStatement",
														"src": "14244:95:11",
														"trueBody": {
															"id": 2854,
															"nodeType": "Block",
															"src": "14265:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2846,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2787,
																			"src": "14283:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2849,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:11"
																},
																{
																	"expression": {
																		"id": 2852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2850,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "14313:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2853,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2856,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "14356:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2866,
														"nodeType": "IfStatement",
														"src": "14352:64:11",
														"trueBody": {
															"id": 2865,
															"nodeType": "Block",
															"src": "14372:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2861,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "14390:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2864,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2868,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2793,
													"src": "14442:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2791,
												"id": 2869,
												"nodeType": "Return",
												"src": "14435:13:11"
											}
										]
									},
									"documentation": {
										"id": 2785,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:11",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "13808:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:11"
									},
									"returnParameters": {
										"id": 2791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "13846:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:11"
									},
									"scope": 2929,
									"src": "13792:663:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2908,
										"nodeType": "Block",
										"src": "14692:177:11",
										"statements": [
											{
												"id": 2907,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:11",
												"statements": [
													{
														"assignments": [
															2883
														],
														"declarations": [
															{
																"constant": false,
																"id": 2883,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2907,
																"src": "14726:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2882,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2887,
														"initialValue": {
															"arguments": [
																{
																	"id": 2885,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2874,
																	"src": "14750:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2884,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2871,
																	2909
																],
																"referencedDeclaration": 2871,
																"src": "14743:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2888,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2883,
																"src": "14777:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2890,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2877,
																						"src": "14804:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2889,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2928,
																					"src": "14787:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1886_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2897,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2892,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2895,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2893,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2883,
																									"src": "14823:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2894,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2896,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2898,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2874,
																					"src": "14838:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2904,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2881,
														"id": 2906,
														"nodeType": "Return",
														"src": "14770:82:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2872,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:11",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2909,
												"src": "14626:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2909,
												"src": "14641:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2876,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2875,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "14641:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "14641:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:11"
									},
									"returnParameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2909,
												"src": "14683:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:11"
									},
									"scope": 2929,
									"src": "14610:259:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2927,
										"nodeType": "Block",
										"src": "15067:48:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2920,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2913,
																	"src": "15090:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1886",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1886",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2918,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2924,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2917,
												"id": 2926,
												"nodeType": "Return",
												"src": "15077:31:11"
											}
										]
									},
									"documentation": {
										"id": 2910,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:11",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "15019:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2912,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2911,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "15019:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "15019:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:11"
									},
									"returnParameters": {
										"id": 2917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "15061:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2915,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:11"
									},
									"scope": 2929,
									"src": "14993:122:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2930,
							"src": "203:14914:11",
							"usedErrors": [
								1881
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:11"
				},
				"id": 11
			},
			"contracts/NftMint.sol": {
				"ast": {
					"absolutePath": "contracts/NftMint.sol",
					"exportedSymbols": {
						"Arrays": [
							1699
						],
						"Context": [
							1729
						],
						"ERC1155": [
							1335
						],
						"ERC165": [
							1863
						],
						"FractionalNFT": [
							3056
						],
						"IERC1155": [
							1458
						],
						"IERC1155Errors": [
							284
						],
						"IERC1155MetadataURI": [
							1516
						],
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1875
						],
						"Ownable": [
							147
						]
					},
					"id": 3057,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2931,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2932,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3057,
							"sourceUnit": 1336,
							"src": "60:59:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2933,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3057,
							"sourceUnit": 148,
							"src": "121:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2934,
										"name": "ERC1155",
										"nameLocations": [
											"203:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "203:7:12"
									},
									"id": 2935,
									"nodeType": "InheritanceSpecifier",
									"src": "203:7:12"
								},
								{
									"baseName": {
										"id": 2936,
										"name": "Ownable",
										"nameLocations": [
											"212:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "212:7:12"
									},
									"id": 2937,
									"nodeType": "InheritanceSpecifier",
									"src": "212:7:12"
								}
							],
							"canonicalName": "FractionalNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3056,
							"linearizedBaseContracts": [
								3056,
								147,
								1335,
								284,
								1516,
								1458,
								1863,
								1875,
								1729
							],
							"name": "FractionalNFT",
							"nameLocation": "186:13:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "bb62115e",
									"id": 2940,
									"mutability": "mutable",
									"name": "currentTokenID",
									"nameLocation": "242:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 3056,
									"src": "227:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2938,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "227:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2939,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "259:1:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2693ebf2",
									"id": 2944,
									"mutability": "mutable",
									"name": "tokenSupply",
									"nameLocation": "302:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 3056,
									"src": "267:46:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2943,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2941,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "275:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "267:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2942,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "286:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2955,
										"nodeType": "Block",
										"src": "429:2:12",
										"statements": []
									},
									"id": 2956,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f6d79746f6b656e2e636f6d2f6170692f746f6b656e2f7b69647d2e6a736f6e",
													"id": 2949,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "364:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_fd42e37e574d3160d6bf72b4767f7c9049458802dae3537f42a2e54dd3e11af5",
														"typeString": "literal_string \"https://mytoken.com/api/token/{id}.json\""
													},
													"value": "https://mytoken.com/api/token/{id}.json"
												}
											],
											"id": 2950,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2948,
												"name": "ERC1155",
												"nameLocations": [
													"356:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1335,
												"src": "356:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "356:50:12"
										},
										{
											"arguments": [
												{
													"id": 2952,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2946,
													"src": "415:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2953,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2951,
												"name": "Ownable",
												"nameLocations": [
													"407:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "407:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "407:21:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "342:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2956,
												"src": "334:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:22:12"
									},
									"returnParameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "429:0:12"
									},
									"scope": 3056,
									"src": "322:109:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2988,
										"nodeType": "Block",
										"src": "520:206:12",
										"statements": [
											{
												"assignments": [
													2966
												],
												"declarations": [
													{
														"constant": false,
														"id": 2966,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "539:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2988,
														"src": "531:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2965,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "531:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2968,
												"initialValue": {
													"id": 2967,
													"name": "currentTokenID",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2940,
													"src": "549:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "531:32:12"
											},
											{
												"expression": {
													"id": 2970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "574:16:12",
													"subExpression": {
														"id": 2969,
														"name": "currentTokenID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2940,
														"src": "574:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2971,
												"nodeType": "ExpressionStatement",
												"src": "574:16:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2973,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "607:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "611:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "607:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2975,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2966,
															"src": "619:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2976,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2958,
															"src": "628:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "643:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2972,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "601:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "601:45:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2979,
												"nodeType": "ExpressionStatement",
												"src": "601:45:12"
											},
											{
												"expression": {
													"id": 2984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2980,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2944,
															"src": "657:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2982,
														"indexExpression": {
															"id": 2981,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2966,
															"src": "669:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "657:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2983,
														"name": "initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2958,
														"src": "680:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "657:36:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2985,
												"nodeType": "ExpressionStatement",
												"src": "657:36:12"
											},
											{
												"expression": {
													"id": 2986,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2966,
													"src": "711:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2964,
												"id": 2987,
												"nodeType": "Return",
												"src": "704:14:12"
											}
										]
									},
									"functionSelector": "2d571cc4",
									"id": 2989,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2961,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2960,
												"name": "onlyOwner",
												"nameLocations": [
													"492:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "492:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "492:9:12"
										}
									],
									"name": "createToken",
									"nameLocation": "448:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2958,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "468:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2989,
												"src": "460:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:23:12"
									},
									"returnParameters": {
										"id": 2964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2989,
												"src": "511:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:9:12"
									},
									"scope": 3056,
									"src": "439:287:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3022,
										"nodeType": "Block",
										"src": "812:161:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3001,
																	"name": "tokenSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2944,
																	"src": "831:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 3003,
																"indexExpression": {
																	"id": 3002,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2993,
																	"src": "843:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "831:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "854:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "831:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20494420646f6573206e6f74206578697374",
															"id": 3006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "857:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f",
																"typeString": "literal_string \"Token ID does not exist\""
															},
															"value": "Token ID does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f",
																"typeString": "literal_string \"Token ID does not exist\""
															}
														],
														"id": 3000,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "823:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "823:60:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3008,
												"nodeType": "ExpressionStatement",
												"src": "823:60:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3010,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2991,
															"src": "900:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3011,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2993,
															"src": "904:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3012,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2995,
															"src": "913:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 3013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "921:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 3009,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "894:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 3014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "894:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3015,
												"nodeType": "ExpressionStatement",
												"src": "894:30:12"
											},
											{
												"expression": {
													"id": 3020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3016,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2944,
															"src": "935:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3018,
														"indexExpression": {
															"id": 3017,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2993,
															"src": "947:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "935:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 3019,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2995,
														"src": "959:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "935:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3021,
												"nodeType": "ExpressionStatement",
												"src": "935:30:12"
											}
										]
									},
									"functionSelector": "156e29f6",
									"id": 3023,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2998,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2997,
												"name": "onlyOwner",
												"nameLocations": [
													"802:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "802:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "802:9:12"
										}
									],
									"name": "mint",
									"nameLocation": "743:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2991,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "756:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 3023,
												"src": "748:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2993,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "768:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3023,
												"src": "760:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2995,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "785:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 3023,
												"src": "777:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:45:12"
									},
									"returnParameters": {
										"id": 2999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "812:0:12"
									},
									"scope": 3056,
									"src": "734:239:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3054,
										"nodeType": "Block",
										"src": "1051:174:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3034,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3025,
																		"src": "1080:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3035,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3027,
																		"src": "1086:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3033,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1070:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 3036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1070:24:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3037,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3029,
																"src": "1098:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1070:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e636520746f206275726e",
															"id": 3039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1106:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5",
																"typeString": "literal_string \"Insufficient balance to burn\""
															},
															"value": "Insufficient balance to burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5",
																"typeString": "literal_string \"Insufficient balance to burn\""
															}
														],
														"id": 3032,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1062:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1062:75:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3041,
												"nodeType": "ExpressionStatement",
												"src": "1062:75:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3043,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3025,
															"src": "1154:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3044,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3027,
															"src": "1160:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3045,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3029,
															"src": "1169:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3042,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "1148:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 3046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1148:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3047,
												"nodeType": "ExpressionStatement",
												"src": "1148:28:12"
											},
											{
												"expression": {
													"id": 3052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3048,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2944,
															"src": "1187:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3050,
														"indexExpression": {
															"id": 3049,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3027,
															"src": "1199:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1187:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 3051,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3029,
														"src": "1211:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1187:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3053,
												"nodeType": "ExpressionStatement",
												"src": "1187:30:12"
											}
										]
									},
									"functionSelector": "f5298aca",
									"id": 3055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "990:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3025,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1003:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 3055,
												"src": "995:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "995:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3027,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1017:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3055,
												"src": "1009:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3029,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1034:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 3055,
												"src": "1026:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "994:47:12"
									},
									"returnParameters": {
										"id": 3031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1051:0:12"
									},
									"scope": 3056,
									"src": "981:244:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3057,
							"src": "177:1051:12",
							"usedErrors": [
								13,
								18,
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": [
								24,
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "33:1197:12"
				},
				"id": 12
			}
		}
	}
}